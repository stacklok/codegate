# This workflow syncs the vector database
name: Sync vector DB

on:
  workflow_dispatch:

jobs:
  sync_db:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      AWS_REGION: us-east-1

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4    
    - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
      with:
        python-version: '3.12'    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install "."

    - name: Download git lfs dependencies
      run: |
          git lfs install
          git lfs pull

    - name: Configure AWS Credentials for S3
      uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_INSIGHT_DATA_IMPORT }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Download JSONL files from S3
      run: |
        echo "Downloading manifest.json from S3..."
        aws s3 cp s3://codegate-data-prod/manifest.json ./manifest.json --region $AWS_REGION
        echo "Manifest content:"
        cat manifest.json

        echo "Parsing manifest..."
        MALICIOUS_KEY=$(jq -r '.latest.malicious_packages' manifest.json)
        DEPRECATED_KEY=$(jq -r '.latest.deprecated_packages' manifest.json)
        ARCHIVED_KEY=$(jq -r '.latest.archived_packages' manifest.json)
        
        echo "Malicious key: $MALICIOUS_KEY"
        echo "Deprecated key: $DEPRECATED_KEY"
        echo "Archived key: $ARCHIVED_KEY"

        mkdir -p /tmp/jsonl-files
        
        # Download and map the S3 files to fixed names in /tmp/jsonl-files
        aws s3 cp s3://codegate-data-prod/$MALICIOUS_KEY /tmp/jsonl-files/malicious.jsonl --region $AWS_REGION
        aws s3 cp s3://codegate-data-prod/$DEPRECATED_KEY /tmp/jsonl-files/deprecated.jsonl --region $AWS_REGION
        aws s3 cp s3://codegate-data-prod/$ARCHIVED_KEY /tmp/jsonl-files/archived.jsonl --region $AWS_REGION

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
    
    - name: Add Poetry to PATH
      run: |
        echo "PATH=$HOME/.poetry/bin:$PATH" >> $GITHUB_ENV

    - name: Install dependencies with Poetry
      run: |
        poetry install

    - name: 'Run import_packages.py with poetry'
      run: |
        poetry run python scripts/import_packages.py --jsonl-dir /tmp/jsonl-files --vec-db-path /tmp/sqlite_data/vectordb.db

    - name: 'Upload SQLite Vector DB File'
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
      with:
        name: sqlite_data
        path: /tmp/sqlite_data/vectordb.db
        retention-days: 90
